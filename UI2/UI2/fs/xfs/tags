!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASSERT	xfs_linux.h	294;"	d
ASSERT	xfs_linux.h	302;"	d
ASSERT_ALWAYS	xfs_linux.h	290;"	d
ATTR_CREATE	xfs_attr.h	45;"	d
ATTR_DONTFOLLOW	xfs_attr.h	41;"	d
ATTR_ENTBASESIZE	xfs_attr.c	651;"	d	file:
ATTR_ENTRY	xfs_attr.h	93;"	d
ATTR_ENTSIZE	xfs_attr.c	653;"	d	file:
ATTR_KERNOTIME	xfs_attr.h	48;"	d
ATTR_KERNOVAL	xfs_attr.h	49;"	d
ATTR_MAX_VALUELEN	xfs_attr.h	66;"	d
ATTR_OP_GET	xfs_fs.h	380;"	d
ATTR_OP_REMOVE	xfs_fs.h	382;"	d
ATTR_OP_SET	xfs_fs.h	381;"	d
ATTR_REPLACE	xfs_attr.h	46;"	d
ATTR_RMTVALUE_MAPSIZE	xfs_attr.c	85;"	d	file:
ATTR_ROOT	xfs_attr.h	42;"	d
ATTR_SECURE	xfs_attr.h	44;"	d
ATTR_TRUST	xfs_attr.h	43;"	d
BBMASK	xfs_fs.h	500;"	d
BBSHIFT	xfs_fs.h	498;"	d
BBSIZE	xfs_fs.h	499;"	d
BBTOB	xfs_fs.h	503;"	d
BIT_TO_WORD_SHIFT	xfs_buf_item.h	60;"	d
BLKDEV_BB	xfs_linux.h	143;"	d
BLKDEV_IOSHIFT	xfs_linux.h	140;"	d
BLKDEV_IOSIZE	xfs_linux.h	141;"	d
BLK_AVG	xfs_log_priv.h	69;"	d
BLOCK_LSN	xfs_log.h	23;"	d
BMAP_ATTRFORK	xfs_bmap.h	149;"	d
BMAP_LEFT_CONTIG	xfs_bmap.h	141;"	d
BMAP_LEFT_DELAY	xfs_bmap.h	145;"	d
BMAP_LEFT_FILLING	xfs_bmap.h	143;"	d
BMAP_LEFT_VALID	xfs_bmap.h	147;"	d
BMAP_RIGHT_CONTIG	xfs_bmap.h	142;"	d
BMAP_RIGHT_DELAY	xfs_bmap.h	146;"	d
BMAP_RIGHT_FILLING	xfs_bmap.h	144;"	d
BMAP_RIGHT_VALID	xfs_bmap.h	148;"	d
BMBT_BLOCKCOUNT_BITLEN	xfs_bmap_btree.h	47;"	d
BMBT_EXNTFLAG_BITLEN	xfs_bmap_btree.h	44;"	d
BMBT_STARTBLOCK_BITLEN	xfs_bmap_btree.h	46;"	d
BMBT_STARTOFF_BITLEN	xfs_bmap_btree.h	45;"	d
BMV_IF_ATTRFORK	xfs_fs.h	113;"	d
BMV_IF_DELALLOC	xfs_fs.h	116;"	d
BMV_IF_NO_DMAPI_READ	xfs_fs.h	114;"	d
BMV_IF_NO_HOLES	xfs_fs.h	117;"	d
BMV_IF_PREALLOC	xfs_fs.h	115;"	d
BMV_IF_VALID	xfs_fs.h	118;"	d
BMV_OF_DELALLOC	xfs_fs.h	124;"	d
BMV_OF_LAST	xfs_fs.h	125;"	d
BMV_OF_PREALLOC	xfs_fs.h	123;"	d
BROKEN_X86_ALIGNMENT	xfs_ioctl32.h	40;"	d
BTOBB	xfs_fs.h	501;"	d
BTOBBT	xfs_fs.h	502;"	d
BUF_ITEM	xfs_buf_item.c	/^static inline struct xfs_buf_log_item *BUF_ITEM(struct xfs_log_item *lip)$/;"	f	file:
BULKSTAT_RV_DIDONE	xfs_itable.h	37;"	d
BULKSTAT_RV_GIVEUP	xfs_itable.h	38;"	d
BULKSTAT_RV_NOTHING	xfs_itable.h	36;"	d
B_FALSE	xfs_types.h	/^typedef enum { B_FALSE,B_TRUE }	boolean_t;$/;"	e	enum:__anon33
B_TRUE	xfs_types.h	/^typedef enum { B_FALSE,B_TRUE }	boolean_t;$/;"	e	enum:__anon33
CREATE_TRACE_POINTS	xfs_trace.c	55;"	d	file:
CYCLE_LSN	xfs_log.h	22;"	d
CYCLE_LSN_DISK	xfs_log.h	26;"	d
DEBUG	xfs.h	23;"	d
DEFINE_ALLOC_EVENT	xfs_trace.h	1381;"	d
DEFINE_ATTR_LIST_EVENT	xfs_trace.h	86;"	d
DEFINE_BMAP_EVENT	xfs_trace.h	268;"	d
DEFINE_BUF_EVENT	xfs_trace.h	313;"	d
DEFINE_BUF_FLAGS_EVENT	xfs_trace.h	384;"	d
DEFINE_BUF_ITEM_EVENT	xfs_trace.h	478;"	d
DEFINE_BUSY_EVENT	xfs_trace.h	1160;"	d
DEFINE_DIR2_EVENT	xfs_trace.h	1445;"	d
DEFINE_DIR2_SPACE_EVENT	xfs_trace.h	1497;"	d
DEFINE_DISCARD_EVENT	xfs_trace.h	1742;"	d
DEFINE_DQUOT_EVENT	xfs_trace.h	729;"	d
DEFINE_INODE_EVENT	xfs_trace.h	557;"	d
DEFINE_IOMAP_EVENT	xfs_trace.h	1002;"	d
DEFINE_IREF_EVENT	xfs_trace.h	614;"	d
DEFINE_ITRUNC_EVENT	xfs_trace.h	1072;"	d
DEFINE_LOCK_EVENT	xfs_trace.h	531;"	d
DEFINE_LOGGRANT_EVENT	xfs_trace.h	823;"	d
DEFINE_LOG_ITEM_EVENT	xfs_trace.h	869;"	d
DEFINE_LOG_RECOVER_BUF_ITEM	xfs_trace.h	1659;"	d
DEFINE_LOG_RECOVER_INO_ITEM	xfs_trace.h	1710;"	d
DEFINE_LOG_RECOVER_ITEM	xfs_trace.h	1618;"	d
DEFINE_NAMESPACE_EVENT	xfs_trace.h	643;"	d
DEFINE_PAGE_EVENT	xfs_trace.h	955;"	d
DEFINE_PERAG_REF_EVENT	xfs_trace.h	122;"	d
DEFINE_RW_EVENT	xfs_trace.h	909;"	d
DEFINE_SIMPLE_IO_EVENT	xfs_trace.h	1041;"	d
DEFINE_SWAPEXT_EVENT	xfs_trace.h	1577;"	d
DELAYSTARTBLOCK	xfs_bmap.h	99;"	d
DI_MAX_FLUSH	xfs_dinode.h	75;"	d
DQFLAGTO_TYPESTR	xfs_quota_priv.h	49;"	d
DQUOT_ITEM	xfs_dquot_item.c	/^static inline struct xfs_dq_logitem *DQUOT_ITEM(struct xfs_log_item *lip)$/;"	f	file:
DSTARTBLOCKMASK	xfs_bmap_btree.h	68;"	d
DSTARTBLOCKMASKBITS	xfs_bmap_btree.h	65;"	d
EFD_ITEM	xfs_extfree_item.c	/^static inline struct xfs_efd_log_item *EFD_ITEM(struct xfs_log_item *lip)$/;"	f	file:
EFI_ITEM	xfs_extfree_item.c	/^static inline struct xfs_efi_log_item *EFI_ITEM(struct xfs_log_item *lip)$/;"	f	file:
EFSCORRUPTED	xfs_linux.h	147;"	d
ENOATTR	xfs_linux.h	145;"	d
EWRONGFS	xfs_linux.h	146;"	d
FI_NONE	xfs_vnode.h	49;"	d
FI_REMAPF	xfs_vnode.h	50;"	d
FI_REMAPF_LOCKED	xfs_vnode.h	51;"	d
FSX_EXTSIZE	xfs_ioctl.c	896;"	d	file:
FSX_NONBLOCK	xfs_ioctl.c	898;"	d	file:
FSX_PROJID	xfs_ioctl.c	895;"	d	file:
FSX_XFLAGS	xfs_ioctl.c	897;"	d	file:
HAVE_PERCPU_SB	xfs_linux.h	101;"	d
HAVE_PERCPU_SB	xfs_linux.h	103;"	d
HOLESTARTBLOCK	xfs_bmap.h	100;"	d
IHOLD	xfs_inode.h	527;"	d
INODE_ITEM	xfs_inode_item.c	/^static inline struct xfs_inode_log_item *INODE_ITEM(struct xfs_log_item *lip)$/;"	f	file:
IOP_COMMITTED	xfs_trans.h	362;"	d
IOP_COMMITTING	xfs_trans.h	365;"	d
IOP_FORMAT	xfs_trans.h	357;"	d
IOP_PIN	xfs_trans.h	358;"	d
IOP_PUSH	xfs_trans.h	363;"	d
IOP_PUSHBUF	xfs_trans.h	364;"	d
IOP_SIZE	xfs_trans.h	356;"	d
IOP_TRYLOCK	xfs_trans.h	360;"	d
IOP_UNLOCK	xfs_trans.h	361;"	d
IOP_UNPIN	xfs_trans.h	359;"	d
IO_DELALLOC	xfs_aops.h	/^	IO_DELALLOC,	\/* mapping covers delalloc region *\/$/;"	e	enum:__anon4
IO_DIRECT	xfs_aops.h	/^	IO_DIRECT = 0,	\/* special case for direct I\/O ioends *\/$/;"	e	enum:__anon4
IO_INVIS	xfs_vnode.h	40;"	d
IO_ISDIRECT	xfs_vnode.h	39;"	d
IO_OVERWRITE	xfs_aops.h	/^	IO_OVERWRITE,	\/* mapping covers already allocated extent *\/$/;"	e	enum:__anon4
IO_UNWRITTEN	xfs_aops.h	/^	IO_UNWRITTEN,	\/* mapping covers allocated but uninitialized data *\/$/;"	e	enum:__anon4
IRELE	xfs_inode.h	534;"	d
ISUNWRITTEN	xfs_bmap_btree.h	114;"	d
ISVALID	xfs_bmap.c	2030;"	d	file:
ISVALID	xfs_bmap.c	2165;"	d	file:
ITEM_TYPE	xfs_log_recover.h	55;"	d
KM_MAYFAIL	kmem.h	33;"	d
KM_NOFS	kmem.h	32;"	d
KM_NOSLEEP	kmem.h	31;"	d
KM_SLEEP	kmem.h	30;"	d
KM_ZONE_HWALIGN	kmem.h	77;"	d
KM_ZONE_RECLAIM	kmem.h	78;"	d
KM_ZONE_SPREAD	kmem.h	79;"	d
LASTREC_DELREC	xfs_btree.h	209;"	d
LASTREC_INSREC	xfs_btree.h	208;"	d
LASTREC_UPDATE	xfs_btree.h	207;"	d
LEFT	xfs_bmap.c	1464;"	d	file:
LEFT	xfs_bmap.c	427;"	d	file:
LEFT	xfs_bmap.c	939;"	d	file:
LEFT	xfs_bmap.c	982;"	d	file:
LOG_ITEM_BATCH_SIZE	xfs_trans.c	1266;"	d	file:
MAX	xfs_linux.h	156;"	d
MAXAEXTNUM	xfs_types.h	128;"	d
MAXEXTLEN	xfs_types.h	126;"	d
MAXEXTNUM	xfs_types.h	127;"	d
MAXNAMELEN	xfs_types.h	140;"	d
MAXPATHLEN	xfs_linux.h	153;"	d
MIN	xfs_linux.h	155;"	d
MINABTPTRS	xfs_types.h	134;"	d
MINDBTPTRS	xfs_types.h	133;"	d
MNTOPT_64BITINODE	xfs_super.c	91;"	d	file:
MNTOPT_ALLOCSIZE	xfs_super.c	86;"	d	file:
MNTOPT_ATTR2	xfs_super.c	97;"	d	file:
MNTOPT_BARRIER	xfs_super.c	88;"	d	file:
MNTOPT_BIOSIZE	xfs_super.c	74;"	d	file:
MNTOPT_BSDGROUPS	xfs_super.c	84;"	d	file:
MNTOPT_DELAYLOG	xfs_super.c	112;"	d	file:
MNTOPT_DISCARD	xfs_super.c	114;"	d	file:
MNTOPT_FILESTREAM	xfs_super.c	99;"	d	file:
MNTOPT_GQUOTA	xfs_super.c	106;"	d	file:
MNTOPT_GQUOTANOENF	xfs_super.c	109;"	d	file:
MNTOPT_GRPID	xfs_super.c	82;"	d	file:
MNTOPT_GRPQUOTA	xfs_super.c	103;"	d	file:
MNTOPT_IKEEP	xfs_super.c	92;"	d	file:
MNTOPT_LARGEIO	xfs_super.c	94;"	d	file:
MNTOPT_LOGBSIZE	xfs_super.c	71;"	d	file:
MNTOPT_LOGBUFS	xfs_super.c	70;"	d	file:
MNTOPT_LOGDEV	xfs_super.c	72;"	d	file:
MNTOPT_MTPT	xfs_super.c	81;"	d	file:
MNTOPT_NOALIGN	xfs_super.c	76;"	d	file:
MNTOPT_NOATTR2	xfs_super.c	98;"	d	file:
MNTOPT_NOBARRIER	xfs_super.c	90;"	d	file:
MNTOPT_NODELAYLOG	xfs_super.c	113;"	d	file:
MNTOPT_NODISCARD	xfs_super.c	115;"	d	file:
MNTOPT_NOGRPID	xfs_super.c	83;"	d	file:
MNTOPT_NOIKEEP	xfs_super.c	93;"	d	file:
MNTOPT_NOLARGEIO	xfs_super.c	95;"	d	file:
MNTOPT_NOQUOTA	xfs_super.c	101;"	d	file:
MNTOPT_NORECOVERY	xfs_super.c	87;"	d	file:
MNTOPT_NOUUID	xfs_super.c	80;"	d	file:
MNTOPT_PQUOTA	xfs_super.c	107;"	d	file:
MNTOPT_PQUOTANOENF	xfs_super.c	110;"	d	file:
MNTOPT_PRJQUOTA	xfs_super.c	104;"	d	file:
MNTOPT_QUOTA	xfs_super.c	100;"	d	file:
MNTOPT_QUOTANOENF	xfs_super.c	111;"	d	file:
MNTOPT_RTDEV	xfs_super.c	73;"	d	file:
MNTOPT_SUNIT	xfs_super.c	78;"	d	file:
MNTOPT_SWALLOC	xfs_super.c	77;"	d	file:
MNTOPT_SWIDTH	xfs_super.c	79;"	d	file:
MNTOPT_SYSVGROUPS	xfs_super.c	85;"	d	file:
MNTOPT_UQUOTA	xfs_super.c	105;"	d	file:
MNTOPT_UQUOTANOENF	xfs_super.c	108;"	d	file:
MNTOPT_USRQUOTA	xfs_super.c	102;"	d	file:
MNTOPT_WSYNC	xfs_super.c	75;"	d	file:
NBBY	xfs_linux.h	134;"	d
NBWORD	xfs_buf_item.h	61;"	d
NULLAGBLOCK	xfs_types.h	117;"	d
NULLAGINO	xfs_inum.h	32;"	d
NULLAGNUMBER	xfs_types.h	118;"	d
NULLCOMMITLSN	xfs_types.h	121;"	d
NULLDATAOFF	xfs_dir2_format.h	42;"	d
NULLDFILOFF	xfs_types.h	110;"	d
NULLDFSBNO	xfs_types.h	107;"	d
NULLDRFSBNO	xfs_types.h	108;"	d
NULLDRTBNO	xfs_types.h	109;"	d
NULLEXTNUM	xfs_types.h	119;"	d
NULLFILEOFF	xfs_types.h	115;"	d
NULLFSBLOCK	xfs_types.h	112;"	d
NULLFSINO	xfs_inum.h	31;"	d
NULLRFSBLOCK	xfs_types.h	113;"	d
NULLRTBLOCK	xfs_types.h	114;"	d
Opt_barrier	xfs_super.c	/^	Opt_barrier, Opt_nobarrier, Opt_err$/;"	e	enum:__anon31	file:
Opt_err	xfs_super.c	/^	Opt_barrier, Opt_nobarrier, Opt_err$/;"	e	enum:__anon31	file:
Opt_nobarrier	xfs_super.c	/^	Opt_barrier, Opt_nobarrier, Opt_err$/;"	e	enum:__anon31	file:
PREV	xfs_bmap.c	1466;"	d	file:
PREV	xfs_bmap.c	429;"	d	file:
PREV	xfs_bmap.c	941;"	d	file:
PREV	xfs_bmap.c	984;"	d	file:
QOFF_ITEM	xfs_dquot_item.c	/^static inline struct xfs_qoff_logitem *QOFF_ITEM(struct xfs_log_item *lip)$/;"	f	file:
RIGHT	xfs_bmap.c	1465;"	d	file:
RIGHT	xfs_bmap.c	428;"	d	file:
RIGHT	xfs_bmap.c	940;"	d	file:
RIGHT	xfs_bmap.c	983;"	d	file:
SGI_ACL_DEFAULT	xfs_acl.h	40;"	d
SGI_ACL_DEFAULT_SIZE	xfs_acl.h	42;"	d
SGI_ACL_FILE	xfs_acl.h	39;"	d
SGI_ACL_FILE_SIZE	xfs_acl.h	41;"	d
SHUTDOWN_CORRUPT_INCORE	xfs_mount.h	309;"	d
SHUTDOWN_DEVICE_REQ	xfs_mount.h	311;"	d
SHUTDOWN_FORCE_UMOUNT	xfs_mount.h	308;"	d
SHUTDOWN_LOG_IO_ERROR	xfs_mount.h	307;"	d
SHUTDOWN_META_IO_ERROR	xfs_mount.h	306;"	d
SHUTDOWN_REMOTE_REQ	xfs_mount.h	310;"	d
STARTBLOCKMASK	xfs_bmap_btree.h	66;"	d
STARTBLOCKMASKBITS	xfs_bmap_btree.h	64;"	d
STARTBLOCKVALBITS	xfs_bmap_btree.h	63;"	d
STATIC	xfs.h	22;"	d
STATIC	xfs_linux.h	297;"	d
STATIC	xfs_linux.h	306;"	d
SYMLINK_MAPS	xfs_vnodeops.c	58;"	d	file:
SYNCHRONIZE	xfs_linux.h	149;"	d
SYNC_TRYLOCK	xfs_sync.h	25;"	d
SYNC_WAIT	xfs_sync.h	24;"	d
TRACE0	xfs_filestream.c	66;"	d	file:
TRACE1	xfs_filestream.c	67;"	d	file:
TRACE2	xfs_filestream.c	68;"	d	file:
TRACE3	xfs_filestream.c	69;"	d	file:
TRACE4	xfs_filestream.c	70;"	d	file:
TRACE5	xfs_filestream.c	71;"	d	file:
TRACE6	xfs_filestream.c	72;"	d	file:
TRACE_AG_PICK1	xfs_filestream.c	101;"	d	file:
TRACE_AG_PICK1	xfs_filestream.c	80;"	d	file:
TRACE_AG_PICK2	xfs_filestream.c	102;"	d	file:
TRACE_AG_PICK2	xfs_filestream.c	82;"	d	file:
TRACE_AG_SCAN	xfs_filestream.c	100;"	d	file:
TRACE_AG_SCAN	xfs_filestream.c	78;"	d	file:
TRACE_ASSOCIATE	xfs_filestream.c	106;"	d	file:
TRACE_ASSOCIATE	xfs_filestream.c	91;"	d	file:
TRACE_FREE	xfs_filestream.c	104;"	d	file:
TRACE_FREE	xfs_filestream.c	87;"	d	file:
TRACE_INCLUDE_FILE	xfs_trace.h	1756;"	d
TRACE_INCLUDE_PATH	xfs_trace.h	1754;"	d
TRACE_INCLUDE_PATH	xfs_trace.h	1755;"	d
TRACE_LOOKUP	xfs_filestream.c	105;"	d	file:
TRACE_LOOKUP	xfs_filestream.c	89;"	d	file:
TRACE_MOVEAG	xfs_filestream.c	107;"	d	file:
TRACE_MOVEAG	xfs_filestream.c	93;"	d	file:
TRACE_ORPHAN	xfs_filestream.c	108;"	d	file:
TRACE_ORPHAN	xfs_filestream.c	95;"	d	file:
TRACE_SYSTEM	xfs_trace.h	18;"	d
TRACE_SYSTEM	xfs_trace.h	19;"	d
TRACE_UPDATE	xfs_filestream.c	103;"	d	file:
TRACE_UPDATE	xfs_filestream.c	85;"	d	file:
VFS_I	xfs_inode.h	/^static inline struct inode *VFS_I(struct xfs_inode *ip)$/;"	f
VN_CACHED	xfs_vnode.h	59;"	d
VN_DIRTY	xfs_vnode.h	60;"	d
VN_INACTIVE_CACHE	xfs_vnode.h	33;"	d
VN_INACTIVE_NOCACHE	xfs_vnode.h	34;"	d
VN_MAPPED	xfs_vnode.h	58;"	d
XBF_ASYNC	xfs_buf.h	51;"	d
XBF_DELWRI	xfs_buf.h	53;"	d
XBF_DONE	xfs_buf.h	52;"	d
XBF_DONT_BLOCK	xfs_buf.h	64;"	d
XBF_FLUSH	xfs_buf.h	59;"	d
XBF_FUA	xfs_buf.h	58;"	d
XBF_LOCK	xfs_buf.h	62;"	d
XBF_MAPPED	xfs_buf.h	50;"	d
XBF_READ	xfs_buf.h	47;"	d
XBF_READ_AHEAD	xfs_buf.h	49;"	d
XBF_STALE	xfs_buf.h	54;"	d
XBF_SYNCIO	xfs_buf.h	57;"	d
XBF_TRYLOCK	xfs_buf.h	63;"	d
XBF_WRITE	xfs_buf.h	48;"	d
XBRW_READ	xfs_buf.h	/^	XBRW_READ = 1,			\/* transfer into target memory *\/$/;"	e	enum:__anon14
XBRW_WRITE	xfs_buf.h	/^	XBRW_WRITE = 2,			\/* transfer from target memory *\/$/;"	e	enum:__anon14
XBRW_ZERO	xfs_buf.h	/^	XBRW_ZERO = 3,			\/* Zero target memory *\/$/;"	e	enum:__anon14
XBT_FORCE_FLUSH	xfs_buf.h	/^	XBT_FORCE_FLUSH = 0,$/;"	e	enum:__anon15
XB_CLEAR_OWNER	xfs_buf.c	53;"	d	file:
XB_CLEAR_OWNER	xfs_buf.c	57;"	d	file:
XB_GET_OWNER	xfs_buf.c	54;"	d	file:
XB_GET_OWNER	xfs_buf.c	58;"	d	file:
XB_PAGES	xfs_buf.h	121;"	d
XB_SET_OWNER	xfs_buf.c	52;"	d	file:
XB_SET_OWNER	xfs_buf.c	56;"	d	file:
XFSA_FIXUP_BNO_OK	xfs_alloc.c	41;"	d	file:
XFSA_FIXUP_CNT_OK	xfs_alloc.c	42;"	d	file:
XFSSTAT_END_ABTB_V2	xfs_stats.h	122;"	d
XFSSTAT_END_ABTC_V2	xfs_stats.h	138;"	d
XFSSTAT_END_ALLOC_BTREE	xfs_stats.h	35;"	d
XFSSTAT_END_ATTRIBUTE_OPS	xfs_stats.h	93;"	d
XFSSTAT_END_BLOCK_MAPPING	xfs_stats.h	40;"	d
XFSSTAT_END_BLOCK_MAP_BTREE	xfs_stats.h	48;"	d
XFSSTAT_END_BMBT_V2	xfs_stats.h	154;"	d
XFSSTAT_END_BUF	xfs_stats.h	111;"	d
XFSSTAT_END_DIRECTORY_OPS	xfs_stats.h	53;"	d
XFSSTAT_END_EXTENT_ALLOC	xfs_stats.h	30;"	d
XFSSTAT_END_IBT_V2	xfs_stats.h	170;"	d
XFSSTAT_END_INODE_CLUSTER	xfs_stats.h	98;"	d
XFSSTAT_END_INODE_OPS	xfs_stats.h	62;"	d
XFSSTAT_END_LOG_OPS	xfs_stats.h	70;"	d
XFSSTAT_END_READ_WRITE_OPS	xfs_stats.h	90;"	d
XFSSTAT_END_TAIL_PUSHING	xfs_stats.h	76;"	d
XFSSTAT_END_TRANSACTIONS	xfs_stats.h	58;"	d
XFSSTAT_END_VNODE_OPS	xfs_stats.h	102;"	d
XFSSTAT_END_WRITE_CONVERT	xfs_stats.h	87;"	d
XFS_ABSDIFF	xfs_alloc.c	39;"	d	file:
XFS_ABTB_MAGIC	xfs_alloc_btree.h	34;"	d
XFS_ABTC_MAGIC	xfs_alloc_btree.h	35;"	d
XFS_ACL_MAX_ENTRIES	xfs_acl.h	25;"	d
XFS_ACL_NOT_PRESENT	xfs_acl.h	26;"	d
XFS_ACL_STRING	xfs_super.h	34;"	d
XFS_ACL_STRING	xfs_super.h	37;"	d
XFS_ADDAFORK_LOG_COUNT	xfs_trans.h	279;"	d
XFS_ADDAFORK_LOG_RES	xfs_trans.h	254;"	d
XFS_ADDAFORK_SPACE_RES	xfs_trans_space.h	55;"	d
XFS_AGBLOCK_MAX	xfs_btree.h	426;"	d
XFS_AGBLOCK_MIN	xfs_btree.h	425;"	d
XFS_AGB_TO_DADDR	xfs_ag.h	273;"	d
XFS_AGB_TO_FSB	xfs_ag.h	267;"	d
XFS_AGFL_BLOCK	xfs_ag.h	169;"	d
XFS_AGFL_DADDR	xfs_ag.h	168;"	d
XFS_AGFL_REF	xfs_trans.h	291;"	d
XFS_AGFL_SIZE	xfs_ag.h	170;"	d
XFS_AGF_ALL_BITS	xfs_ag.h	87;"	d
XFS_AGF_BLOCK	xfs_ag.h	105;"	d
XFS_AGF_BTREEBLKS	xfs_ag.h	85;"	d
XFS_AGF_DADDR	xfs_ag.h	104;"	d
XFS_AGF_FLAGS	xfs_ag.h	89;"	d
XFS_AGF_FLCOUNT	xfs_ag.h	82;"	d
XFS_AGF_FLFIRST	xfs_ag.h	80;"	d
XFS_AGF_FLLAST	xfs_ag.h	81;"	d
XFS_AGF_FREEBLKS	xfs_ag.h	83;"	d
XFS_AGF_GOOD_VERSION	xfs_ag.h	36;"	d
XFS_AGF_LENGTH	xfs_ag.h	77;"	d
XFS_AGF_LEVELS	xfs_ag.h	79;"	d
XFS_AGF_LONGEST	xfs_ag.h	84;"	d
XFS_AGF_MAGIC	xfs_ag.h	31;"	d
XFS_AGF_MAGICNUM	xfs_ag.h	74;"	d
XFS_AGF_NUM_BITS	xfs_ag.h	86;"	d
XFS_AGF_REF	xfs_trans.h	289;"	d
XFS_AGF_ROOTS	xfs_ag.h	78;"	d
XFS_AGF_SEQNO	xfs_ag.h	76;"	d
XFS_AGF_VERSION	xfs_ag.h	33;"	d
XFS_AGF_VERSIONNUM	xfs_ag.h	75;"	d
XFS_AGINO_TO_AGBNO	xfs_inum.h	56;"	d
XFS_AGINO_TO_INO	xfs_inum.h	54;"	d
XFS_AGINO_TO_OFFSET	xfs_inum.h	57;"	d
XFS_AGI_ALL_BITS	xfs_ag.h	154;"	d
XFS_AGI_BLOCK	xfs_ag.h	158;"	d
XFS_AGI_COUNT	xfs_ag.h	146;"	d
XFS_AGI_DADDR	xfs_ag.h	157;"	d
XFS_AGI_DIRINO	xfs_ag.h	151;"	d
XFS_AGI_FREECOUNT	xfs_ag.h	149;"	d
XFS_AGI_GOOD_VERSION	xfs_ag.h	37;"	d
XFS_AGI_LENGTH	xfs_ag.h	145;"	d
XFS_AGI_LEVEL	xfs_ag.h	148;"	d
XFS_AGI_MAGIC	xfs_ag.h	32;"	d
XFS_AGI_MAGICNUM	xfs_ag.h	142;"	d
XFS_AGI_NEWINO	xfs_ag.h	150;"	d
XFS_AGI_NUM_BITS	xfs_ag.h	153;"	d
XFS_AGI_REF	xfs_trans.h	290;"	d
XFS_AGI_ROOT	xfs_ag.h	147;"	d
XFS_AGI_SEQNO	xfs_ag.h	144;"	d
XFS_AGI_UNLINKED	xfs_ag.h	152;"	d
XFS_AGI_UNLINKED_BUCKETS	xfs_ag.h	114;"	d
XFS_AGI_VERSION	xfs_ag.h	34;"	d
XFS_AGI_VERSIONNUM	xfs_ag.h	143;"	d
XFS_AG_CHECK_DADDR	xfs_ag.h	282;"	d
XFS_AG_DADDR	xfs_ag.h	276;"	d
XFS_AG_MAXLEVELS	xfs_ag.h	255;"	d
XFS_ALLOCFREE_LOG_COUNT	xfs_trans.h	215;"	d
XFS_ALLOCFREE_LOG_RES	xfs_trans.h	213;"	d
XFS_ALLOCTYPE_ANY_AG	xfs_alloc.h	31;"	d
XFS_ALLOCTYPE_FIRST_AG	xfs_alloc.h	32;"	d
XFS_ALLOCTYPE_NEAR_BNO	xfs_alloc.h	36;"	d
XFS_ALLOCTYPE_START_AG	xfs_alloc.h	33;"	d
XFS_ALLOCTYPE_START_BNO	xfs_alloc.h	35;"	d
XFS_ALLOCTYPE_THIS_AG	xfs_alloc.h	34;"	d
XFS_ALLOCTYPE_THIS_BNO	xfs_alloc.h	37;"	d
XFS_ALLOC_AG_MAX_USABLE	xfs_alloc.h	89;"	d
XFS_ALLOC_BLOCK_LEN	xfs_alloc_btree.h	79;"	d
XFS_ALLOC_BTREE_REF	xfs_trans.h	293;"	d
XFS_ALLOC_BUSY_DISCARDED	xfs_ag.h	191;"	d
XFS_ALLOC_BUSY_SKIP_DISCARD	xfs_ag.h	192;"	d
XFS_ALLOC_FLAG_FREEING	xfs_alloc.h	55;"	d
XFS_ALLOC_FLAG_TRYLOCK	xfs_alloc.h	54;"	d
XFS_ALLOC_GAP_UNITS	xfs_bmap.c	2018;"	d	file:
XFS_ALLOC_INITIAL_USER_DATA	xfs_alloc.h	128;"	d
XFS_ALLOC_KEY_ADDR	xfs_alloc_btree.h	92;"	d
XFS_ALLOC_PTR_ADDR	xfs_alloc_btree.h	98;"	d
XFS_ALLOC_REC_ADDR	xfs_alloc_btree.h	86;"	d
XFS_ALLOC_SET_ASIDE	xfs_alloc.h	75;"	d
XFS_ALLOC_TYPES	xfs_alloc.h	42;"	d
XFS_ALLOC_USERDATA	xfs_alloc.h	127;"	d
XFS_ALL_QUOTA_ACCT	xfs_quota.h	157;"	d
XFS_ALL_QUOTA_ACTIVE	xfs_quota.h	177;"	d
XFS_ALL_QUOTA_CHKD	xfs_quota.h	160;"	d
XFS_ALL_QUOTA_ENFD	xfs_quota.h	159;"	d
XFS_ATTRINVAL_LOG_COUNT	xfs_trans.h	280;"	d
XFS_ATTRINVAL_LOG_RES	xfs_trans.h	255;"	d
XFS_ATTRRM_LOG_COUNT	xfs_trans.h	282;"	d
XFS_ATTRRM_LOG_RES	xfs_trans.h	261;"	d
XFS_ATTRRM_SPACE_RES	xfs_trans_space.h	57;"	d
XFS_ATTRSET_LOG_COUNT	xfs_trans.h	281;"	d
XFS_ATTRSET_LOG_RES	xfs_trans.h	256;"	d
XFS_ATTRSET_SPACE_RES	xfs_trans_space.h	60;"	d
XFS_ATTR_ABS	xfs_attr_leaf.c	1453;"	d	file:
XFS_ATTR_ABS	xfs_attr_leaf.c	1488;"	d	file:
XFS_ATTR_BTREE_REF	xfs_trans.h	297;"	d
XFS_ATTR_DMI	xfs_vnodeops.h	18;"	d
XFS_ATTR_FLAGS	xfs_attr.h	51;"	d
XFS_ATTR_FORK	xfs_inode.h	29;"	d
XFS_ATTR_INCOMPLETE	xfs_attr_leaf.h	130;"	d
XFS_ATTR_INCOMPLETE_BIT	xfs_attr_leaf.h	126;"	d
XFS_ATTR_LEAF_MAGIC	xfs_da_btree.h	39;"	d
XFS_ATTR_LEAF_MAPSIZE	xfs_attr_leaf.h	73;"	d
XFS_ATTR_LEAF_NAME_ALIGN	xfs_attr_leaf.h	149;"	d
XFS_ATTR_LOCAL	xfs_attr_leaf.h	127;"	d
XFS_ATTR_LOCAL_BIT	xfs_attr_leaf.h	123;"	d
XFS_ATTR_NOACL	xfs_vnodeops.h	21;"	d
XFS_ATTR_NOLOCK	xfs_vnodeops.h	20;"	d
XFS_ATTR_NONBLOCK	xfs_vnodeops.h	19;"	d
XFS_ATTR_NSP_ARGS	xfs_attr_leaf.h	139;"	d
XFS_ATTR_NSP_ARGS_MASK	xfs_attr_leaf.h	136;"	d
XFS_ATTR_NSP_ARGS_TO_ONDISK	xfs_attr_leaf.h	140;"	d
XFS_ATTR_NSP_ONDISK	xfs_attr_leaf.h	138;"	d
XFS_ATTR_NSP_ONDISK_MASK	xfs_attr_leaf.h	137;"	d
XFS_ATTR_NSP_ONDISK_TO_ARGS	xfs_attr_leaf.h	142;"	d
XFS_ATTR_ROOT	xfs_attr_leaf.h	128;"	d
XFS_ATTR_ROOT_BIT	xfs_attr_leaf.h	124;"	d
XFS_ATTR_SECURE	xfs_attr_leaf.h	129;"	d
XFS_ATTR_SECURE_BIT	xfs_attr_leaf.h	125;"	d
XFS_ATTR_SF_ENTSIZE	xfs_attr_sf.h	62;"	d
XFS_ATTR_SF_ENTSIZE_BYNAME	xfs_attr_sf.h	58;"	d
XFS_ATTR_SF_ENTSIZE_MAX	xfs_attr_sf.h	60;"	d
XFS_ATTR_SF_NEXTENTRY	xfs_attr_sf.h	64;"	d
XFS_ATTR_SF_TOTSIZE	xfs_attr_sf.h	66;"	d
XFS_ATTR_SYNC	xfs_vnodeops.h	22;"	d
XFS_BB_ALL_BITS	xfs_btree.h	105;"	d
XFS_BB_LEFTSIB	xfs_btree.h	102;"	d
XFS_BB_LEVEL	xfs_btree.h	100;"	d
XFS_BB_MAGIC	xfs_btree.h	99;"	d
XFS_BB_NUMRECS	xfs_btree.h	101;"	d
XFS_BB_NUM_BITS	xfs_btree.h	104;"	d
XFS_BB_RIGHTSIB	xfs_btree.h	103;"	d
XFS_BB_TO_FSB	xfs_sb.h	529;"	d
XFS_BB_TO_FSBT	xfs_sb.h	531;"	d
XFS_BIGFS_STRING	xfs_super.h	51;"	d
XFS_BIGFS_STRING	xfs_super.h	53;"	d
XFS_BIGFS_STRING	xfs_super.h	56;"	d
XFS_BIG_BLKNOS	xfs_linux.h	28;"	d
XFS_BIG_BLKNOS	xfs_linux.h	31;"	d
XFS_BIG_INUMS	xfs_linux.h	29;"	d
XFS_BIG_INUMS	xfs_linux.h	32;"	d
XFS_BITTOBLOCK	xfs_rtalloc.h	53;"	d
XFS_BITTOWORD	xfs_rtalloc.h	55;"	d
XFS_BLF_CANCEL	xfs_buf_item.h	49;"	d
XFS_BLF_CHUNK	xfs_buf_item.h	58;"	d
XFS_BLF_GDQUOT_BUF	xfs_buf_item.h	56;"	d
XFS_BLF_INODE_BUF	xfs_buf_item.h	44;"	d
XFS_BLF_PDQUOT_BUF	xfs_buf_item.h	55;"	d
XFS_BLF_SHIFT	xfs_buf_item.h	59;"	d
XFS_BLF_UDQUOT_BUF	xfs_buf_item.h	54;"	d
XFS_BLI_DIRTY	xfs_buf_item.h	67;"	d
XFS_BLI_FLAGS	xfs_buf_item.h	74;"	d
XFS_BLI_HOLD	xfs_buf_item.h	66;"	d
XFS_BLI_INODE_ALLOC_BUF	xfs_buf_item.h	70;"	d
XFS_BLI_INODE_BUF	xfs_buf_item.h	72;"	d
XFS_BLI_LOGGED	xfs_buf_item.h	69;"	d
XFS_BLI_STALE	xfs_buf_item.h	68;"	d
XFS_BLI_STALE_INODE	xfs_buf_item.h	71;"	d
XFS_BLOCKMASK	xfs_rtalloc.h	39;"	d
XFS_BLOCKSIZE	xfs_rtalloc.h	38;"	d
XFS_BLOCKTOBIT	xfs_rtalloc.h	54;"	d
XFS_BLOCKWMASK	xfs_rtalloc.h	41;"	d
XFS_BLOCKWSIZE	xfs_rtalloc.h	40;"	d
XFS_BMAPI_ATTRFORK	xfs_bmap.h	69;"	d
XFS_BMAPI_CONTIG	xfs_bmap.h	73;"	d
XFS_BMAPI_CONVERT	xfs_bmap.h	79;"	d
XFS_BMAPI_ENTIRE	xfs_bmap.h	67;"	d
XFS_BMAPI_FLAGS	xfs_bmap.h	81;"	d
XFS_BMAPI_IGSTATE	xfs_bmap.h	71;"	d
XFS_BMAPI_METADATA	xfs_bmap.h	68;"	d
XFS_BMAPI_PREALLOC	xfs_bmap.h	70;"	d
XFS_BMAP_BROOT_PTR_ADDR	xfs_bmap_btree.h	186;"	d
XFS_BMAP_BROOT_SPACE	xfs_bmap_btree.h	193;"	d
XFS_BMAP_BROOT_SPACE_CALC	xfs_bmap_btree.h	189;"	d
XFS_BMAP_BTREE_REF	xfs_trans.h	294;"	d
XFS_BMAP_EXT_FLAGS	xfs_bmap.h	151;"	d
XFS_BMAP_MAGIC	xfs_bmap_btree.h	21;"	d
XFS_BMAP_MAX_NMAP	xfs_bmap.h	62;"	d
XFS_BMAP_TRACE_EXLIST	xfs_bmap.h	161;"	d
XFS_BMAP_TRACE_EXLIST	xfs_bmap.h	164;"	d
XFS_BMBT_BLOCK_LEN	xfs_bmap_btree.h	142;"	d
XFS_BMBT_KEY_ADDR	xfs_bmap_btree.h	150;"	d
XFS_BMBT_PTR_ADDR	xfs_bmap_btree.h	156;"	d
XFS_BMBT_REC_ADDR	xfs_bmap_btree.h	144;"	d
XFS_BMDR_KEY_ADDR	xfs_bmap_btree.h	169;"	d
XFS_BMDR_PTR_ADDR	xfs_bmap_btree.h	175;"	d
XFS_BMDR_REC_ADDR	xfs_bmap_btree.h	163;"	d
XFS_BMDR_SPACE_CALC	xfs_bmap_btree.h	195;"	d
XFS_BM_MAXLEVELS	xfs_bmap_btree.h	202;"	d
XFS_BNO_BLOCK	xfs_alloc_btree.h	71;"	d
XFS_BROOT_SIZE_ADJ	xfs_dinode.h	110;"	d
XFS_BTCUR_BPRV_WASDEL	xfs_btree.h	248;"	d
XFS_BTCUR_LEFTRA	xfs_btree.h	230;"	d
XFS_BTCUR_RIGHTRA	xfs_btree.h	231;"	d
XFS_BTNUM_AGF	xfs_ag.h	43;"	d
XFS_BTNUM_BMAP	xfs_btree.h	38;"	d
XFS_BTNUM_BMAPi	xfs_types.h	/^	XFS_BTNUM_BNOi, XFS_BTNUM_CNTi, XFS_BTNUM_BMAPi, XFS_BTNUM_INOi,$/;"	e	enum:__anon35
XFS_BTNUM_BNO	xfs_btree.h	36;"	d
XFS_BTNUM_BNOi	xfs_types.h	/^	XFS_BTNUM_BNOi, XFS_BTNUM_CNTi, XFS_BTNUM_BMAPi, XFS_BTNUM_INOi,$/;"	e	enum:__anon35
XFS_BTNUM_CNT	xfs_btree.h	37;"	d
XFS_BTNUM_CNTi	xfs_types.h	/^	XFS_BTNUM_BNOi, XFS_BTNUM_CNTi, XFS_BTNUM_BMAPi, XFS_BTNUM_INOi,$/;"	e	enum:__anon35
XFS_BTNUM_INO	xfs_btree.h	39;"	d
XFS_BTNUM_INOi	xfs_types.h	/^	XFS_BTNUM_BNOi, XFS_BTNUM_CNTi, XFS_BTNUM_BMAPi, XFS_BTNUM_INOi,$/;"	e	enum:__anon35
XFS_BTNUM_MAX	xfs_types.h	/^	XFS_BTNUM_MAX$/;"	e	enum:__anon35
XFS_BTREE_ERROR	xfs_btree.h	260;"	d
XFS_BTREE_LASTREC_UPDATE	xfs_btree.h	256;"	d
XFS_BTREE_LBLOCK_LEN	xfs_btree.h	68;"	d
XFS_BTREE_LONG_PTRS	xfs_btree.h	254;"	d
XFS_BTREE_MAXLEVELS	xfs_btree.h	141;"	d
XFS_BTREE_NOERROR	xfs_btree.h	259;"	d
XFS_BTREE_ROOT_IN_INODE	xfs_btree.h	255;"	d
XFS_BTREE_SBLOCK_LEN	xfs_btree.h	67;"	d
XFS_BTREE_STATS_ADD	xfs_btree.h	130;"	d
XFS_BTREE_STATS_INC	xfs_btree.h	117;"	d
XFS_BTREE_TRACE_ARGBI	xfs_btree.h	446;"	d
XFS_BTREE_TRACE_ARGBII	xfs_btree.h	447;"	d
XFS_BTREE_TRACE_ARGI	xfs_btree.h	448;"	d
XFS_BTREE_TRACE_ARGIK	xfs_btree.h	451;"	d
XFS_BTREE_TRACE_ARGIPK	xfs_btree.h	449;"	d
XFS_BTREE_TRACE_ARGIPR	xfs_btree.h	450;"	d
XFS_BTREE_TRACE_ARGR	xfs_btree.h	452;"	d
XFS_BTREE_TRACE_CURSOR	xfs_btree.h	453;"	d
XFS_BUF_ADDR	xfs_buf.h	258;"	d
XFS_BUF_AGE	xfs_sysctl.h	/^	XFS_BUF_AGE = 17,$/;"	e	enum:__anon32
XFS_BUF_ASYNC	xfs_buf.h	246;"	d
XFS_BUF_COUNT	xfs_buf.h	262;"	d
XFS_BUF_DADDR_NULL	xfs_buf.h	34;"	d
XFS_BUF_DONE	xfs_buf.h	242;"	d
XFS_BUF_FLAGS	xfs_buf.h	73;"	d
XFS_BUF_ISASYNC	xfs_buf.h	248;"	d
XFS_BUF_ISDELAYWRITE	xfs_buf.h	240;"	d
XFS_BUF_ISDONE	xfs_buf.h	244;"	d
XFS_BUF_ISREAD	xfs_buf.h	252;"	d
XFS_BUF_ISSTALE	xfs_buf.h	238;"	d
XFS_BUF_ISWRITE	xfs_buf.h	256;"	d
XFS_BUF_LOCK_TRACKING	xfs.h	24;"	d
XFS_BUF_OFFSET	xfs_buf.h	260;"	d
XFS_BUF_READ	xfs_buf.h	250;"	d
XFS_BUF_SET_ADDR	xfs_buf.h	259;"	d
XFS_BUF_SET_COUNT	xfs_buf.h	263;"	d
XFS_BUF_SET_OFFSET	xfs_buf.h	261;"	d
XFS_BUF_SET_SIZE	xfs_buf.h	265;"	d
XFS_BUF_SIZE	xfs_buf.h	264;"	d
XFS_BUF_TIMER	xfs_sysctl.h	/^	XFS_BUF_TIMER = 16,$/;"	e	enum:__anon32
XFS_BUF_TO_AGF	xfs_ag.h	106;"	d
XFS_BUF_TO_AGFL	xfs_ag.h	171;"	d
XFS_BUF_TO_AGI	xfs_ag.h	159;"	d
XFS_BUF_TO_BLOCK	xfs_btree.h	265;"	d
XFS_BUF_TO_DINODE	xfs_dinode.h	151;"	d
XFS_BUF_TO_SBP	xfs_sb.h	512;"	d
XFS_BUF_UNASYNC	xfs_buf.h	247;"	d
XFS_BUF_UNDONE	xfs_buf.h	243;"	d
XFS_BUF_UNREAD	xfs_buf.h	251;"	d
XFS_BUF_UNSTALE	xfs_buf.h	237;"	d
XFS_BUF_UNWRITE	xfs_buf.h	255;"	d
XFS_BUF_WRITE	xfs_buf.h	254;"	d
XFS_BUF_ZEROFLAGS	xfs_buf.h	232;"	d
XFS_BUILD_OPTIONS	xfs_super.h	66;"	d
XFS_BULKSTAT_UBLEFT	xfs_itable.c	187;"	d	file:
XFS_B_FSB_OFFSET	xfs_sb.h	540;"	d
XFS_B_TO_FSB	xfs_sb.h	537;"	d
XFS_B_TO_FSBT	xfs_sb.h	539;"	d
XFS_CLEAR_AGI_BUCKET_LOG_RES	xfs_trans.h	262;"	d
XFS_CMP_CASE	xfs_da_btree.h	/^	XFS_CMP_CASE		\/* names are same but differ in case *\/$/;"	e	enum:xfs_dacmp
XFS_CMP_DIFFERENT	xfs_da_btree.h	/^	XFS_CMP_DIFFERENT,	\/* names are completely different *\/$/;"	e	enum:xfs_dacmp
XFS_CMP_EXACT	xfs_da_btree.h	/^	XFS_CMP_EXACT,		\/* names are exactly the same *\/$/;"	e	enum:xfs_dacmp
XFS_CNT_BLOCK	xfs_alloc_btree.h	72;"	d
XFS_CORRUPTION_ERROR	xfs_error.h	40;"	d
XFS_CREATE_LOG_COUNT	xfs_trans.h	272;"	d
XFS_CREATE_LOG_RES	xfs_trans.h	239;"	d
XFS_CREATE_SPACE_RES	xfs_trans_space.h	62;"	d
XFS_DADDR_TO_FSB	xfs_sb.h	515;"	d
XFS_DAENTER_1B	xfs_trans_space.h	31;"	d
XFS_DAENTER_BLOCKS	xfs_trans_space.h	34;"	d
XFS_DAENTER_BMAP1B	xfs_trans_space.h	36;"	d
XFS_DAENTER_BMAPS	xfs_trans_space.h	38;"	d
XFS_DAENTER_DBS	xfs_trans_space.h	32;"	d
XFS_DAENTER_SPACE_RES	xfs_trans_space.h	40;"	d
XFS_DAREMOVE_SPACE_RES	xfs_trans_space.h	42;"	d
XFS_DATA_FORK	xfs_inode.h	28;"	d
XFS_DA_BUF_SIZE	xfs_da_btree.h	150;"	d
XFS_DA_LOGOFF	xfs_da_btree.h	191;"	d
XFS_DA_LOGRANGE	xfs_da_btree.h	192;"	d
XFS_DA_NODE_MAGIC	xfs_da_btree.h	38;"	d
XFS_DA_NODE_MAXDEPTH	xfs_da_btree.h	59;"	d
XFS_DA_OP_ADDNAME	xfs_da_btree.h	124;"	d
XFS_DA_OP_CILOOKUP	xfs_da_btree.h	126;"	d
XFS_DA_OP_FLAGS	xfs_da_btree.h	128;"	d
XFS_DA_OP_JUSTCHECK	xfs_da_btree.h	122;"	d
XFS_DA_OP_OKNOENT	xfs_da_btree.h	125;"	d
XFS_DA_OP_RENAME	xfs_da_btree.h	123;"	d
XFS_DBG_STRING	xfs_super.h	60;"	d
XFS_DBG_STRING	xfs_super.h	62;"	d
XFS_DEFAULT_LOG_COUNT	xfs_trans.h	268;"	d
XFS_DEFAULT_PERM_LOG_COUNT	xfs_trans.h	269;"	d
XFS_DFL_RTEXTSIZE	xfs_rtalloc.h	26;"	d
XFS_DFORK_APTR	xfs_dinode.h	137;"	d
XFS_DFORK_ASIZE	xfs_dinode.h	123;"	d
XFS_DFORK_BOFF	xfs_dinode.h	117;"	d
XFS_DFORK_DPTR	xfs_dinode.h	135;"	d
XFS_DFORK_DSIZE	xfs_dinode.h	119;"	d
XFS_DFORK_FORMAT	xfs_dinode.h	142;"	d
XFS_DFORK_NEXTENTS	xfs_dinode.h	146;"	d
XFS_DFORK_PTR	xfs_dinode.h	139;"	d
XFS_DFORK_Q	xfs_dinode.h	116;"	d
XFS_DFORK_SIZE	xfs_dinode.h	127;"	d
XFS_DIFLAG_ANY	xfs_dinode.h	209;"	d
XFS_DIFLAG_APPEND	xfs_dinode.h	191;"	d
XFS_DIFLAG_APPEND_BIT	xfs_dinode.h	176;"	d
XFS_DIFLAG_EXTSIZE	xfs_dinode.h	198;"	d
XFS_DIFLAG_EXTSIZE_BIT	xfs_dinode.h	183;"	d
XFS_DIFLAG_EXTSZINHERIT	xfs_dinode.h	199;"	d
XFS_DIFLAG_EXTSZINHERIT_BIT	xfs_dinode.h	184;"	d
XFS_DIFLAG_FILESTREAM	xfs_dinode.h	201;"	d
XFS_DIFLAG_FILESTREAM_BIT	xfs_dinode.h	186;"	d
XFS_DIFLAG_IMMUTABLE	xfs_dinode.h	190;"	d
XFS_DIFLAG_IMMUTABLE_BIT	xfs_dinode.h	175;"	d
XFS_DIFLAG_NEWRTBM	xfs_dinode.h	189;"	d
XFS_DIFLAG_NEWRTBM_BIT	xfs_dinode.h	174;"	d
XFS_DIFLAG_NOATIME	xfs_dinode.h	193;"	d
XFS_DIFLAG_NOATIME_BIT	xfs_dinode.h	178;"	d
XFS_DIFLAG_NODEFRAG	xfs_dinode.h	200;"	d
XFS_DIFLAG_NODEFRAG_BIT	xfs_dinode.h	185;"	d
XFS_DIFLAG_NODUMP	xfs_dinode.h	194;"	d
XFS_DIFLAG_NODUMP_BIT	xfs_dinode.h	179;"	d
XFS_DIFLAG_NOSYMLINKS	xfs_dinode.h	197;"	d
XFS_DIFLAG_NOSYMLINKS_BIT	xfs_dinode.h	182;"	d
XFS_DIFLAG_PREALLOC	xfs_dinode.h	188;"	d
XFS_DIFLAG_PREALLOC_BIT	xfs_dinode.h	173;"	d
XFS_DIFLAG_PROJINHERIT	xfs_dinode.h	196;"	d
XFS_DIFLAG_PROJINHERIT_BIT	xfs_dinode.h	181;"	d
XFS_DIFLAG_REALTIME	xfs_dinode.h	187;"	d
XFS_DIFLAG_REALTIME_BIT	xfs_dinode.h	172;"	d
XFS_DIFLAG_RTINHERIT	xfs_dinode.h	195;"	d
XFS_DIFLAG_RTINHERIT_BIT	xfs_dinode.h	180;"	d
XFS_DIFLAG_SYNC	xfs_dinode.h	192;"	d
XFS_DIFLAG_SYNC_BIT	xfs_dinode.h	177;"	d
XFS_DINODE_FMT_BTREE	xfs_dinode.h	/^	XFS_DINODE_FMT_BTREE,		\/* struct xfs_bmdr_block *\/$/;"	e	enum:xfs_dinode_fmt
XFS_DINODE_FMT_DEV	xfs_dinode.h	/^	XFS_DINODE_FMT_DEV,		\/* xfs_dev_t *\/$/;"	e	enum:xfs_dinode_fmt
XFS_DINODE_FMT_EXTENTS	xfs_dinode.h	/^	XFS_DINODE_FMT_EXTENTS,		\/* struct xfs_bmbt_rec *\/$/;"	e	enum:xfs_dinode_fmt
XFS_DINODE_FMT_LOCAL	xfs_dinode.h	/^	XFS_DINODE_FMT_LOCAL,		\/* bulk data *\/$/;"	e	enum:xfs_dinode_fmt
XFS_DINODE_FMT_UUID	xfs_dinode.h	/^	XFS_DINODE_FMT_UUID		\/* uuid_t *\/$/;"	e	enum:xfs_dinode_fmt
XFS_DINODE_GOOD_VERSION	xfs_dinode.h	22;"	d
XFS_DINODE_MAGIC	xfs_dinode.h	21;"	d
XFS_DINODE_MAX_LOG	xfs_dinode.h	100;"	d
XFS_DINODE_MAX_SIZE	xfs_dinode.h	102;"	d
XFS_DINODE_MIN_LOG	xfs_dinode.h	99;"	d
XFS_DINODE_MIN_SIZE	xfs_dinode.h	101;"	d
XFS_DIOSTRAT_SPACE_RES	xfs_trans_space.h	64;"	d
XFS_DIR2_BLOCK_MAGIC	xfs_dir2_format.h	34;"	d
XFS_DIR2_DATA_ALIGN	xfs_dir2_format.h	183;"	d
XFS_DIR2_DATA_ALIGN_LOG	xfs_dir2_format.h	182;"	d
XFS_DIR2_DATA_DOTDOT_OFFSET	xfs_dir2_format.h	202;"	d
XFS_DIR2_DATA_DOT_OFFSET	xfs_dir2_format.h	200;"	d
XFS_DIR2_DATA_FD_COUNT	xfs_dir2_format.h	185;"	d
XFS_DIR2_DATA_FIRSTDB	xfs_dir2_format.h	194;"	d
XFS_DIR2_DATA_FIRST_OFFSET	xfs_dir2_format.h	204;"	d
XFS_DIR2_DATA_FREE_TAG	xfs_dir2_format.h	184;"	d
XFS_DIR2_DATA_MAGIC	xfs_dir2_format.h	35;"	d
XFS_DIR2_DATA_OFFSET	xfs_dir2_format.h	193;"	d
XFS_DIR2_DATA_SPACE	xfs_dir2_format.h	192;"	d
XFS_DIR2_FREE_FIRSTDB	xfs_dir2_format.h	507;"	d
XFS_DIR2_FREE_MAGIC	xfs_dir2_format.h	36;"	d
XFS_DIR2_FREE_OFFSET	xfs_dir2_format.h	506;"	d
XFS_DIR2_FREE_SPACE	xfs_dir2_format.h	505;"	d
XFS_DIR2_LEAF1_MAGIC	xfs_da_btree.h	40;"	d
XFS_DIR2_LEAFN_MAGIC	xfs_da_btree.h	41;"	d
XFS_DIR2_LEAF_FIRSTDB	xfs_dir2_format.h	320;"	d
XFS_DIR2_LEAF_OFFSET	xfs_dir2_format.h	319;"	d
XFS_DIR2_LEAF_SPACE	xfs_dir2_format.h	318;"	d
XFS_DIR2_MAX_DATAPTR	xfs_dir2_format.h	55;"	d
XFS_DIR2_MAX_SHORT_INUM	xfs_dir2_format.h	84;"	d
XFS_DIR2_NULL_DATAPTR	xfs_dir2_format.h	56;"	d
XFS_DIR2_SPACE_SIZE	xfs_dir2_format.h	191;"	d
XFS_DIRENTER_MAX_SPLIT	xfs_trans_space.h	43;"	d
XFS_DIRENTER_SPACE_RES	xfs_trans_space.h	44;"	d
XFS_DIROP_LOG_COUNT	xfs_trans.h	228;"	d
XFS_DIROP_LOG_RES	xfs_trans.h	225;"	d
XFS_DIRREMOVE_SPACE_RES	xfs_trans_space.h	47;"	d
XFS_DIR_BTREE_REF	xfs_trans.h	295;"	d
XFS_DISCARD_H	xfs_discard.h	2;"	d
XFS_DQITER_MAP_SIZE	xfs_quota_priv.h	25;"	d
XFS_DQUOT_CLUSTER_SIZE_FSB	xfs_qm.h	49;"	d
XFS_DQUOT_LOGRES	xfs_quota.h	105;"	d
XFS_DQUOT_MAGIC	xfs_quota.h	26;"	d
XFS_DQUOT_REF	xfs_trans.h	298;"	d
XFS_DQUOT_VERSION	xfs_quota.h	27;"	d
XFS_DQ_ALLTYPES	xfs_quota.h	92;"	d
XFS_DQ_DIRTY	xfs_quota.h	89;"	d
XFS_DQ_FLAGS	xfs_quota.h	94;"	d
XFS_DQ_FREEING	xfs_quota.h	90;"	d
XFS_DQ_GROUP	xfs_quota.h	88;"	d
XFS_DQ_HASH	xfs_quota_priv.h	33;"	d
XFS_DQ_HASHVAL	xfs_quota_priv.h	30;"	d
XFS_DQ_IS_DIRTY	xfs_dquot.h	145;"	d
XFS_DQ_IS_LOCKED	xfs_dquot.h	144;"	d
XFS_DQ_MASK	xfs_qm_syscalls.c	473;"	d	file:
XFS_DQ_PROJ	xfs_quota.h	87;"	d
XFS_DQ_TO_QINF	xfs_dquot.h	149;"	d
XFS_DQ_TO_QIP	xfs_dquot.h	150;"	d
XFS_DQ_USER	xfs_quota.h	86;"	d
XFS_EFD_MAX_FAST_EXTENTS	xfs_extfree_item.h	147;"	d
XFS_EFI_COMMITTED	xfs_extfree_item.h	117;"	d
XFS_EFI_MAX_FAST_EXTENTS	xfs_extfree_item.h	111;"	d
XFS_EFI_RECOVERED	xfs_extfree_item.h	116;"	d
XFS_ERRLEVEL	xfs_sysctl.h	/^	XFS_ERRLEVEL = 7,$/;"	e	enum:__anon32
XFS_ERRLEVEL_HIGH	xfs_error.h	46;"	d
XFS_ERRLEVEL_LOW	xfs_error.h	45;"	d
XFS_ERRLEVEL_OFF	xfs_error.h	44;"	d
XFS_ERROR	xfs_error.h	25;"	d
XFS_ERROR	xfs_error.h	27;"	d
XFS_ERROR_NTRAP	xfs_error.h	22;"	d
XFS_ERROR_REPORT	xfs_error.h	38;"	d
XFS_ERRTAG_ALLOC_READ_AGF	xfs_error.h	89;"	d
XFS_ERRTAG_BMAPIFORMAT	xfs_error.h	100;"	d
XFS_ERRTAG_BTREE_CHECK_LBLOCK	xfs_error.h	87;"	d
XFS_ERRTAG_BTREE_CHECK_SBLOCK	xfs_error.h	88;"	d
XFS_ERRTAG_BULKSTAT_READ_CHUNK	xfs_error.h	95;"	d
XFS_ERRTAG_DA_READ_BUF	xfs_error.h	86;"	d
XFS_ERRTAG_DIOWRITE_IOERR	xfs_error.h	99;"	d
XFS_ERRTAG_DIR_INO_VALIDATE	xfs_error.h	94;"	d
XFS_ERRTAG_IALLOC_READ_AGI	xfs_error.h	90;"	d
XFS_ERRTAG_IFLUSH_1	xfs_error.h	80;"	d
XFS_ERRTAG_IFLUSH_2	xfs_error.h	81;"	d
XFS_ERRTAG_IFLUSH_3	xfs_error.h	82;"	d
XFS_ERRTAG_IFLUSH_4	xfs_error.h	83;"	d
XFS_ERRTAG_IFLUSH_5	xfs_error.h	84;"	d
XFS_ERRTAG_IFLUSH_6	xfs_error.h	85;"	d
XFS_ERRTAG_IODONE_IOERR	xfs_error.h	96;"	d
XFS_ERRTAG_ITOBP_INOTOBP	xfs_error.h	91;"	d
XFS_ERRTAG_IUNLINK	xfs_error.h	92;"	d
XFS_ERRTAG_IUNLINK_REMOVE	xfs_error.h	93;"	d
XFS_ERRTAG_MAX	xfs_error.h	101;"	d
XFS_ERRTAG_NOERROR	xfs_error.h	79;"	d
XFS_ERRTAG_STRATCMPL_IOERR	xfs_error.h	98;"	d
XFS_ERRTAG_STRATREAD_IOERR	xfs_error.h	97;"	d
XFS_EXTENTADD_SPACE_RES	xfs_trans_space.h	26;"	d
XFS_EXTFMT_HASSTATE	xfs_bmap_btree.h	/^	XFS_EXTFMT_HASSTATE$/;"	e	enum:__anon5
XFS_EXTFMT_INODE	xfs_bmap_btree.h	111;"	d
XFS_EXTFMT_NOSTATE	xfs_bmap_btree.h	/^	XFS_EXTFMT_NOSTATE = 0,$/;"	e	enum:__anon5
XFS_EXTLEN_MAX	xfs_btree.h	424;"	d
XFS_EXTLEN_MIN	xfs_btree.h	423;"	d
XFS_EXT_DMAPI_OFFLINE	xfs_bmap_btree.h	/^	XFS_EXT_DMAPI_OFFLINE, XFS_EXT_INVALID$/;"	e	enum:__anon6
XFS_EXT_INVALID	xfs_bmap_btree.h	/^	XFS_EXT_DMAPI_OFFLINE, XFS_EXT_INVALID$/;"	e	enum:__anon6
XFS_EXT_NORM	xfs_bmap_btree.h	/^	XFS_EXT_NORM, XFS_EXT_UNWRITTEN,$/;"	e	enum:__anon6
XFS_EXT_UNWRITTEN	xfs_bmap_btree.h	/^	XFS_EXT_NORM, XFS_EXT_UNWRITTEN,$/;"	e	enum:__anon6
XFS_FIEMAP_FLAGS	xfs_iops.c	960;"	d	file:
XFS_FILBLKS_MAX	xfs_btree.h	430;"	d
XFS_FILBLKS_MIN	xfs_btree.h	429;"	d
XFS_FILEID_TYPE_64FLAG	xfs_export.h	70;"	d
XFS_FILEOFF_MAX	xfs_btree.h	428;"	d
XFS_FILEOFF_MIN	xfs_btree.h	427;"	d
XFS_FILESTREAM_TIMER	xfs_sysctl.h	/^	XFS_FILESTREAM_TIMER = 22,$/;"	e	enum:__anon32
XFS_FORCED_SHUTDOWN	xfs_mount.h	300;"	d
XFS_FREE_EOF_TRYLOCK	xfs_vnodeops.c	154;"	d	file:
XFS_FSB_SANITY_CHECK	xfs_btree.h	432;"	d
XFS_FSB_TO_AGBNO	xfs_ag.h	271;"	d
XFS_FSB_TO_AGNO	xfs_ag.h	269;"	d
XFS_FSB_TO_B	xfs_sb.h	536;"	d
XFS_FSB_TO_BB	xfs_sb.h	528;"	d
XFS_FSB_TO_DADDR	xfs_sb.h	517;"	d
XFS_FSOP_GEOM_FLAGS_ATTR	xfs_fs.h	225;"	d
XFS_FSOP_GEOM_FLAGS_ATTR2	xfs_fs.h	235;"	d
XFS_FSOP_GEOM_FLAGS_DALIGN	xfs_fs.h	229;"	d
XFS_FSOP_GEOM_FLAGS_DIRV2	xfs_fs.h	232;"	d
XFS_FSOP_GEOM_FLAGS_DIRV2CI	xfs_fs.h	236;"	d
XFS_FSOP_GEOM_FLAGS_EXTFLG	xfs_fs.h	231;"	d
XFS_FSOP_GEOM_FLAGS_IALIGN	xfs_fs.h	228;"	d
XFS_FSOP_GEOM_FLAGS_LAZYSB	xfs_fs.h	237;"	d
XFS_FSOP_GEOM_FLAGS_LOGV2	xfs_fs.h	233;"	d
XFS_FSOP_GEOM_FLAGS_NLINK	xfs_fs.h	226;"	d
XFS_FSOP_GEOM_FLAGS_QUOTA	xfs_fs.h	227;"	d
XFS_FSOP_GEOM_FLAGS_SECTOR	xfs_fs.h	234;"	d
XFS_FSOP_GEOM_FLAGS_SHARED	xfs_fs.h	230;"	d
XFS_FSOP_GEOM_VERSION	xfs_fs.h	223;"	d
XFS_FSOP_GOING_FLAGS_DEFAULT	xfs_fs.h	424;"	d
XFS_FSOP_GOING_FLAGS_LOGFLUSH	xfs_fs.h	425;"	d
XFS_FSOP_GOING_FLAGS_NOLOGFLUSH	xfs_fs.h	426;"	d
XFS_FSS_TO_BB	xfs_sb.h	523;"	d
XFS_FSTRM_KTRACE_AGPICK1	xfs_filestream.h	31;"	d
XFS_FSTRM_KTRACE_AGPICK2	xfs_filestream.h	32;"	d
XFS_FSTRM_KTRACE_AGSCAN	xfs_filestream.h	30;"	d
XFS_FSTRM_KTRACE_ASSOCIATE	xfs_filestream.h	36;"	d
XFS_FSTRM_KTRACE_FREE	xfs_filestream.h	34;"	d
XFS_FSTRM_KTRACE_INFO	xfs_filestream.h	29;"	d
XFS_FSTRM_KTRACE_ITEM_LOOKUP	xfs_filestream.h	35;"	d
XFS_FSTRM_KTRACE_MOVEAG	xfs_filestream.h	37;"	d
XFS_FSTRM_KTRACE_ORPHAN	xfs_filestream.h	38;"	d
XFS_FSTRM_KTRACE_SIZE	xfs_filestream.h	40;"	d
XFS_FSTRM_KTRACE_UPDATE	xfs_filestream.h	33;"	d
XFS_FSYNC_TS_LOG_RES	xfs_trans.h	252;"	d
XFS_GQUOTA_ACCT	xfs_quota.h	152;"	d
XFS_GQUOTA_ACTIVE	xfs_quota.h	176;"	d
XFS_GROWDATA_LOG_RES	xfs_trans.h	243;"	d
XFS_GROWFSRT_SPACE_RES	xfs_trans_space.h	68;"	d
XFS_GROWFS_SPACE_RES	xfs_trans_space.h	66;"	d
XFS_GROWRTALLOC_LOG_RES	xfs_trans.h	244;"	d
XFS_GROWRTFREE_LOG_RES	xfs_trans.h	246;"	d
XFS_GROWRTZERO_LOG_RES	xfs_trans.h	245;"	d
XFS_HDR_BLOCK	xfs_sb.h	514;"	d
XFS_HSIZE	xfs_fs.h	417;"	d
XFS_I	xfs_inode.h	/^static inline struct xfs_inode *XFS_I(struct inode *inode)$/;"	f
XFS_IALLOC_BLOCKS	xfs_ialloc.h	31;"	d
XFS_IALLOC_INODES	xfs_ialloc.h	30;"	d
XFS_IALLOC_SPACE_RES	xfs_trans_space.h	49;"	d
XFS_IBT_BLOCK	xfs_ialloc_btree.h	74;"	d
XFS_IBT_MAGIC	xfs_ialloc_btree.h	32;"	d
XFS_ICHANGE_LOG_RES	xfs_trans.h	242;"	d
XFS_ICHGTIME_CHG	xfs_inode.h	159;"	d
XFS_ICHGTIME_MOD	xfs_inode.h	158;"	d
XFS_ICI_NO_TAG	xfs_ag.h	251;"	d
XFS_ICI_RECLAIM_TAG	xfs_ag.h	253;"	d
XFS_ICSB_FDBLK_CNTR_REENABLE	xfs_mount.c	2379;"	d	file:
XFS_ICSB_FLAG_LOCK	xfs_mount.h	84;"	d
XFS_ICSB_INO_CNTR_REENABLE	xfs_mount.c	2378;"	d	file:
XFS_ICSB_LAZY_COUNT	xfs_mount.h	86;"	d
XFS_IDIRTY_RELEASE	xfs_inode.h	372;"	d
XFS_IEXT_BUFSZ	xfs_inode.h	59;"	d
XFS_IFBROOT	xfs_inode.h	166;"	d
XFS_IFEXTENTS	xfs_inode.h	165;"	d
XFS_IFEXTIREC	xfs_inode.h	167;"	d
XFS_IFILESTREAM	xfs_inode.h	370;"	d
XFS_IFINLINE	xfs_inode.h	164;"	d
XFS_IFLOCK	xfs_inode.h	374;"	d
XFS_IFORK_ASIZE	xfs_inode.h	184;"	d
XFS_IFORK_BOFF	xfs_inode.h	174;"	d
XFS_IFORK_DSIZE	xfs_inode.h	180;"	d
XFS_IFORK_FMT_SET	xfs_inode.h	196;"	d
XFS_IFORK_FORMAT	xfs_inode.h	192;"	d
XFS_IFORK_MAXEXT	xfs_inode.h	208;"	d
XFS_IFORK_NEXTENTS	xfs_inode.h	200;"	d
XFS_IFORK_NEXT_SET	xfs_inode.h	204;"	d
XFS_IFORK_PTR	xfs_inode.h	176;"	d
XFS_IFORK_Q	xfs_inode.h	173;"	d
XFS_IFORK_SIZE	xfs_inode.h	188;"	d
XFS_IFREE_LOG_RES	xfs_trans.h	241;"	d
XFS_IGET_CREATE	xfs_inode.h	545;"	d
XFS_IGET_UNTRUSTED	xfs_inode.h	546;"	d
XFS_ILOCK_DEP	xfs_inode.h	474;"	d
XFS_ILOCK_DEP_MASK	xfs_inode.h	470;"	d
XFS_ILOCK_EXCL	xfs_inode.h	423;"	d
XFS_ILOCK_PARENT	xfs_inode.h	465;"	d
XFS_ILOCK_RTBITMAP	xfs_inode.h	466;"	d
XFS_ILOCK_RTSUM	xfs_inode.h	467;"	d
XFS_ILOCK_SHARED	xfs_inode.h	424;"	d
XFS_ILOCK_SHIFT	xfs_inode.h	464;"	d
XFS_ILOG_ABROOT	xfs_inode_item.h	87;"	d
XFS_ILOG_ADATA	xfs_inode_item.h	85;"	d
XFS_ILOG_AEXT	xfs_inode_item.h	86;"	d
XFS_ILOG_AFORK	xfs_inode_item.h	97;"	d
XFS_ILOG_ALL	xfs_inode_item.h	100;"	d
XFS_ILOG_CORE	xfs_inode_item.h	79;"	d
XFS_ILOG_DBROOT	xfs_inode_item.h	82;"	d
XFS_ILOG_DDATA	xfs_inode_item.h	80;"	d
XFS_ILOG_DEV	xfs_inode_item.h	83;"	d
XFS_ILOG_DEXT	xfs_inode_item.h	81;"	d
XFS_ILOG_DFORK	xfs_inode_item.h	94;"	d
XFS_ILOG_NONCORE	xfs_inode_item.h	89;"	d
XFS_ILOG_UUID	xfs_inode_item.h	84;"	d
XFS_INACTIVE_LOG_COUNT	xfs_trans.h	271;"	d
XFS_INEW	xfs_inode.h	369;"	d
XFS_INHERIT_GID	xfs_inode.h	483;"	d
XFS_INHERIT_NOATIME	xfs_sysctl.h	/^	XFS_INHERIT_NOATIME = 15,$/;"	e	enum:__anon32
XFS_INHERIT_NODFRG	xfs_sysctl.h	/^	XFS_INHERIT_NODFRG = 21,$/;"	e	enum:__anon32
XFS_INHERIT_NODUMP	xfs_sysctl.h	/^	XFS_INHERIT_NODUMP = 14,$/;"	e	enum:__anon32
XFS_INHERIT_NOSYM	xfs_sysctl.h	/^	XFS_INHERIT_NOSYM = 19,$/;"	e	enum:__anon32
XFS_INHERIT_SYNC	xfs_sysctl.h	/^	XFS_INHERIT_SYNC = 13,$/;"	e	enum:__anon32
XFS_INLINE_DATA	xfs_inode.h	62;"	d
XFS_INLINE_EXTS	xfs_inode.h	61;"	d
XFS_INOBT_ALL_FREE	xfs_ialloc_btree.h	37;"	d
XFS_INOBT_BLOCK_LEN	xfs_ialloc_btree.h	82;"	d
XFS_INOBT_KEY_ADDR	xfs_ialloc_btree.h	95;"	d
XFS_INOBT_MASK	xfs_ialloc_btree.h	38;"	d
XFS_INOBT_PTR_ADDR	xfs_ialloc_btree.h	101;"	d
XFS_INOBT_REC_ADDR	xfs_ialloc_btree.h	89;"	d
XFS_INODES_PER_CHUNK	xfs_ialloc_btree.h	35;"	d
XFS_INODES_PER_CHUNK_LOG	xfs_ialloc_btree.h	36;"	d
XFS_INODE_BIG_CLUSTER_SIZE	xfs_ialloc.h	36;"	d
XFS_INODE_CLUSTER_SIZE	xfs_ialloc.h	37;"	d
XFS_INODE_FORMAT_STR	xfs_trace.h	1539;"	d
XFS_INO_AGBNO_BITS	xfs_inum.h	38;"	d
XFS_INO_AGINO_BITS	xfs_inum.h	39;"	d
XFS_INO_AGNO_BITS	xfs_inum.h	40;"	d
XFS_INO_BITS	xfs_inum.h	41;"	d
XFS_INO_BTREE_REF	xfs_trans.h	292;"	d
XFS_INO_MASK	xfs_inum.h	36;"	d
XFS_INO_OFFSET_BITS	xfs_inum.h	37;"	d
XFS_INO_REF	xfs_trans.h	296;"	d
XFS_INO_TO_AGBNO	xfs_inum.h	47;"	d
XFS_INO_TO_AGINO	xfs_inum.h	45;"	d
XFS_INO_TO_AGNO	xfs_inum.h	43;"	d
XFS_INO_TO_FSB	xfs_inum.h	52;"	d
XFS_INO_TO_OFFSET	xfs_inum.h	50;"	d
XFS_IOC_ALLOCSP	xfs_fs.h	440;"	d
XFS_IOC_ALLOCSP64	xfs_fs.h	445;"	d
XFS_IOC_ALLOCSP64_32	xfs_ioctl32.h	181;"	d
XFS_IOC_ALLOCSP_32	xfs_ioctl32.h	179;"	d
XFS_IOC_ATTRLIST_BY_HANDLE	xfs_fs.h	485;"	d
XFS_IOC_ATTRLIST_BY_HANDLE_32	xfs_ioctl32.h	134;"	d
XFS_IOC_ATTRMULTI_BY_HANDLE	xfs_fs.h	486;"	d
XFS_IOC_ATTRMULTI_BY_HANDLE_32	xfs_ioctl32.h	154;"	d
XFS_IOC_DIOINFO	xfs_fs.h	442;"	d
XFS_IOC_ERROR_CLEARALL	xfs_fs.h	480;"	d
XFS_IOC_ERROR_INJECTION	xfs_fs.h	479;"	d
XFS_IOC_FD_TO_HANDLE	xfs_fs.h	469;"	d
XFS_IOC_FD_TO_HANDLE_32	xfs_ioctl32.h	105;"	d
XFS_IOC_FREESP	xfs_fs.h	441;"	d
XFS_IOC_FREESP64	xfs_fs.h	446;"	d
XFS_IOC_FREESP64_32	xfs_ioctl32.h	182;"	d
XFS_IOC_FREESP_32	xfs_ioctl32.h	180;"	d
XFS_IOC_FSBULKSTAT	xfs_fs.h	464;"	d
XFS_IOC_FSBULKSTAT_32	xfs_ioctl32.h	84;"	d
XFS_IOC_FSBULKSTAT_SINGLE	xfs_fs.h	465;"	d
XFS_IOC_FSBULKSTAT_SINGLE_32	xfs_ioctl32.h	86;"	d
XFS_IOC_FSCOUNTS	xfs_fs.h	476;"	d
XFS_IOC_FSGEOMETRY	xfs_fs.h	487;"	d
XFS_IOC_FSGEOMETRY_V1	xfs_fs.h	463;"	d
XFS_IOC_FSGEOMETRY_V1_32	xfs_ioctl32.h	212;"	d
XFS_IOC_FSGETXATTR	xfs_fs.h	443;"	d
XFS_IOC_FSGETXATTRA	xfs_fs.h	454;"	d
XFS_IOC_FSGROWFSDATA	xfs_fs.h	473;"	d
XFS_IOC_FSGROWFSDATA_32	xfs_ioctl32.h	232;"	d
XFS_IOC_FSGROWFSLOG	xfs_fs.h	474;"	d
XFS_IOC_FSGROWFSRT	xfs_fs.h	475;"	d
XFS_IOC_FSGROWFSRT_32	xfs_ioctl32.h	233;"	d
XFS_IOC_FSINUMBERS	xfs_fs.h	466;"	d
XFS_IOC_FSINUMBERS_32	xfs_ioctl32.h	88;"	d
XFS_IOC_FSSETDM	xfs_fs.h	448;"	d
XFS_IOC_FSSETDM_BY_HANDLE	xfs_fs.h	484;"	d
XFS_IOC_FSSETDM_BY_HANDLE_32	xfs_ioctl32.h	163;"	d
XFS_IOC_FSSETXATTR	xfs_fs.h	444;"	d
XFS_IOC_GETBMAP	xfs_fs.h	447;"	d
XFS_IOC_GETBMAPA	xfs_fs.h	453;"	d
XFS_IOC_GETBMAPX	xfs_fs.h	457;"	d
XFS_IOC_GETVERSION	xfs_fs.h	433;"	d
XFS_IOC_GETVERSION_32	xfs_ioctl32.h	34;"	d
XFS_IOC_GETXFLAGS	xfs_fs.h	431;"	d
XFS_IOC_GETXFLAGS_32	xfs_ioctl32.h	32;"	d
XFS_IOC_GET_RESBLKS	xfs_fs.h	478;"	d
XFS_IOC_GOINGDOWN	xfs_fs.h	488;"	d
XFS_IOC_OPEN_BY_HANDLE	xfs_fs.h	470;"	d
XFS_IOC_OPEN_BY_HANDLE_32	xfs_ioctl32.h	107;"	d
XFS_IOC_PATH_TO_FSHANDLE	xfs_fs.h	467;"	d
XFS_IOC_PATH_TO_FSHANDLE_32	xfs_ioctl32.h	101;"	d
XFS_IOC_PATH_TO_HANDLE	xfs_fs.h	468;"	d
XFS_IOC_PATH_TO_HANDLE_32	xfs_ioctl32.h	103;"	d
XFS_IOC_READLINK_BY_HANDLE	xfs_fs.h	471;"	d
XFS_IOC_READLINK_BY_HANDLE_32	xfs_ioctl32.h	109;"	d
XFS_IOC_RESVSP	xfs_fs.h	449;"	d
XFS_IOC_RESVSP64	xfs_fs.h	451;"	d
XFS_IOC_RESVSP64_32	xfs_ioctl32.h	185;"	d
XFS_IOC_RESVSP_32	xfs_ioctl32.h	183;"	d
XFS_IOC_SETXFLAGS	xfs_fs.h	432;"	d
XFS_IOC_SETXFLAGS_32	xfs_ioctl32.h	33;"	d
XFS_IOC_SET_RESBLKS	xfs_fs.h	477;"	d
XFS_IOC_SWAPEXT	xfs_fs.h	472;"	d
XFS_IOC_SWAPEXT_32	xfs_ioctl32.h	123;"	d
XFS_IOC_UNRESVSP	xfs_fs.h	450;"	d
XFS_IOC_UNRESVSP64	xfs_fs.h	452;"	d
XFS_IOC_UNRESVSP64_32	xfs_ioctl32.h	186;"	d
XFS_IOC_UNRESVSP_32	xfs_ioctl32.h	184;"	d
XFS_IOC_ZERO_RANGE	xfs_fs.h	458;"	d
XFS_IOC_ZERO_RANGE_32	xfs_ioctl32.h	187;"	d
XFS_IOLOCK_DEP	xfs_inode.h	473;"	d
XFS_IOLOCK_DEP_MASK	xfs_inode.h	469;"	d
XFS_IOLOCK_EXCL	xfs_inode.h	421;"	d
XFS_IOLOCK_PARENT	xfs_inode.h	462;"	d
XFS_IOLOCK_SHARED	xfs_inode.h	422;"	d
XFS_IOLOCK_SHIFT	xfs_inode.h	461;"	d
XFS_IO_FLAGS	xfs_vnode.h	42;"	d
XFS_IO_TYPES	xfs_aops.h	35;"	d
XFS_IPINNED	xfs_inode.h	376;"	d
XFS_IRECLAIM	xfs_inode.h	366;"	d
XFS_IRECLAIMABLE	xfs_inode.h	368;"	d
XFS_IRECLAIM_RESET_FLAGS	xfs_inode.h	383;"	d
XFS_ISIZE	xfs_inode.h	/^static inline xfs_fsize_t XFS_ISIZE(struct xfs_inode *ip)$/;"	f
XFS_ISRESET_CURSOR	xfs_attr_leaf.c	567;"	d	file:
XFS_ISTALE	xfs_inode.h	367;"	d
XFS_IS_DQUOT_UNINITIALIZED	xfs_quota_priv.h	38;"	d
XFS_IS_GQUOTA_ON	xfs_quota.h	190;"	d
XFS_IS_GQUOTA_RUNNING	xfs_quota.h	165;"	d
XFS_IS_OQUOTA_ENFORCED	xfs_quota.h	167;"	d
XFS_IS_OQUOTA_ON	xfs_quota.h	187;"	d
XFS_IS_PQUOTA_ON	xfs_quota.h	191;"	d
XFS_IS_PQUOTA_RUNNING	xfs_quota.h	164;"	d
XFS_IS_QUOTA_ON	xfs_quota.h	184;"	d
XFS_IS_QUOTA_RUNNING	xfs_quota.h	162;"	d
XFS_IS_REALTIME_INODE	xfs_dinode.h	204;"	d
XFS_IS_REALTIME_INODE	xfs_dinode.h	206;"	d
XFS_IS_UQUOTA_ENFORCED	xfs_quota.h	166;"	d
XFS_IS_UQUOTA_ON	xfs_quota.h	189;"	d
XFS_IS_UQUOTA_RUNNING	xfs_quota.h	163;"	d
XFS_ITEM_LOCKED	xfs_trans.h	372;"	d
XFS_ITEM_PINNED	xfs_trans.h	371;"	d
XFS_ITEM_PUSHBUF	xfs_trans.h	373;"	d
XFS_ITEM_SUCCESS	xfs_trans.h	370;"	d
XFS_ITRUNCATED	xfs_inode.h	371;"	d
XFS_ITRUNCATE_LOG_COUNT	xfs_trans.h	270;"	d
XFS_ITRUNCATE_LOG_RES	xfs_trans.h	234;"	d
XFS_ITRUNC_MAX_EXTENTS	xfs_inode.c	57;"	d	file:
XFS_LAST_UNMOUNT_WAS_CLEAN	xfs_mount.h	298;"	d
XFS_LBSIZE	xfs_da_btree.h	75;"	d
XFS_LID_DIRTY	xfs_trans.h	170;"	d
XFS_LINEAR_EXTS	xfs_inode.h	60;"	d
XFS_LINK_LOG_COUNT	xfs_trans.h	276;"	d
XFS_LINK_LOG_RES	xfs_trans.h	236;"	d
XFS_LINK_SPACE_RES	xfs_trans_space.h	70;"	d
XFS_LITINO	xfs_dinode.h	107;"	d
XFS_LI_ABORTED	xfs_trans.h	337;"	d
XFS_LI_BUF	xfs_trans.h	48;"	d
XFS_LI_DQUOT	xfs_trans.h	49;"	d
XFS_LI_EFD	xfs_trans.h	45;"	d
XFS_LI_EFI	xfs_trans.h	44;"	d
XFS_LI_FLAGS	xfs_trans.h	339;"	d
XFS_LI_INODE	xfs_trans.h	47;"	d
XFS_LI_IN_AIL	xfs_trans.h	336;"	d
XFS_LI_IUNLINK	xfs_trans.h	46;"	d
XFS_LI_QUOTAOFF	xfs_trans.h	50;"	d
XFS_LI_TYPE_DESC	xfs_trans.h	52;"	d
XFS_LOCK_DEP_MASK	xfs_inode.h	471;"	d
XFS_LOCK_FLAGS	xfs_inode.h	429;"	d
XFS_LOCK_INUMORDER	xfs_inode.h	459;"	d
XFS_LOCK_MASK	xfs_inode.h	426;"	d
XFS_LOCK_PARENT	xfs_inode.h	456;"	d
XFS_LOCK_RTBITMAP	xfs_inode.h	457;"	d
XFS_LOCK_RTSUM	xfs_inode.h	458;"	d
XFS_LOG	xfs_log.h	68;"	d
XFS_LOG_REL_PERM_RESERV	xfs_log.h	53;"	d
XFS_LOG_SYNC	xfs_log.h	60;"	d
XFS_LOOKUP_BATCH	xfs_sync.c	51;"	d	file:
XFS_LOOKUP_EQ	xfs_btree.h	32;"	d
XFS_LOOKUP_EQi	xfs_types.h	/^	XFS_LOOKUP_EQi, XFS_LOOKUP_LEi, XFS_LOOKUP_GEi$/;"	e	enum:__anon34
XFS_LOOKUP_GE	xfs_btree.h	34;"	d
XFS_LOOKUP_GEi	xfs_types.h	/^	XFS_LOOKUP_EQi, XFS_LOOKUP_LEi, XFS_LOOKUP_GEi$/;"	e	enum:__anon34
XFS_LOOKUP_LE	xfs_btree.h	33;"	d
XFS_LOOKUP_LEi	xfs_types.h	/^	XFS_LOOKUP_EQi, XFS_LOOKUP_LEi, XFS_LOOKUP_GEi$/;"	e	enum:__anon34
XFS_LOWSP_1_PCNT	xfs_mount.h	/^	XFS_LOWSP_1_PCNT = 0,$/;"	e	enum:__anon29
XFS_LOWSP_2_PCNT	xfs_mount.h	/^	XFS_LOWSP_2_PCNT,$/;"	e	enum:__anon29
XFS_LOWSP_3_PCNT	xfs_mount.h	/^	XFS_LOWSP_3_PCNT,$/;"	e	enum:__anon29
XFS_LOWSP_4_PCNT	xfs_mount.h	/^	XFS_LOWSP_4_PCNT,$/;"	e	enum:__anon29
XFS_LOWSP_5_PCNT	xfs_mount.h	/^	XFS_LOWSP_5_PCNT,$/;"	e	enum:__anon29
XFS_LOWSP_MAX	xfs_mount.h	/^	XFS_LOWSP_MAX,$/;"	e	enum:__anon29
XFS_LSN_CMP	xfs_log.h	44;"	d
XFS_M	xfs_super.h	85;"	d
XFS_MAXINUMBER	xfs_inum.h	63;"	d
XFS_MAXINUMBER	xfs_inum.h	65;"	d
XFS_MAXINUMBER_32	xfs_inum.h	67;"	d
XFS_MAXIOFFSET	xfs_mount.h	296;"	d
XFS_MAXLINK	xfs_dinode.h	82;"	d
XFS_MAXLINK_1	xfs_dinode.h	83;"	d
XFS_MAX_BLOCKSIZE	xfs_alloc_btree.h	61;"	d
XFS_MAX_BLOCKSIZE_LOG	xfs_alloc_btree.h	59;"	d
XFS_MAX_CONTIG_EXTENTS_PER_BLOCK	xfs_trans_space.h	24;"	d
XFS_MAX_DBLOCKS	xfs_fs.h	253;"	d
XFS_MAX_IO_LOG	xfs_mount.h	262;"	d
XFS_MAX_LOG_BLOCKS	xfs_fs.h	245;"	d
XFS_MAX_LOG_BYTES	xfs_fs.h	249;"	d
XFS_MAX_RTEXTSIZE	xfs_rtalloc.h	25;"	d
XFS_MAX_SECTORSIZE	xfs_alloc_btree.h	65;"	d
XFS_MAX_SECTORSIZE_LOG	xfs_alloc_btree.h	63;"	d
XFS_MFSI_QUIET	xfs_mount.h	319;"	d
XFS_MIN_AG_BLOCKS	xfs_fs.h	243;"	d
XFS_MIN_BLOCKSIZE	xfs_alloc_btree.h	60;"	d
XFS_MIN_BLOCKSIZE_LOG	xfs_alloc_btree.h	58;"	d
XFS_MIN_DBLOCKS	xfs_fs.h	254;"	d
XFS_MIN_FREELIST	xfs_ag.h	258;"	d
XFS_MIN_FREELIST_PAG	xfs_ag.h	262;"	d
XFS_MIN_FREELIST_RAW	xfs_ag.h	256;"	d
XFS_MIN_IO_LOG	xfs_mount.h	263;"	d
XFS_MIN_LOG_BLOCKS	xfs_fs.h	244;"	d
XFS_MIN_LOG_BYTES	xfs_fs.h	246;"	d
XFS_MIN_RTEXTSIZE	xfs_rtalloc.h	27;"	d
XFS_MIN_SECTORSIZE	xfs_alloc_btree.h	64;"	d
XFS_MIN_SECTORSIZE_LOG	xfs_alloc_btree.h	62;"	d
XFS_MKDIR_LOG_COUNT	xfs_trans.h	273;"	d
XFS_MKDIR_LOG_RES	xfs_trans.h	240;"	d
XFS_MKDIR_SPACE_RES	xfs_trans_space.h	72;"	d
XFS_MOUNT_32BITINODES	xfs_mount.h	235;"	d
XFS_MOUNT_ATTR2	xfs_mount.h	231;"	d
XFS_MOUNT_BARRIER	xfs_mount.h	239;"	d
XFS_MOUNT_COMPAT_IOSIZE	xfs_mount.h	245;"	d
XFS_MOUNT_DFLT_IOSIZE	xfs_mount.h	234;"	d
XFS_MOUNT_DIRSYNC	xfs_mount.h	244;"	d
XFS_MOUNT_DISCARD	xfs_mount.h	226;"	d
XFS_MOUNT_FILESTREAMS	xfs_mount.h	247;"	d
XFS_MOUNT_FS_SHUTDOWN	xfs_mount.h	223;"	d
XFS_MOUNT_GRPID	xfs_mount.h	232;"	d
XFS_MOUNT_IKEEP	xfs_mount.h	240;"	d
XFS_MOUNT_NOALIGN	xfs_mount.h	229;"	d
XFS_MOUNT_NOATTR2	xfs_mount.h	249;"	d
XFS_MOUNT_NORECOVERY	xfs_mount.h	233;"	d
XFS_MOUNT_NOUUID	xfs_mount.h	238;"	d
XFS_MOUNT_QUOTA_ALL	xfs_quota.h	276;"	d
XFS_MOUNT_QUOTA_SET1	xfs_quota.h	268;"	d
XFS_MOUNT_QUOTA_SET2	xfs_quota.h	272;"	d
XFS_MOUNT_RDONLY	xfs_mount.h	243;"	d
XFS_MOUNT_RETERR	xfs_mount.h	227;"	d
XFS_MOUNT_SMALL_INUMS	xfs_mount.h	237;"	d
XFS_MOUNT_SWALLOC	xfs_mount.h	241;"	d
XFS_MOUNT_WAS_CLEAN	xfs_mount.h	222;"	d
XFS_MOUNT_WSYNC	xfs_mount.h	219;"	d
XFS_NATIVE_HOST	xfs_linux.h	92;"	d
XFS_NATIVE_HOST	xfs_linux.h	94;"	d
XFS_NBBYLOG	xfs_rtalloc.h	32;"	d
XFS_NBWORD	xfs_rtalloc.h	35;"	d
XFS_NBWORDLOG	xfs_rtalloc.h	34;"	d
XFS_NEXTENTADD_SPACE_RES	xfs_trans_space.h	27;"	d
XFS_NOT_DQATTACHED	xfs_quota.h	253;"	d
XFS_NO_PTAG	xfs_error.h	151;"	d
XFS_NUM_INJECT_ERROR	xfs_error.h	133;"	d
XFS_OFFBNO_TO_AGINO	xfs_inum.h	59;"	d
XFS_OQUOTA_CHKD	xfs_quota.h	151;"	d
XFS_OQUOTA_ENFD	xfs_quota.h	150;"	d
XFS_PAGB_NUM_SLOTS	xfs_ag.h	199;"	d
XFS_PANIC_MASK	xfs_sysctl.h	/^	XFS_PANIC_MASK = 6,$/;"	e	enum:__anon32
XFS_PICK_LOWSPACE	xfs_filestream.h	/^	XFS_PICK_LOWSPACE = 2,$/;"	e	enum:xfs_fstrm_alloc
XFS_PICK_USERDATA	xfs_filestream.h	/^	XFS_PICK_USERDATA = 1,$/;"	e	enum:xfs_fstrm_alloc
XFS_PQUOTA_ACCT	xfs_quota.h	149;"	d
XFS_PQUOTA_ACTIVE	xfs_quota.h	175;"	d
XFS_PREALLOC_BLOCKS	xfs_ialloc_btree.h	75;"	d
XFS_PROJID_DEFAULT	xfs_linux.h	152;"	d
XFS_PTAG_AILDELETE	xfs_error.h	154;"	d
XFS_PTAG_ERROR_REPORT	xfs_error.h	155;"	d
XFS_PTAG_FSBLOCK_ZERO	xfs_error.h	159;"	d
XFS_PTAG_IFLUSH	xfs_error.h	152;"	d
XFS_PTAG_LOGRES	xfs_error.h	153;"	d
XFS_PTAG_SHUTDOWN_CORRUPT	xfs_error.h	156;"	d
XFS_PTAG_SHUTDOWN_IOERROR	xfs_error.h	157;"	d
XFS_PTAG_SHUTDOWN_LOGERROR	xfs_error.h	158;"	d
XFS_QLOCK_NESTED	xfs_dquot.h	/^	XFS_QLOCK_NESTED,$/;"	e	enum:__anon20
XFS_QLOCK_NORMAL	xfs_dquot.h	/^	XFS_QLOCK_NORMAL = 0,$/;"	e	enum:__anon20
XFS_QMOPT_BCOUNT	xfs_quota.h	214;"	d
XFS_QMOPT_DELBCOUNT	xfs_quota.h	217;"	d
XFS_QMOPT_DELRTBCOUNT	xfs_quota.h	218;"	d
XFS_QMOPT_DOWARN	xfs_quota.h	203;"	d
XFS_QMOPT_DQALLOC	xfs_quota.h	198;"	d
XFS_QMOPT_DQREPAIR	xfs_quota.h	204;"	d
XFS_QMOPT_ENOSPC	xfs_quota.h	206;"	d
XFS_QMOPT_FORCE_RES	xfs_quota.h	201;"	d
XFS_QMOPT_GQUOTA	xfs_quota.h	205;"	d
XFS_QMOPT_ICOUNT	xfs_quota.h	215;"	d
XFS_QMOPT_INHERIT	xfs_quota.h	224;"	d
XFS_QMOPT_PQUOTA	xfs_quota.h	200;"	d
XFS_QMOPT_QUOTALL	xfs_quota.h	239;"	d
XFS_QMOPT_RESBLK_MASK	xfs_quota.h	241;"	d
XFS_QMOPT_RES_INOS	xfs_quota.h	219;"	d
XFS_QMOPT_RES_REGBLKS	xfs_quota.h	212;"	d
XFS_QMOPT_RES_RTBLKS	xfs_quota.h	213;"	d
XFS_QMOPT_RTBCOUNT	xfs_quota.h	216;"	d
XFS_QMOPT_SBVERSION	xfs_quota.h	202;"	d
XFS_QMOPT_UQUOTA	xfs_quota.h	199;"	d
XFS_QM_BTIMELIMIT	xfs_qm.h	120;"	d
XFS_QM_BWARNLIMIT	xfs_qm.h	124;"	d
XFS_QM_DQALLOC_SPACE_RES	xfs_trans_space.h	74;"	d
XFS_QM_HASHSIZE_HIGH	xfs_qm.h	38;"	d
XFS_QM_HASHSIZE_LOW	xfs_qm.h	37;"	d
XFS_QM_ISGDQ	xfs_dquot.h	148;"	d
XFS_QM_ISPDQ	xfs_dquot.h	147;"	d
XFS_QM_ISUDQ	xfs_dquot.h	146;"	d
XFS_QM_ITIMELIMIT	xfs_qm.h	122;"	d
XFS_QM_IWARNLIMIT	xfs_qm.h	125;"	d
XFS_QM_NEED_QUOTACHECK	xfs_quota.h	258;"	d
XFS_QM_QINOCREATE_SPACE_RES	xfs_trans_space.h	77;"	d
XFS_QM_RTBTIMELIMIT	xfs_qm.h	121;"	d
XFS_QM_RTBWARNLIMIT	xfs_qm.h	126;"	d
XFS_QM_TRANS_MAXDQS	xfs_qm.h	110;"	d
XFS_RANDOM_ALLOC_READ_AGF	xfs_error.h	116;"	d
XFS_RANDOM_BMAPIFORMAT	xfs_error.h	127;"	d
XFS_RANDOM_BTREE_CHECK_LBLOCK	xfs_error.h	114;"	d
XFS_RANDOM_BTREE_CHECK_SBLOCK	xfs_error.h	115;"	d
XFS_RANDOM_BULKSTAT_READ_CHUNK	xfs_error.h	122;"	d
XFS_RANDOM_DA_READ_BUF	xfs_error.h	113;"	d
XFS_RANDOM_DEFAULT	xfs_error.h	106;"	d
XFS_RANDOM_DIOWRITE_IOERR	xfs_error.h	126;"	d
XFS_RANDOM_DIR_INO_VALIDATE	xfs_error.h	121;"	d
XFS_RANDOM_IALLOC_READ_AGI	xfs_error.h	117;"	d
XFS_RANDOM_IFLUSH_1	xfs_error.h	107;"	d
XFS_RANDOM_IFLUSH_2	xfs_error.h	108;"	d
XFS_RANDOM_IFLUSH_3	xfs_error.h	109;"	d
XFS_RANDOM_IFLUSH_4	xfs_error.h	110;"	d
XFS_RANDOM_IFLUSH_5	xfs_error.h	111;"	d
XFS_RANDOM_IFLUSH_6	xfs_error.h	112;"	d
XFS_RANDOM_IODONE_IOERR	xfs_error.h	123;"	d
XFS_RANDOM_ITOBP_INOTOBP	xfs_error.h	118;"	d
XFS_RANDOM_IUNLINK	xfs_error.h	119;"	d
XFS_RANDOM_IUNLINK_REMOVE	xfs_error.h	120;"	d
XFS_RANDOM_STRATCMPL_IOERR	xfs_error.h	125;"	d
XFS_RANDOM_STRATREAD_IOERR	xfs_error.h	124;"	d
XFS_READIO_LOG_LARGE	xfs_mount.h	255;"	d
XFS_REALTIME_STRING	xfs_super.h	44;"	d
XFS_REALTIME_STRING	xfs_super.h	46;"	d
XFS_REMOVE_LOG_COUNT	xfs_trans.h	275;"	d
XFS_REMOVE_LOG_RES	xfs_trans.h	237;"	d
XFS_REMOVE_SPACE_RES	xfs_trans_space.h	79;"	d
XFS_RENAME_LOG_COUNT	xfs_trans.h	277;"	d
XFS_RENAME_LOG_RES	xfs_trans.h	235;"	d
XFS_RENAME_SPACE_RES	xfs_trans_space.h	81;"	d
XFS_ROTORSTEP	xfs_sysctl.h	/^	XFS_ROTORSTEP = 20,$/;"	e	enum:__anon32
XFS_RTBLOCKLOG	xfs_rtalloc.h	65;"	d
XFS_RTBLOCKLOG	xfs_rtalloc.h	67;"	d
XFS_RTHIBIT	xfs_rtalloc.h	62;"	d
XFS_RTLOBIT	xfs_rtalloc.h	61;"	d
XFS_RTMAX	xfs_rtalloc.h	59;"	d
XFS_RTMIN	xfs_rtalloc.h	58;"	d
XFS_SBF_NOFLAGS	xfs_sb.h	292;"	d
XFS_SBF_READONLY	xfs_sb.h	293;"	d
XFS_SBS_AGBLKLOG	xfs_sb.h	/^	XFS_SBS_SECTLOG, XFS_SBS_INODELOG, XFS_SBS_INOPBLOG, XFS_SBS_AGBLKLOG,$/;"	e	enum:__anon30
XFS_SBS_AGBLOCKS	xfs_sb.h	/^	XFS_SBS_RBMINO, XFS_SBS_RSUMINO, XFS_SBS_REXTSIZE, XFS_SBS_AGBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_AGCOUNT	xfs_sb.h	/^	XFS_SBS_AGCOUNT, XFS_SBS_RBMBLOCKS, XFS_SBS_LOGBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_BAD_FEATURES2	xfs_sb.h	/^	XFS_SBS_FEATURES2, XFS_SBS_BAD_FEATURES2,$/;"	e	enum:__anon30
XFS_SBS_BLOCKLOG	xfs_sb.h	/^	XFS_SBS_INOPBLOCK, XFS_SBS_FNAME, XFS_SBS_BLOCKLOG,$/;"	e	enum:__anon30
XFS_SBS_BLOCKSIZE	xfs_sb.h	/^	XFS_SBS_MAGICNUM, XFS_SBS_BLOCKSIZE, XFS_SBS_DBLOCKS, XFS_SBS_RBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_DBLOCKS	xfs_sb.h	/^	XFS_SBS_MAGICNUM, XFS_SBS_BLOCKSIZE, XFS_SBS_DBLOCKS, XFS_SBS_RBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_DIRBLKLOG	xfs_sb.h	/^	XFS_SBS_INOALIGNMT, XFS_SBS_UNIT, XFS_SBS_WIDTH, XFS_SBS_DIRBLKLOG,$/;"	e	enum:__anon30
XFS_SBS_FDBLOCKS	xfs_sb.h	/^	XFS_SBS_IFREE, XFS_SBS_FDBLOCKS, XFS_SBS_FREXTENTS, XFS_SBS_UQUOTINO,$/;"	e	enum:__anon30
XFS_SBS_FEATURES2	xfs_sb.h	/^	XFS_SBS_FEATURES2, XFS_SBS_BAD_FEATURES2,$/;"	e	enum:__anon30
XFS_SBS_FIELDCOUNT	xfs_sb.h	/^	XFS_SBS_FIELDCOUNT$/;"	e	enum:__anon30
XFS_SBS_FLAGS	xfs_sb.h	/^	XFS_SBS_GQUOTINO, XFS_SBS_QFLAGS, XFS_SBS_FLAGS, XFS_SBS_SHARED_VN,$/;"	e	enum:__anon30
XFS_SBS_FNAME	xfs_sb.h	/^	XFS_SBS_INOPBLOCK, XFS_SBS_FNAME, XFS_SBS_BLOCKLOG,$/;"	e	enum:__anon30
XFS_SBS_FREXTENTS	xfs_sb.h	/^	XFS_SBS_IFREE, XFS_SBS_FDBLOCKS, XFS_SBS_FREXTENTS, XFS_SBS_UQUOTINO,$/;"	e	enum:__anon30
XFS_SBS_GQUOTINO	xfs_sb.h	/^	XFS_SBS_GQUOTINO, XFS_SBS_QFLAGS, XFS_SBS_FLAGS, XFS_SBS_SHARED_VN,$/;"	e	enum:__anon30
XFS_SBS_ICOUNT	xfs_sb.h	/^	XFS_SBS_REXTSLOG, XFS_SBS_INPROGRESS, XFS_SBS_IMAX_PCT, XFS_SBS_ICOUNT,$/;"	e	enum:__anon30
XFS_SBS_IFREE	xfs_sb.h	/^	XFS_SBS_IFREE, XFS_SBS_FDBLOCKS, XFS_SBS_FREXTENTS, XFS_SBS_UQUOTINO,$/;"	e	enum:__anon30
XFS_SBS_IMAX_PCT	xfs_sb.h	/^	XFS_SBS_REXTSLOG, XFS_SBS_INPROGRESS, XFS_SBS_IMAX_PCT, XFS_SBS_ICOUNT,$/;"	e	enum:__anon30
XFS_SBS_INOALIGNMT	xfs_sb.h	/^	XFS_SBS_INOALIGNMT, XFS_SBS_UNIT, XFS_SBS_WIDTH, XFS_SBS_DIRBLKLOG,$/;"	e	enum:__anon30
XFS_SBS_INODELOG	xfs_sb.h	/^	XFS_SBS_SECTLOG, XFS_SBS_INODELOG, XFS_SBS_INOPBLOG, XFS_SBS_AGBLKLOG,$/;"	e	enum:__anon30
XFS_SBS_INODESIZE	xfs_sb.h	/^	XFS_SBS_VERSIONNUM, XFS_SBS_SECTSIZE, XFS_SBS_INODESIZE,$/;"	e	enum:__anon30
XFS_SBS_INOPBLOCK	xfs_sb.h	/^	XFS_SBS_INOPBLOCK, XFS_SBS_FNAME, XFS_SBS_BLOCKLOG,$/;"	e	enum:__anon30
XFS_SBS_INOPBLOG	xfs_sb.h	/^	XFS_SBS_SECTLOG, XFS_SBS_INODELOG, XFS_SBS_INOPBLOG, XFS_SBS_AGBLKLOG,$/;"	e	enum:__anon30
XFS_SBS_INPROGRESS	xfs_sb.h	/^	XFS_SBS_REXTSLOG, XFS_SBS_INPROGRESS, XFS_SBS_IMAX_PCT, XFS_SBS_ICOUNT,$/;"	e	enum:__anon30
XFS_SBS_LOGBLOCKS	xfs_sb.h	/^	XFS_SBS_AGCOUNT, XFS_SBS_RBMBLOCKS, XFS_SBS_LOGBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_LOGSECTLOG	xfs_sb.h	/^	XFS_SBS_LOGSECTLOG, XFS_SBS_LOGSECTSIZE, XFS_SBS_LOGSUNIT,$/;"	e	enum:__anon30
XFS_SBS_LOGSECTSIZE	xfs_sb.h	/^	XFS_SBS_LOGSECTLOG, XFS_SBS_LOGSECTSIZE, XFS_SBS_LOGSUNIT,$/;"	e	enum:__anon30
XFS_SBS_LOGSTART	xfs_sb.h	/^	XFS_SBS_REXTENTS, XFS_SBS_UUID, XFS_SBS_LOGSTART, XFS_SBS_ROOTINO,$/;"	e	enum:__anon30
XFS_SBS_LOGSUNIT	xfs_sb.h	/^	XFS_SBS_LOGSECTLOG, XFS_SBS_LOGSECTSIZE, XFS_SBS_LOGSUNIT,$/;"	e	enum:__anon30
XFS_SBS_MAGICNUM	xfs_sb.h	/^	XFS_SBS_MAGICNUM, XFS_SBS_BLOCKSIZE, XFS_SBS_DBLOCKS, XFS_SBS_RBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_QFLAGS	xfs_sb.h	/^	XFS_SBS_GQUOTINO, XFS_SBS_QFLAGS, XFS_SBS_FLAGS, XFS_SBS_SHARED_VN,$/;"	e	enum:__anon30
XFS_SBS_RBLOCKS	xfs_sb.h	/^	XFS_SBS_MAGICNUM, XFS_SBS_BLOCKSIZE, XFS_SBS_DBLOCKS, XFS_SBS_RBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_RBMBLOCKS	xfs_sb.h	/^	XFS_SBS_AGCOUNT, XFS_SBS_RBMBLOCKS, XFS_SBS_LOGBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_RBMINO	xfs_sb.h	/^	XFS_SBS_RBMINO, XFS_SBS_RSUMINO, XFS_SBS_REXTSIZE, XFS_SBS_AGBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_REXTENTS	xfs_sb.h	/^	XFS_SBS_REXTENTS, XFS_SBS_UUID, XFS_SBS_LOGSTART, XFS_SBS_ROOTINO,$/;"	e	enum:__anon30
XFS_SBS_REXTSIZE	xfs_sb.h	/^	XFS_SBS_RBMINO, XFS_SBS_RSUMINO, XFS_SBS_REXTSIZE, XFS_SBS_AGBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_REXTSLOG	xfs_sb.h	/^	XFS_SBS_REXTSLOG, XFS_SBS_INPROGRESS, XFS_SBS_IMAX_PCT, XFS_SBS_ICOUNT,$/;"	e	enum:__anon30
XFS_SBS_ROOTINO	xfs_sb.h	/^	XFS_SBS_REXTENTS, XFS_SBS_UUID, XFS_SBS_LOGSTART, XFS_SBS_ROOTINO,$/;"	e	enum:__anon30
XFS_SBS_RSUMINO	xfs_sb.h	/^	XFS_SBS_RBMINO, XFS_SBS_RSUMINO, XFS_SBS_REXTSIZE, XFS_SBS_AGBLOCKS,$/;"	e	enum:__anon30
XFS_SBS_SECTLOG	xfs_sb.h	/^	XFS_SBS_SECTLOG, XFS_SBS_INODELOG, XFS_SBS_INOPBLOG, XFS_SBS_AGBLKLOG,$/;"	e	enum:__anon30
XFS_SBS_SECTSIZE	xfs_sb.h	/^	XFS_SBS_VERSIONNUM, XFS_SBS_SECTSIZE, XFS_SBS_INODESIZE,$/;"	e	enum:__anon30
XFS_SBS_SHARED_VN	xfs_sb.h	/^	XFS_SBS_GQUOTINO, XFS_SBS_QFLAGS, XFS_SBS_FLAGS, XFS_SBS_SHARED_VN,$/;"	e	enum:__anon30
XFS_SBS_UNIT	xfs_sb.h	/^	XFS_SBS_INOALIGNMT, XFS_SBS_UNIT, XFS_SBS_WIDTH, XFS_SBS_DIRBLKLOG,$/;"	e	enum:__anon30
XFS_SBS_UQUOTINO	xfs_sb.h	/^	XFS_SBS_IFREE, XFS_SBS_FDBLOCKS, XFS_SBS_FREXTENTS, XFS_SBS_UQUOTINO,$/;"	e	enum:__anon30
XFS_SBS_UUID	xfs_sb.h	/^	XFS_SBS_REXTENTS, XFS_SBS_UUID, XFS_SBS_LOGSTART, XFS_SBS_ROOTINO,$/;"	e	enum:__anon30
XFS_SBS_VERSIONNUM	xfs_sb.h	/^	XFS_SBS_VERSIONNUM, XFS_SBS_SECTSIZE, XFS_SBS_INODESIZE,$/;"	e	enum:__anon30
XFS_SBS_WIDTH	xfs_sb.h	/^	XFS_SBS_INOALIGNMT, XFS_SBS_UNIT, XFS_SBS_WIDTH, XFS_SBS_DIRBLKLOG,$/;"	e	enum:__anon30
XFS_SB_ALL_BITS	xfs_sb.h	279;"	d
XFS_SB_BAD_FEATURES2	xfs_sb.h	277;"	d
XFS_SB_BLOCK	xfs_sb.h	511;"	d
XFS_SB_DADDR	xfs_sb.h	510;"	d
XFS_SB_FDBLOCKS	xfs_sb.h	275;"	d
XFS_SB_FEATURES2	xfs_sb.h	276;"	d
XFS_SB_FNAME	xfs_sb.h	262;"	d
XFS_SB_GQUOTINO	xfs_sb.h	268;"	d
XFS_SB_ICOUNT	xfs_sb.h	273;"	d
XFS_SB_IFREE	xfs_sb.h	274;"	d
XFS_SB_MAGIC	xfs_sb.h	30;"	d
XFS_SB_MAX_SHARED_VN	xfs_sb.h	298;"	d
XFS_SB_MOD_BITS	xfs_sb.h	280;"	d
XFS_SB_MVAL	xfs_sb.h	260;"	d
XFS_SB_NUM_BITS	xfs_sb.h	278;"	d
XFS_SB_QFLAGS	xfs_sb.h	269;"	d
XFS_SB_RBMINO	xfs_sb.h	264;"	d
XFS_SB_ROOTINO	xfs_sb.h	263;"	d
XFS_SB_RSUMINO	xfs_sb.h	265;"	d
XFS_SB_SHARED_VN	xfs_sb.h	270;"	d
XFS_SB_UNIT	xfs_sb.h	271;"	d
XFS_SB_UQUOTINO	xfs_sb.h	267;"	d
XFS_SB_UUID	xfs_sb.h	261;"	d
XFS_SB_VERSION2_ATTR2BIT	xfs_sb.h	81;"	d
XFS_SB_VERSION2_LAZYSBCOUNTBIT	xfs_sb.h	79;"	d
XFS_SB_VERSION2_OKREALBITS	xfs_sb.h	91;"	d
XFS_SB_VERSION2_OKREALFBITS	xfs_sb.h	85;"	d
XFS_SB_VERSION2_OKSASHFBITS	xfs_sb.h	89;"	d
XFS_SB_VERSION2_PARENTBIT	xfs_sb.h	82;"	d
XFS_SB_VERSION2_PROJID32BIT	xfs_sb.h	83;"	d
XFS_SB_VERSION2_REALFBITS	xfs_sb.h	77;"	d
XFS_SB_VERSION2_RESERVED1BIT	xfs_sb.h	78;"	d
XFS_SB_VERSION2_RESERVED4BIT	xfs_sb.h	80;"	d
XFS_SB_VERSIONNUM	xfs_sb.h	266;"	d
XFS_SB_VERSION_1	xfs_sb.h	31;"	d
XFS_SB_VERSION_2	xfs_sb.h	32;"	d
XFS_SB_VERSION_3	xfs_sb.h	33;"	d
XFS_SB_VERSION_4	xfs_sb.h	34;"	d
XFS_SB_VERSION_ALIGNBIT	xfs_sb.h	42;"	d
XFS_SB_VERSION_ALLFBITS	xfs_sb.h	36;"	d
XFS_SB_VERSION_ATTRBIT	xfs_sb.h	39;"	d
XFS_SB_VERSION_BORGBIT	xfs_sb.h	49;"	d
XFS_SB_VERSION_DALIGNBIT	xfs_sb.h	43;"	d
XFS_SB_VERSION_DIRV2BIT	xfs_sb.h	48;"	d
XFS_SB_VERSION_EXTFLGBIT	xfs_sb.h	47;"	d
XFS_SB_VERSION_LOGV2BIT	xfs_sb.h	45;"	d
XFS_SB_VERSION_MOREBITSBIT	xfs_sb.h	50;"	d
XFS_SB_VERSION_NLINKBIT	xfs_sb.h	40;"	d
XFS_SB_VERSION_NUM	xfs_sb.h	300;"	d
XFS_SB_VERSION_NUMBITS	xfs_sb.h	35;"	d
XFS_SB_VERSION_OKREALBITS	xfs_sb.h	65;"	d
XFS_SB_VERSION_OKREALFBITS	xfs_sb.h	55;"	d
XFS_SB_VERSION_OKSASHFBITS	xfs_sb.h	51;"	d
XFS_SB_VERSION_QUOTABIT	xfs_sb.h	41;"	d
XFS_SB_VERSION_REALFBITS	xfs_sb.h	38;"	d
XFS_SB_VERSION_SASHFBITS	xfs_sb.h	37;"	d
XFS_SB_VERSION_SECTORBIT	xfs_sb.h	46;"	d
XFS_SB_VERSION_SHAREDBIT	xfs_sb.h	44;"	d
XFS_SB_WIDTH	xfs_sb.h	272;"	d
XFS_SECURITY_STRING	xfs_super.h	41;"	d
XFS_SGID_INHERIT	xfs_sysctl.h	/^	XFS_SGID_INHERIT = 4,$/;"	e	enum:__anon32
XFS_STATS_ADD	xfs_stats.h	200;"	d
XFS_STATS_ADD	xfs_stats.h	210;"	d
XFS_STATS_CLEAR	xfs_sysctl.h	/^	XFS_STATS_CLEAR = 12,$/;"	e	enum:__anon32
XFS_STATS_DEC	xfs_stats.h	199;"	d
XFS_STATS_DEC	xfs_stats.h	209;"	d
XFS_STATS_INC	xfs_stats.h	198;"	d
XFS_STATS_INC	xfs_stats.h	208;"	d
XFS_SUMOFFS	xfs_rtalloc.h	46;"	d
XFS_SUMOFFSTOBLOCK	xfs_rtalloc.h	47;"	d
XFS_SUMPTR	xfs_rtalloc.h	49;"	d
XFS_SWAPEXT_INODES	xfs_trace.h	1535;"	d
XFS_SWRITE_LOG_RES	xfs_trans.h	247;"	d
XFS_SX_VERSION	xfs_dfrag.h	39;"	d
XFS_SYMLINK_LOG_COUNT	xfs_trans.h	274;"	d
XFS_SYMLINK_LOG_RES	xfs_trans.h	238;"	d
XFS_SYMLINK_MODE	xfs_sysctl.h	/^	XFS_SYMLINK_MODE = 5,$/;"	e	enum:__anon32
XFS_SYMLINK_SPACE_RES	xfs_trans_space.h	83;"	d
XFS_SYNCD_TIMER	xfs_sysctl.h	/^	XFS_SYNCD_TIMER = 8,$/;"	e	enum:__anon32
XFS_SYNC_H	xfs_sync.h	19;"	d
XFS_TEST_ERROR	xfs_error.h	134;"	d
XFS_TEST_ERROR	xfs_error.h	142;"	d
XFS_TRANSACTION	xfs_log.h	66;"	d
XFS_TRANS_ABORT	xfs_trans.h	187;"	d
XFS_TRANS_ADDAFORK	xfs_trans.h	82;"	d
XFS_TRANS_ATRUNCATE	xfs_trans.h	84;"	d
XFS_TRANS_ATTRINVAL	xfs_trans.h	83;"	d
XFS_TRANS_ATTR_FLAG	xfs_trans.h	87;"	d
XFS_TRANS_ATTR_RM	xfs_trans.h	86;"	d
XFS_TRANS_ATTR_SET	xfs_trans.h	85;"	d
XFS_TRANS_CHECKPOINT	xfs_trans.h	109;"	d
XFS_TRANS_CLEAR_AGI_BUCKET	xfs_trans.h	88;"	d
XFS_TRANS_CREATE	xfs_trans.h	67;"	d
XFS_TRANS_CREATE_TRUNC	xfs_trans.h	68;"	d
XFS_TRANS_DIOSTRAT	xfs_trans.h	79;"	d
XFS_TRANS_DIRTY	xfs_trans.h	176;"	d
XFS_TRANS_DQ_BCOUNT	xfs_quota.h	232;"	d
XFS_TRANS_DQ_DELBCOUNT	xfs_quota.h	233;"	d
XFS_TRANS_DQ_DELRTBCOUNT	xfs_quota.h	236;"	d
XFS_TRANS_DQ_DIRTY	xfs_trans.h	180;"	d
XFS_TRANS_DQ_ICOUNT	xfs_quota.h	234;"	d
XFS_TRANS_DQ_RES_BLKS	xfs_quota.h	229;"	d
XFS_TRANS_DQ_RES_INOS	xfs_quota.h	231;"	d
XFS_TRANS_DQ_RES_RTBLKS	xfs_quota.h	230;"	d
XFS_TRANS_DQ_RTBCOUNT	xfs_quota.h	235;"	d
XFS_TRANS_DUMMY1	xfs_trans.h	94;"	d
XFS_TRANS_DUMMY2	xfs_trans.h	95;"	d
XFS_TRANS_FSYNC_TS	xfs_trans.h	103;"	d
XFS_TRANS_GROWFS	xfs_trans.h	77;"	d
XFS_TRANS_GROWFSRT_ALLOC	xfs_trans.h	104;"	d
XFS_TRANS_GROWFSRT_FREE	xfs_trans.h	106;"	d
XFS_TRANS_GROWFSRT_ZERO	xfs_trans.h	105;"	d
XFS_TRANS_HEADER_MAGIC	xfs_trans.h	39;"	d
XFS_TRANS_INACTIVE	xfs_trans.h	66;"	d
XFS_TRANS_LINK	xfs_trans.h	71;"	d
XFS_TRANS_MAGIC	xfs_trans.h	172;"	d
XFS_TRANS_MKDIR	xfs_trans.h	73;"	d
XFS_TRANS_PERM_LOG_RES	xfs_trans.h	178;"	d
XFS_TRANS_QM_DQALLOC	xfs_trans.h	97;"	d
XFS_TRANS_QM_DQCLUSTER	xfs_trans.h	99;"	d
XFS_TRANS_QM_QINOCREATE	xfs_trans.h	100;"	d
XFS_TRANS_QM_QUOTAOFF	xfs_trans.h	96;"	d
XFS_TRANS_QM_QUOTAOFF_END	xfs_trans.h	101;"	d
XFS_TRANS_QM_SBCHANGE	xfs_trans.h	89;"	d
XFS_TRANS_QM_SETQLIM	xfs_trans.h	98;"	d
XFS_TRANS_RELEASE_LOG_RES	xfs_trans.h	186;"	d
XFS_TRANS_REMOVE	xfs_trans.h	70;"	d
XFS_TRANS_RENAME	xfs_trans.h	72;"	d
XFS_TRANS_RESERVE	xfs_trans.h	181;"	d
XFS_TRANS_RMDIR	xfs_trans.h	74;"	d
XFS_TRANS_SB_AGCOUNT	xfs_trans.h	199;"	d
XFS_TRANS_SB_COUNT	xfs_trans.h	108;"	d
XFS_TRANS_SB_DBLOCKS	xfs_trans.h	198;"	d
XFS_TRANS_SB_DIRTY	xfs_trans.h	177;"	d
XFS_TRANS_SB_FDBLOCKS	xfs_trans.h	194;"	d
XFS_TRANS_SB_FREXTENTS	xfs_trans.h	196;"	d
XFS_TRANS_SB_ICOUNT	xfs_trans.h	192;"	d
XFS_TRANS_SB_IFREE	xfs_trans.h	193;"	d
XFS_TRANS_SB_IMAXPCT	xfs_trans.h	200;"	d
XFS_TRANS_SB_RBLOCKS	xfs_trans.h	203;"	d
XFS_TRANS_SB_RBMBLOCKS	xfs_trans.h	202;"	d
XFS_TRANS_SB_RES_FDBLOCKS	xfs_trans.h	195;"	d
XFS_TRANS_SB_RES_FREXTENTS	xfs_trans.h	197;"	d
XFS_TRANS_SB_REXTENTS	xfs_trans.h	204;"	d
XFS_TRANS_SB_REXTSIZE	xfs_trans.h	201;"	d
XFS_TRANS_SB_REXTSLOG	xfs_trans.h	205;"	d
XFS_TRANS_SB_UNIT	xfs_trans.h	102;"	d
XFS_TRANS_SETATTR_NOT_SIZE	xfs_trans.h	64;"	d
XFS_TRANS_SETATTR_SIZE	xfs_trans.h	65;"	d
XFS_TRANS_SET_DMATTRS	xfs_trans.h	76;"	d
XFS_TRANS_STRAT_WRITE	xfs_trans.h	78;"	d
XFS_TRANS_SWAPEXT	xfs_trans.h	107;"	d
XFS_TRANS_SYMLINK	xfs_trans.h	75;"	d
XFS_TRANS_SYNC	xfs_trans.h	179;"	d
XFS_TRANS_TRUNCATE_FILE	xfs_trans.h	69;"	d
XFS_TRANS_TYPES	xfs_trans.h	113;"	d
XFS_TRANS_TYPE_MAX	xfs_trans.h	110;"	d
XFS_TRANS_WRITEID	xfs_trans.h	81;"	d
XFS_UQUOTA_ACCT	xfs_quota.h	146;"	d
XFS_UQUOTA_ACTIVE	xfs_quota.h	174;"	d
XFS_UQUOTA_CHKD	xfs_quota.h	148;"	d
XFS_UQUOTA_ENFD	xfs_quota.h	147;"	d
XFS_VERSION_STRING	xfs_super.h	65;"	d
XFS_VOLUME	xfs_log.h	67;"	d
XFS_WANT_CORRUPTED_GOTO	xfs_error.h	51;"	d
XFS_WANT_CORRUPTED_RETURN	xfs_error.h	63;"	d
XFS_WORDLOG	xfs_rtalloc.h	33;"	d
XFS_WORDMASK	xfs_rtalloc.h	36;"	d
XFS_WRITEID_LOG_RES	xfs_trans.h	253;"	d
XFS_WRITEIO_ALIGN	xfs_iomap.c	48;"	d	file:
XFS_WRITEIO_LOG_LARGE	xfs_mount.h	256;"	d
XFS_WRITE_IMAPS	xfs_iomap.c	50;"	d	file:
XFS_WRITE_LOG_COUNT	xfs_trans.h	278;"	d
XFS_WRITE_LOG_RES	xfs_trans.h	233;"	d
XFS_WSYNC_READIO_LOG	xfs_mount.h	269;"	d
XFS_WSYNC_WRITEIO_LOG	xfs_mount.h	270;"	d
XFS_XFLAG_APPEND	xfs_fs.h	59;"	d
XFS_XFLAG_EXTSIZE	xfs_fs.h	66;"	d
XFS_XFLAG_EXTSZINHERIT	xfs_fs.h	67;"	d
XFS_XFLAG_FILESTREAM	xfs_fs.h	69;"	d
XFS_XFLAG_HASATTR	xfs_fs.h	70;"	d
XFS_XFLAG_IMMUTABLE	xfs_fs.h	58;"	d
XFS_XFLAG_NOATIME	xfs_fs.h	61;"	d
XFS_XFLAG_NODEFRAG	xfs_fs.h	68;"	d
XFS_XFLAG_NODUMP	xfs_fs.h	62;"	d
XFS_XFLAG_NOSYMLINKS	xfs_fs.h	65;"	d
XFS_XFLAG_PREALLOC	xfs_fs.h	57;"	d
XFS_XFLAG_PROJINHERIT	xfs_fs.h	64;"	d
XFS_XFLAG_REALTIME	xfs_fs.h	56;"	d
XFS_XFLAG_RTINHERIT	xfs_fs.h	63;"	d
XFS_XFLAG_SYNC	xfs_fs.h	60;"	d
XLOG_ACTIVE_RECOVERY	xfs_log_priv.h	143;"	d
XLOG_BC_TABLE_SIZE	xfs_log_recover.h	61;"	d
XLOG_BIG_RECORD_BSHIFT	xfs_log_priv.h	41;"	d
XLOG_BIG_RECORD_BSIZE	xfs_log_priv.h	37;"	d
XLOG_BTOLSUNIT	xfs_log_priv.h	43;"	d
XLOG_BUF_CANCEL_BUCKET	xfs_log_priv.h	543;"	d
XLOG_CHKSUM_MISMATCH	xfs_log_priv.h	142;"	d
XLOG_CIL_HARD_SPACE_LIMIT	xfs_log_priv.h	470;"	d
XLOG_CIL_SPACE_LIMIT	xfs_log_priv.h	469;"	d
XLOG_COMMIT_TRANS	xfs_log_priv.h	118;"	d
XLOG_CONTINUE_TRANS	xfs_log_priv.h	119;"	d
XLOG_COVER_OPS	xfs_log_priv.h	225;"	d
XLOG_END_TRANS	xfs_log_priv.h	121;"	d
XLOG_FMT	xfs_log_priv.h	282;"	d
XLOG_FMT	xfs_log_priv.h	284;"	d
XLOG_FMT_IRIX_BE	xfs_log_priv.h	278;"	d
XLOG_FMT_LINUX_BE	xfs_log_priv.h	277;"	d
XLOG_FMT_LINUX_LE	xfs_log_priv.h	276;"	d
XLOG_FMT_UNKNOWN	xfs_log_priv.h	275;"	d
XLOG_FORCED_SHUTDOWN	xfs_log_priv.h	546;"	d
XLOG_HEADER_CYCLE_SIZE	xfs_log_priv.h	39;"	d
XLOG_HEADER_MAGIC_NUM	xfs_log_priv.h	32;"	d
XLOG_HEADER_SIZE	xfs_log_priv.h	47;"	d
XLOG_IO_ERROR	xfs_log_priv.h	145;"	d
XLOG_LSUNITTOB	xfs_log_priv.h	45;"	d
XLOG_MAX_ICLOGS	xfs_log_priv.h	31;"	d
XLOG_MAX_RECORD_BSHIFT	xfs_log_priv.h	42;"	d
XLOG_MAX_RECORD_BSIZE	xfs_log_priv.h	38;"	d
XLOG_MAX_REGIONS_IN_ITEM	xfs_log_recover.h	31;"	d
XLOG_MIN_ICLOGS	xfs_log_priv.h	30;"	d
XLOG_MIN_RECORD_BSHIFT	xfs_log_priv.h	40;"	d
XLOG_MIN_RECORD_BSIZE	xfs_log_priv.h	36;"	d
XLOG_RECOVERY_NEEDED	xfs_log_priv.h	144;"	d
XLOG_RECOVER_PASS1	xfs_log_recover.h	63;"	d
XLOG_RECOVER_PASS2	xfs_log_recover.h	64;"	d
XLOG_REC_SHIFT	xfs_log_priv.h	49;"	d
XLOG_REG_TYPE_BCHUNK	xfs_log.h	73;"	d
XLOG_REG_TYPE_BFORMAT	xfs_log.h	72;"	d
XLOG_REG_TYPE_COMMIT	xfs_log.h	89;"	d
XLOG_REG_TYPE_DQUOT	xfs_log.h	85;"	d
XLOG_REG_TYPE_EFD_FORMAT	xfs_log.h	75;"	d
XLOG_REG_TYPE_EFI_FORMAT	xfs_log.h	74;"	d
XLOG_REG_TYPE_IATTR_BROOT	xfs_log.h	82;"	d
XLOG_REG_TYPE_IATTR_EXT	xfs_log.h	81;"	d
XLOG_REG_TYPE_IATTR_LOCAL	xfs_log.h	83;"	d
XLOG_REG_TYPE_IBROOT	xfs_log.h	79;"	d
XLOG_REG_TYPE_ICORE	xfs_log.h	77;"	d
XLOG_REG_TYPE_IEXT	xfs_log.h	78;"	d
XLOG_REG_TYPE_IFORMAT	xfs_log.h	76;"	d
XLOG_REG_TYPE_ILOCAL	xfs_log.h	80;"	d
XLOG_REG_TYPE_LRHEADER	xfs_log.h	87;"	d
XLOG_REG_TYPE_MAX	xfs_log.h	91;"	d
XLOG_REG_TYPE_QFORMAT	xfs_log.h	84;"	d
XLOG_REG_TYPE_QUOTAOFF	xfs_log.h	86;"	d
XLOG_REG_TYPE_TRANSHDR	xfs_log.h	90;"	d
XLOG_REG_TYPE_UNMOUNT	xfs_log.h	88;"	d
XLOG_RHASH	xfs_log_recover.h	28;"	d
XLOG_RHASH_BITS	xfs_log_recover.h	25;"	d
XLOG_RHASH_SHIFT	xfs_log_recover.h	27;"	d
XLOG_RHASH_SIZE	xfs_log_recover.h	26;"	d
XLOG_START_TRANS	xfs_log_priv.h	117;"	d
XLOG_STATE_ACTIVE	xfs_log_priv.h	93;"	d
XLOG_STATE_ALL	xfs_log_priv.h	102;"	d
XLOG_STATE_CALLBACK	xfs_log_priv.h	99;"	d
XLOG_STATE_COVER_DONE	xfs_log_priv.h	221;"	d
XLOG_STATE_COVER_DONE2	xfs_log_priv.h	223;"	d
XLOG_STATE_COVER_IDLE	xfs_log_priv.h	219;"	d
XLOG_STATE_COVER_NEED	xfs_log_priv.h	220;"	d
XLOG_STATE_COVER_NEED2	xfs_log_priv.h	222;"	d
XLOG_STATE_DIRTY	xfs_log_priv.h	100;"	d
XLOG_STATE_DONE_SYNC	xfs_log_priv.h	96;"	d
XLOG_STATE_DO_CALLBACK	xfs_log_priv.h	97;"	d
XLOG_STATE_IOERROR	xfs_log_priv.h	101;"	d
XLOG_STATE_NOTUSED	xfs_log_priv.h	103;"	d
XLOG_STATE_SYNCING	xfs_log_priv.h	95;"	d
XLOG_STATE_WANT_SYNC	xfs_log_priv.h	94;"	d
XLOG_TAIL_WARN	xfs_log_priv.h	147;"	d
XLOG_TIC_FLAGS	xfs_log_priv.h	131;"	d
XLOG_TIC_INITED	xfs_log_priv.h	128;"	d
XLOG_TIC_LEN_MAX	xfs_log_priv.h	229;"	d
XLOG_TIC_PERM_RESERV	xfs_log_priv.h	129;"	d
XLOG_TOTAL_REC_SHIFT	xfs_log_priv.h	52;"	d
XLOG_UNMOUNT_REC_TYPE	xfs_log_priv.h	649;"	d
XLOG_UNMOUNT_TRANS	xfs_log_priv.h	122;"	d
XLOG_UNMOUNT_TYPE	xfs_log_priv.h	137;"	d
XLOG_VERSION_1	xfs_log_priv.h	33;"	d
XLOG_VERSION_2	xfs_log_priv.h	34;"	d
XLOG_VERSION_OKBITS	xfs_log_priv.h	35;"	d
XLOG_WAS_CONT_TRANS	xfs_log_priv.h	120;"	d
XQM_STATS_INC	xfs_qm_stats.h	39;"	d
XQM_STATS_INC	xfs_qm_stats.h	46;"	d
_NATIVE_IOC	xfs_ioctl32.c	48;"	d	file:
_TRACE_XFS_H	xfs_trace.h	22;"	d
_XBF_DELWRI_Q	xfs_buf.h	69;"	d
_XBF_KMEM	xfs_buf.h	68;"	d
_XBF_PAGES	xfs_buf.h	67;"	d
_XFS_VNODEOPS_H	xfs_vnodeops.h	2;"	d
__XFS_ACL_H__	xfs_acl.h	19;"	d
__XFS_AG_H__	xfs_ag.h	19;"	d
__XFS_ALLOC_BTREE_H__	xfs_alloc_btree.h	19;"	d
__XFS_ALLOC_H__	xfs_alloc.h	19;"	d
__XFS_AOPS_H__	xfs_aops.h	19;"	d
__XFS_ATTR_H__	xfs_attr.h	19;"	d
__XFS_ATTR_LEAF_H__	xfs_attr_leaf.h	19;"	d
__XFS_ATTR_SF_H__	xfs_attr_sf.h	19;"	d
__XFS_BIT_H__	xfs_bit.h	19;"	d
__XFS_BMAP_BTREE_H__	xfs_bmap_btree.h	19;"	d
__XFS_BMAP_H__	xfs_bmap.h	19;"	d
__XFS_BTREE_H__	xfs_btree.h	19;"	d
__XFS_BTREE_STATS_ADD	xfs_btree.h	128;"	d
__XFS_BTREE_STATS_INC	xfs_btree.h	115;"	d
__XFS_BUF_H__	xfs_buf.h	19;"	d
__XFS_BUF_ITEM_H__	xfs_buf_item.h	19;"	d
__XFS_DA_BTREE_H__	xfs_da_btree.h	19;"	d
__XFS_DFRAG_H__	xfs_dfrag.h	19;"	d
__XFS_DINODE_H__	xfs_dinode.h	19;"	d
__XFS_DIR2_FORMAT_H__	xfs_dir2_format.h	19;"	d
__XFS_DIR2_H__	xfs_dir2.h	19;"	d
__XFS_DIR2_PRIV_H__	xfs_dir2_priv.h	19;"	d
__XFS_DQUOT_H__	xfs_dquot.h	19;"	d
__XFS_DQUOT_ITEM_H__	xfs_dquot_item.h	19;"	d
__XFS_ERROR_H__	xfs_error.h	19;"	d
__XFS_EXPORT_H__	xfs_export.h	19;"	d
__XFS_EXTFREE_ITEM_H__	xfs_extfree_item.h	19;"	d
__XFS_FILESTREAM_H__	xfs_filestream.h	19;"	d
__XFS_FSOPS_H__	xfs_fsops.h	19;"	d
__XFS_FS_H__	xfs_fs.h	19;"	d
__XFS_H__	xfs.h	19;"	d
__XFS_IALLOC_BTREE_H__	xfs_ialloc_btree.h	19;"	d
__XFS_IALLOC_H__	xfs_ialloc.h	19;"	d
__XFS_IFLOCK_BIT	xfs_inode.h	373;"	d
__XFS_INODE_H__	xfs_inode.h	19;"	d
__XFS_INODE_ITEM_H__	xfs_inode_item.h	19;"	d
__XFS_INUM_H__	xfs_inum.h	19;"	d
__XFS_IOCTL32_H__	xfs_ioctl32.h	19;"	d
__XFS_IOCTL_H__	xfs_ioctl.h	19;"	d
__XFS_IOMAP_H__	xfs_iomap.h	19;"	d
__XFS_IOPS_H__	xfs_iops.h	19;"	d
__XFS_IPINNED_BIT	xfs_inode.h	375;"	d
__XFS_ITABLE_H__	xfs_itable.h	18;"	d
__XFS_LINUX__	xfs_linux.h	19;"	d
__XFS_LOG_H__	xfs_log.h	19;"	d
__XFS_LOG_PRIV_H__	xfs_log_priv.h	19;"	d
__XFS_LOG_RECOVER_H__	xfs_log_recover.h	19;"	d
__XFS_MESSAGE_H	xfs_message.h	2;"	d
__XFS_MOUNT_H__	xfs_mount.h	19;"	d
__XFS_MRU_CACHE_H__	xfs_mru_cache.h	19;"	d
__XFS_QM_H__	xfs_qm.h	19;"	d
__XFS_QM_STATS_H__	xfs_qm_stats.h	19;"	d
__XFS_QUOTA_H__	xfs_quota.h	19;"	d
__XFS_QUOTA_PRIV_H__	xfs_quota_priv.h	19;"	d
__XFS_RTALLOC_H__	xfs_rtalloc.h	19;"	d
__XFS_RW_H__	xfs_rw.h	19;"	d
__XFS_SB_H__	xfs_sb.h	19;"	d
__XFS_STATS_H__	xfs_stats.h	19;"	d
__XFS_SUPER_H__	xfs_super.h	19;"	d
__XFS_SUPPORT_KMEM_H__	kmem.h	19;"	d
__XFS_SUPPORT_MRLOCK_H__	mrlock.h	19;"	d
__XFS_SUPPORT_TIME_H__	time.h	19;"	d
__XFS_SUPPORT_UUID_H__	uuid.h	19;"	d
__XFS_SYSCTL_H__	xfs_sysctl.h	19;"	d
__XFS_TRANS_H__	xfs_trans.h	19;"	d
__XFS_TRANS_PRIV_H__	xfs_trans_priv.h	19;"	d
__XFS_TRANS_SPACE_H__	xfs_trans_space.h	19;"	d
__XFS_TYPES_H__	xfs_types.h	19;"	d
__XFS_UTILS_H__	xfs_utils.h	19;"	d
__XFS_VNODE_H__	xfs_vnode.h	19;"	d
____cacheline_aligned_in_smp	xfs_log_priv.h	/^	atomic64_t		l_last_sync_lsn ____cacheline_aligned_in_smp;$/;"	m	struct:log
____cacheline_aligned_in_smp	xfs_log_priv.h	/^	atomic64_t		l_tail_lsn ____cacheline_aligned_in_smp;$/;"	m	struct:log
____cacheline_aligned_in_smp	xfs_log_priv.h	/^	atomic_t		ic_refcnt ____cacheline_aligned_in_smp;$/;"	m	struct:xlog_in_core
____cacheline_aligned_in_smp	xfs_log_priv.h	/^	spinlock_t		ic_callback_lock ____cacheline_aligned_in_smp;$/;"	m	struct:xlog_in_core
____cacheline_aligned_in_smp	xfs_log_priv.h	/^	spinlock_t		lock ____cacheline_aligned_in_smp;$/;"	m	struct:xlog_grant_head
____cacheline_aligned_in_smp	xfs_log_priv.h	/^	wait_queue_head_t	l_flush_wait ____cacheline_aligned_in_smp;$/;"	m	struct:log
__arch_pack	xfs_linux.h	285;"	d
__arch_pack	xfs_linux.h	287;"	d
__compat_packed	xfs_ioctl32.h	41;"	d
__compat_packed	xfs_ioctl32.h	43;"	d
__int16_t	xfs_types.h	/^typedef signed short int	__int16_t;$/;"	t
__int32_t	xfs_types.h	/^typedef signed int		__int32_t;$/;"	t
__int64_t	xfs_types.h	/^typedef signed long long int	__int64_t;$/;"	t
__int8_t	xfs_types.h	/^typedef signed char		__int8_t;$/;"	t
__psint_t	xfs_types.h	/^typedef __int32_t __psint_t;$/;"	t
__psint_t	xfs_types.h	/^typedef __int64_t __psint_t;$/;"	t
__psunsigned_t	xfs_types.h	/^typedef __uint32_t __psunsigned_t;$/;"	t
__psunsigned_t	xfs_types.h	/^typedef __uint64_t __psunsigned_t;$/;"	t
__releases	xfs_iget.c	/^	int			lock_flags) __releases(RCU)$/;"	f
__return_address	xfs_linux.h	150;"	d
__u_bits	uuid.h	/^	unsigned char	__u_bits[16];$/;"	m	struct:__anon3
__uint16_t	xfs_types.h	/^typedef unsigned short int	__uint16_t;$/;"	t
__uint32_t	xfs_types.h	/^typedef unsigned int		__uint32_t;$/;"	t
__uint64_t	xfs_types.h	/^typedef unsigned long long int	__uint64_t;$/;"	t
__uint8_t	xfs_types.h	/^typedef unsigned char		__uint8_t;$/;"	t
__xfs_bmbt_get_all	xfs_bmap_btree.c	/^__xfs_bmbt_get_all($/;"	f
__xfs_efi_release	xfs_extfree_item.c	/^__xfs_efi_release($/;"	f
__xfs_free_perag	xfs_mount.c	/^__xfs_free_perag($/;"	f
__xfs_get_blocks	xfs_aops.c	/^__xfs_get_blocks($/;"	f
__xfs_iflags_set	xfs_inode.h	/^__xfs_iflags_set(xfs_inode_t *ip, unsigned short flags)$/;"	f
__xfs_iflags_test	xfs_inode.h	/^__xfs_iflags_test(xfs_inode_t *ip, unsigned short flags)$/;"	f
__xfs_iflock	xfs_iget.c	/^__xfs_iflock($/;"	f
__xfs_inode_clear_reclaim	xfs_sync.c	/^__xfs_inode_clear_reclaim($/;"	f
__xfs_inode_clear_reclaim_tag	xfs_sync.c	/^__xfs_inode_clear_reclaim_tag($/;"	f
__xfs_inode_set_reclaim_tag	xfs_sync.c	/^__xfs_inode_set_reclaim_tag($/;"	f
__xfs_iunpin_wait	xfs_inode.c	/^__xfs_iunpin_wait($/;"	f	file:
__xfs_printk	xfs_message.c	/^__xfs_printk($/;"	f	file:
__xfs_trans_ail_cursor_last	xfs_trans_ail.c	/^__xfs_trans_ail_cursor_last($/;"	f	file:
_ha_fsid	xfs_fs.h	/^		xfs_fsid_t  _ha_fsid;	\/* unique file system identifier *\/$/;"	m	union:xfs_handle::__anon22
_lsn_cmp	xfs_log.h	/^static inline xfs_lsn_t	_lsn_cmp(xfs_lsn_t lsn1, xfs_lsn_t lsn2)$/;"	f
_xfs_buf_find	xfs_buf.c	/^_xfs_buf_find($/;"	f
_xfs_buf_free_pages	xfs_buf.c	/^_xfs_buf_free_pages($/;"	f
_xfs_buf_get_pages	xfs_buf.c	/^_xfs_buf_get_pages($/;"	f
_xfs_buf_ioapply	xfs_buf.c	/^_xfs_buf_ioapply($/;"	f
_xfs_buf_ioend	xfs_buf.c	/^_xfs_buf_ioend($/;"	f
_xfs_buf_map_pages	xfs_buf.c	/^_xfs_buf_map_pages($/;"	f
_xfs_buf_read	xfs_buf.c	/^_xfs_buf_read($/;"	f
_xfs_dic2xflags	xfs_inode.c	/^_xfs_dic2xflags($/;"	f
_xfs_filestream_pick_ag	xfs_filestream.c	/^_xfs_filestream_pick_ag($/;"	f	file:
_xfs_filestream_update_ag	xfs_filestream.c	/^_xfs_filestream_update_ag($/;"	f	file:
_xfs_log_force	xfs_log.c	/^_xfs_log_force($/;"	f
_xfs_log_force_lsn	xfs_log.c	/^_xfs_log_force_lsn($/;"	f
_xfs_mru_cache_list_insert	xfs_mru_cache.c	/^_xfs_mru_cache_list_insert($/;"	f
_xfs_mru_cache_migrate	xfs_mru_cache.c	/^_xfs_mru_cache_migrate($/;"	f
_xfs_mru_cache_reap	xfs_mru_cache.c	/^_xfs_mru_cache_reap($/;"	f
_xfs_trans_alloc	xfs_trans.c	/^_xfs_trans_alloc($/;"	f
_xfs_trans_bjoin	xfs_trans_buf.c	/^_xfs_trans_bjoin($/;"	f
a	xfs_btree.h	/^		xfs_alloc_rec_incore_t	a;$/;"	m	union:xfs_btree_cur::__anon10
a	xfs_btree.h	/^		} a;$/;"	m	union:xfs_btree_cur::__anon11	typeref:struct:xfs_btree_cur::__anon11::__anon12
a_name	xfs_attr.h	/^	char	a_name[1];	\/* attr name (NULL terminated) *\/$/;"	m	struct:attrlist_ent
a_valuelen	xfs_attr.h	/^	__u32	a_valuelen;	\/* number bytes in value of attr *\/$/;"	m	struct:attrlist_ent
acl_cnt	xfs_acl.h	/^	__be32		acl_cnt;$/;"	m	struct:xfs_acl
acl_entry	xfs_acl.h	/^	} acl_entry[XFS_ACL_MAX_ENTRIES];$/;"	m	struct:xfs_acl	typeref:struct:xfs_acl::xfs_acl_entry
active	xfs_da_btree.h	/^	int			active;		\/* number of active levels *\/$/;"	m	struct:xfs_da_state_path
address	xfs_dir2_format.h	/^	__be32			address;	\/* address of data entry *\/$/;"	m	struct:xfs_dir2_leaf_entry
ae_id	xfs_acl.h	/^		__be32	ae_id;$/;"	m	struct:xfs_acl::xfs_acl_entry
ae_perm	xfs_acl.h	/^		__be16	ae_perm;$/;"	m	struct:xfs_acl::xfs_acl_entry
ae_tag	xfs_acl.h	/^		__be32	ae_tag;$/;"	m	struct:xfs_acl::xfs_acl_entry
aeof	xfs_bmap.h	/^	char			aeof;	\/* allocated space at eof *\/$/;"	m	struct:xfs_bmalloca
ag	xfs_filestream.c	/^	xfs_agnumber_t	ag;	\/* AG currently in use for the file\/directory. *\/$/;"	m	struct:fstrm_item	file:
agblocks	xfs_fs.h	/^	__u32		agblocks;	\/* fsblocks in an AG		*\/$/;"	m	struct:xfs_fsop_geom
agblocks	xfs_fs.h	/^	__u32		agblocks;	\/* fsblocks in an AG		*\/$/;"	m	struct:xfs_fsop_geom_v1
agblocks	xfs_ioctl32.h	/^	__u32		agblocks;	\/* fsblocks in an AG		*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
agbno	xfs_alloc.h	/^	xfs_agblock_t	agbno;		\/* allocation group-relative block # *\/$/;"	m	struct:xfs_alloc_arg
agbp	xfs_alloc.h	/^	struct xfs_buf	*agbp;		\/* buffer for a.g. freelist header *\/$/;"	m	struct:xfs_alloc_arg	typeref:struct:xfs_alloc_arg::xfs_buf
agbp	xfs_btree.h	/^			struct xfs_buf	*agbp;	\/* agf\/agi buffer pointer *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon12	typeref:struct:xfs_btree_cur::__anon11::__anon12::xfs_buf
agcount	xfs_fs.h	/^	__u32		agcount;	\/* number of allocation groups	*\/$/;"	m	struct:xfs_fsop_geom
agcount	xfs_fs.h	/^	__u32		agcount;	\/* number of allocation groups	*\/$/;"	m	struct:xfs_fsop_geom_v1
agcount	xfs_ioctl32.h	/^	__u32		agcount;	\/* number of allocation groups	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
agf_btreeblks	xfs_ag.h	/^	__be32		agf_btreeblks;	\/* # of blocks held in AGF btrees *\/$/;"	m	struct:xfs_agf
agf_flcount	xfs_ag.h	/^	__be32		agf_flcount;	\/* count of blocks in freelist *\/$/;"	m	struct:xfs_agf
agf_flfirst	xfs_ag.h	/^	__be32		agf_flfirst;	\/* first freelist block's index *\/$/;"	m	struct:xfs_agf
agf_fllast	xfs_ag.h	/^	__be32		agf_fllast;	\/* last freelist block's index *\/$/;"	m	struct:xfs_agf
agf_freeblks	xfs_ag.h	/^	__be32		agf_freeblks;	\/* total free blocks *\/$/;"	m	struct:xfs_agf
agf_length	xfs_ag.h	/^	__be32		agf_length;	\/* size in blocks of a.g. *\/$/;"	m	struct:xfs_agf
agf_levels	xfs_ag.h	/^	__be32		agf_levels[XFS_BTNUM_AGF];	\/* btree levels *\/$/;"	m	struct:xfs_agf
agf_longest	xfs_ag.h	/^	__be32		agf_longest;	\/* longest free space *\/$/;"	m	struct:xfs_agf
agf_magicnum	xfs_ag.h	/^	__be32		agf_magicnum;	\/* magic number == XFS_AGF_MAGIC *\/$/;"	m	struct:xfs_agf
agf_roots	xfs_ag.h	/^	__be32		agf_roots[XFS_BTNUM_AGF];	\/* root blocks *\/$/;"	m	struct:xfs_agf
agf_seqno	xfs_ag.h	/^	__be32		agf_seqno;	\/* sequence # starting from 0 *\/$/;"	m	struct:xfs_agf
agf_spare0	xfs_ag.h	/^	__be32		agf_spare0;	\/* spare field *\/$/;"	m	struct:xfs_agf
agf_spare1	xfs_ag.h	/^	__be32		agf_spare1;	\/* spare field *\/$/;"	m	struct:xfs_agf
agf_versionnum	xfs_ag.h	/^	__be32		agf_versionnum;	\/* header version == XFS_AGF_VERSION *\/$/;"	m	struct:xfs_agf
agfl_bno	xfs_ag.h	/^	__be32		agfl_bno[1];	\/* actually XFS_AGFL_SIZE(mp) *\/$/;"	m	struct:xfs_agfl
agi_count	xfs_ag.h	/^	__be32		agi_count;	\/* count of allocated inodes *\/$/;"	m	struct:xfs_agi
agi_dirino	xfs_ag.h	/^	__be32		agi_dirino;	\/* last directory inode chunk *\/$/;"	m	struct:xfs_agi
agi_freecount	xfs_ag.h	/^	__be32		agi_freecount;	\/* number of free inodes *\/$/;"	m	struct:xfs_agi
agi_length	xfs_ag.h	/^	__be32		agi_length;	\/* size in blocks of a.g. *\/$/;"	m	struct:xfs_agi
agi_level	xfs_ag.h	/^	__be32		agi_level;	\/* levels in inode btree *\/$/;"	m	struct:xfs_agi
agi_magicnum	xfs_ag.h	/^	__be32		agi_magicnum;	\/* magic number == XFS_AGI_MAGIC *\/$/;"	m	struct:xfs_agi
agi_newino	xfs_ag.h	/^	__be32		agi_newino;	\/* new inode just allocated *\/$/;"	m	struct:xfs_agi
agi_root	xfs_ag.h	/^	__be32		agi_root;	\/* root of inode btree *\/$/;"	m	struct:xfs_agi
agi_seqno	xfs_ag.h	/^	__be32		agi_seqno;	\/* sequence # starting from 0 *\/$/;"	m	struct:xfs_agi
agi_unlinked	xfs_ag.h	/^	__be32		agi_unlinked[XFS_AGI_UNLINKED_BUCKETS];$/;"	m	struct:xfs_agi
agi_versionnum	xfs_ag.h	/^	__be32		agi_versionnum;	\/* header version == XFS_AGI_VERSION *\/$/;"	m	struct:xfs_agi
agno	xfs_ag.h	/^	xfs_agnumber_t	agno;$/;"	m	struct:xfs_busy_extent
agno	xfs_alloc.h	/^	xfs_agnumber_t	agno;		\/* allocation group number *\/$/;"	m	struct:xfs_alloc_arg
agno	xfs_btree.h	/^			xfs_agnumber_t	agno;	\/* ag number *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon12
al_count	xfs_attr.h	/^	__s32	al_count;	\/* number of entries in attrlist *\/$/;"	m	struct:attrlist
al_more	xfs_attr.h	/^	__s32	al_more;	\/* T\/F: more attrs (do call again) *\/$/;"	m	struct:attrlist
al_offset	xfs_attr.h	/^	__s32	al_offset[1];	\/* byte offsets of attrs [var-sized] *\/$/;"	m	struct:attrlist
align	xfs_fs.h	/^		__s64	    align;	\/* force alignment of ha_fid	 *\/$/;"	m	union:xfs_handle::__anon22
alignment	xfs_alloc.h	/^	xfs_extlen_t	alignment;	\/* align answer to multiple of this *\/$/;"	m	struct:xfs_alloc_arg
alist	xfs_attr.h	/^	char				*alist;		\/* output buffer *\/$/;"	m	struct:xfs_attr_list_context
alloc	xfs_btree.h	/^	xfs_alloc_key_t		alloc;$/;"	m	union:xfs_btree_key
alloc	xfs_btree.h	/^	xfs_alloc_rec_t		alloc;$/;"	m	union:xfs_btree_rec
alloc_block	xfs_btree.h	/^	int	(*alloc_block)(struct xfs_btree_cur *cur,$/;"	m	struct:xfs_btree_ops
allocated	xfs_btree.h	/^			int		allocated;	\/* count of alloced *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon13
allocino	xfs_fs.h	/^	__u64	allocino;	\/* total allocated inodes *\/$/;"	m	struct:xfs_fsop_counts
altpath	xfs_da_btree.h	/^	xfs_da_state_path_t	altpath;	\/* alternate path for join *\/$/;"	m	struct:xfs_da_state
am_attrname	xfs_fs.h	/^	void		__user *am_attrname;$/;"	m	struct:xfs_attr_multiop
am_attrname	xfs_ioctl32.h	/^	compat_uptr_t	am_attrname;$/;"	m	struct:compat_xfs_attr_multiop
am_attrvalue	xfs_fs.h	/^	void		__user *am_attrvalue;$/;"	m	struct:xfs_attr_multiop
am_attrvalue	xfs_ioctl32.h	/^	compat_uptr_t	am_attrvalue;$/;"	m	struct:compat_xfs_attr_multiop
am_error	xfs_fs.h	/^	__s32		am_error;$/;"	m	struct:xfs_attr_multiop
am_error	xfs_ioctl32.h	/^	__s32		am_error;$/;"	m	struct:compat_xfs_attr_multiop
am_flags	xfs_fs.h	/^	__u32		am_flags;$/;"	m	struct:xfs_attr_multiop
am_flags	xfs_ioctl32.h	/^	__u32		am_flags;$/;"	m	struct:compat_xfs_attr_multiop
am_length	xfs_fs.h	/^	__u32		am_length;$/;"	m	struct:xfs_attr_multiop
am_length	xfs_ioctl32.h	/^	__u32		am_length;$/;"	m	struct:compat_xfs_attr_multiop
am_opcode	xfs_fs.h	/^	__u32		am_opcode;$/;"	m	struct:xfs_attr_multiop
am_opcode	xfs_ioctl32.h	/^	__u32		am_opcode;$/;"	m	struct:compat_xfs_attr_multiop
ar_blockcount	xfs_alloc_btree.h	/^	__be32		ar_blockcount;	\/* count of free blocks *\/$/;"	m	struct:xfs_alloc_rec
ar_blockcount	xfs_alloc_btree.h	/^	xfs_extlen_t	ar_blockcount;	\/* count of free blocks *\/$/;"	m	struct:xfs_alloc_rec_incore
ar_startblock	xfs_alloc_btree.h	/^	__be32		ar_startblock;	\/* starting block number *\/$/;"	m	struct:xfs_alloc_rec
ar_startblock	xfs_alloc_btree.h	/^	xfs_agblock_t	ar_startblock;	\/* starting block number *\/$/;"	m	struct:xfs_alloc_rec_incore
args	xfs_da_btree.h	/^	xfs_da_args_t		*args;		\/* filename arguments *\/$/;"	m	struct:xfs_da_state
assfail	xfs_message.c	/^assfail(char *expr, char *file, int line)$/;"	f
attrlist	xfs_attr.h	/^typedef struct attrlist {$/;"	s
attrlist_cursor_kern	xfs_attr.h	/^typedef struct attrlist_cursor_kern {$/;"	s
attrlist_cursor_kern_t	xfs_attr.h	/^} attrlist_cursor_kern_t;$/;"	t	typeref:struct:attrlist_cursor_kern
attrlist_ent	xfs_attr.h	/^typedef struct attrlist_ent {	\/* data from attr_list() *\/$/;"	s
attrlist_ent_t	xfs_attr.h	/^} attrlist_ent_t;$/;"	t	typeref:struct:attrlist_ent
attrlist_t	xfs_attr.h	/^} attrlist_t;$/;"	t	typeref:struct:attrlist
b	xfs_btree.h	/^		xfs_bmbt_irec_t		b;$/;"	m	union:xfs_btree_cur::__anon10
b	xfs_btree.h	/^		} b;$/;"	m	union:xfs_btree_cur::__anon11	typeref:struct:xfs_btree_cur::__anon11::__anon13
b_addr	xfs_buf.h	/^	void			*b_addr;	\/* virtual address of buffer *\/$/;"	m	struct:xfs_buf
b_bn	xfs_buf.h	/^	xfs_daddr_t		b_bn;		\/* block number for I\/O *\/$/;"	m	struct:xfs_buf
b_buffer_length	xfs_buf.h	/^	size_t			b_buffer_length;\/* size of buffer in bytes *\/$/;"	m	struct:xfs_buf
b_count_desired	xfs_buf.h	/^	size_t			b_count_desired;\/* desired transfer size *\/$/;"	m	struct:xfs_buf
b_error	xfs_buf.h	/^	unsigned short		b_error;	\/* error code on I\/O *\/$/;"	m	struct:xfs_buf
b_file_offset	xfs_buf.h	/^	xfs_off_t		b_file_offset;	\/* offset in file *\/$/;"	m	struct:xfs_buf
b_flags	xfs_buf.h	/^	xfs_buf_flags_t		b_flags;	\/* status flags *\/$/;"	m	struct:xfs_buf
b_fspriv	xfs_buf.h	/^	void			*b_fspriv;$/;"	m	struct:xfs_buf
b_hold	xfs_buf.h	/^	atomic_t		b_hold;		\/* reference count *\/$/;"	m	struct:xfs_buf
b_io_remaining	xfs_buf.h	/^	atomic_t		b_io_remaining;	\/* #outstanding I\/O requests *\/$/;"	m	struct:xfs_buf
b_iodone	xfs_buf.h	/^	xfs_buf_iodone_t	b_iodone;	\/* I\/O completion function *\/$/;"	m	struct:xfs_buf
b_iodone_work	xfs_buf.h	/^	struct work_struct	b_iodone_work;$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::work_struct
b_iowait	xfs_buf.h	/^	struct completion	b_iowait;	\/* queue for I\/O waiters *\/$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::completion
b_last_holder	xfs_buf.h	/^	int			b_last_holder;$/;"	m	struct:xfs_buf
b_list	xfs_buf.h	/^	struct list_head	b_list;$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::list_head
b_lru	xfs_buf.h	/^	struct list_head	b_lru;		\/* lru list *\/$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::list_head
b_lru_ref	xfs_buf.h	/^	atomic_t		b_lru_ref;	\/* lru reclaim ref count *\/$/;"	m	struct:xfs_buf
b_offset	xfs_buf.h	/^	unsigned int		b_offset;	\/* page offset in first page *\/$/;"	m	struct:xfs_buf
b_pag	xfs_buf.h	/^	struct xfs_perag	*b_pag;		\/* contains rbtree root *\/$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::xfs_perag
b_page_array	xfs_buf.h	/^	struct page		*b_page_array[XB_PAGES]; \/* inline pages *\/$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::page
b_page_count	xfs_buf.h	/^	unsigned int		b_page_count;	\/* size of page array *\/$/;"	m	struct:xfs_buf
b_pages	xfs_buf.h	/^	struct page		**b_pages;	\/* array of page pointers *\/$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::page
b_pin_count	xfs_buf.h	/^	atomic_t		b_pin_count;	\/* pin count *\/$/;"	m	struct:xfs_buf
b_queuetime	xfs_buf.h	/^	unsigned long		b_queuetime;	\/* time buffer was queued *\/$/;"	m	struct:xfs_buf
b_rbnode	xfs_buf.h	/^	struct rb_node		b_rbnode;	\/* rbtree node *\/$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::rb_node
b_sema	xfs_buf.h	/^	struct semaphore	b_sema;		\/* semaphore for lockables *\/$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::semaphore
b_target	xfs_buf.h	/^	xfs_buftarg_t		*b_target;	\/* buffer target (device) *\/$/;"	m	struct:xfs_buf
b_transp	xfs_buf.h	/^	struct xfs_trans	*b_transp;$/;"	m	struct:xfs_buf	typeref:struct:xfs_buf::xfs_trans
b_waiters	xfs_buf.h	/^	wait_queue_head_t	b_waiters;	\/* unpin waiters *\/$/;"	m	struct:xfs_buf
back	xfs_da_btree.h	/^	__be32		back;			\/* following block in list *\/$/;"	m	struct:xfs_da_blkinfo
base	xfs_attr_leaf.h	/^	__be16	base;			  \/* base of free region *\/$/;"	m	struct:xfs_attr_leaf_map
bb_leftsib	xfs_btree.h	/^			__be32		bb_leftsib;$/;"	m	struct:xfs_btree_block::__anon7::__anon8
bb_leftsib	xfs_btree.h	/^			__be64		bb_leftsib;$/;"	m	struct:xfs_btree_block::__anon7::__anon9
bb_level	xfs_bmap_btree.h	/^	__be16		bb_level;	\/* 0 is a leaf *\/$/;"	m	struct:xfs_bmdr_block
bb_level	xfs_btree.h	/^	__be16		bb_level;	\/* 0 is a leaf *\/$/;"	m	struct:xfs_btree_block
bb_magic	xfs_btree.h	/^	__be32		bb_magic;	\/* magic number for block type *\/$/;"	m	struct:xfs_btree_block
bb_numrecs	xfs_bmap_btree.h	/^	__be16		bb_numrecs;	\/* current # of data records *\/$/;"	m	struct:xfs_bmdr_block
bb_numrecs	xfs_btree.h	/^	__be16		bb_numrecs;	\/* current # of data records *\/$/;"	m	struct:xfs_btree_block
bb_rightsib	xfs_btree.h	/^			__be32		bb_rightsib;$/;"	m	struct:xfs_btree_block::__anon7::__anon8
bb_rightsib	xfs_btree.h	/^			__be64		bb_rightsib;$/;"	m	struct:xfs_btree_block::__anon7::__anon9
bb_u	xfs_btree.h	/^	} bb_u;				\/* rest *\/$/;"	m	struct:xfs_btree_block	typeref:union:xfs_btree_block::__anon7
bbcount	xfs_da_btree.h	/^	short		bbcount;	\/* how large is data in bbs *\/$/;"	m	struct:xfs_dabuf
bc_blkno	xfs_log_recover.c	/^	xfs_daddr_t		bc_blkno;$/;"	m	struct:xfs_buf_cancel	file:
bc_blocklog	xfs_btree.h	/^	__uint8_t	bc_blocklog;	\/* log2(blocksize) of btree blocks *\/$/;"	m	struct:xfs_btree_cur
bc_btnum	xfs_btree.h	/^	xfs_btnum_t	bc_btnum;	\/* identifies which btree type *\/$/;"	m	struct:xfs_btree_cur
bc_bufs	xfs_btree.h	/^	struct xfs_buf	*bc_bufs[XFS_BTREE_MAXLEVELS];	\/* buf ptr per level *\/$/;"	m	struct:xfs_btree_cur	typeref:struct:xfs_btree_cur::xfs_buf
bc_flags	xfs_btree.h	/^	uint			bc_flags; \/* btree features - below *\/$/;"	m	struct:xfs_btree_cur
bc_len	xfs_log_recover.c	/^	uint			bc_len;$/;"	m	struct:xfs_buf_cancel	file:
bc_list	xfs_log_recover.c	/^	struct list_head	bc_list;$/;"	m	struct:xfs_buf_cancel	typeref:struct:xfs_buf_cancel::list_head	file:
bc_mp	xfs_btree.h	/^	struct xfs_mount	*bc_mp;	\/* file system mount struct *\/$/;"	m	struct:xfs_btree_cur	typeref:struct:xfs_btree_cur::xfs_mount
bc_nlevels	xfs_btree.h	/^	__uint8_t	bc_nlevels;	\/* number of levels in the tree *\/$/;"	m	struct:xfs_btree_cur
bc_ops	xfs_btree.h	/^	const struct xfs_btree_ops *bc_ops;$/;"	m	struct:xfs_btree_cur	typeref:struct:xfs_btree_cur::xfs_btree_ops
bc_private	xfs_btree.h	/^	}		bc_private;	\/* per-btree type data *\/$/;"	m	struct:xfs_btree_cur	typeref:union:xfs_btree_cur::__anon11
bc_ptrs	xfs_btree.h	/^	int		bc_ptrs[XFS_BTREE_MAXLEVELS];	\/* key\/record # *\/$/;"	m	struct:xfs_btree_cur
bc_ra	xfs_btree.h	/^	__uint8_t	bc_ra[XFS_BTREE_MAXLEVELS];	\/* readahead bits *\/$/;"	m	struct:xfs_btree_cur
bc_rec	xfs_btree.h	/^	}		bc_rec;		\/* current insert\/search record value *\/$/;"	m	struct:xfs_btree_cur	typeref:union:xfs_btree_cur::__anon10
bc_refcount	xfs_log_recover.c	/^	int			bc_refcount;$/;"	m	struct:xfs_buf_cancel	file:
bc_tp	xfs_btree.h	/^	struct xfs_trans	*bc_tp;	\/* transaction we're in, if any *\/$/;"	m	struct:xfs_btree_cur	typeref:struct:xfs_btree_cur::xfs_trans
before	xfs_da_btree.h	/^		__be32	before;		\/* Btree block before this key *\/$/;"	m	struct:xfs_da_intnode::xfs_da_node_entry
bestcount	xfs_dir2_format.h	/^	__be32			bestcount;$/;"	m	struct:xfs_dir2_leaf_tail
bestfree	xfs_dir2_format.h	/^	xfs_dir2_data_free_t	bestfree[XFS_DIR2_DATA_FD_COUNT];$/;"	m	struct:xfs_dir2_data_hdr
bests	xfs_dir2_format.h	/^	__be16			bests[];	\/* best free counts *\/$/;"	m	struct:xfs_dir2_free
bio_add_buffer	xfs_aops.c	/^static inline int bio_add_buffer(struct bio *bio, struct buffer_head *bh)$/;"	f	file:
blf_blkno	xfs_buf_item.h	/^	__int64_t	blf_blkno;	\/* starting blkno of this buf *\/$/;"	m	struct:xfs_buf_log_format
blf_data_map	xfs_buf_item.h	/^	unsigned int	blf_data_map[1];\/* variable size bitmap of *\/$/;"	m	struct:xfs_buf_log_format
blf_flags	xfs_buf_item.h	/^	ushort		blf_flags;	\/* misc state *\/$/;"	m	struct:xfs_buf_log_format
blf_len	xfs_buf_item.h	/^	ushort		blf_len;	\/* number of blocks in this buf *\/$/;"	m	struct:xfs_buf_log_format
blf_map_size	xfs_buf_item.h	/^	unsigned int	blf_map_size;	\/* size of data bitmap in words *\/$/;"	m	struct:xfs_buf_log_format
blf_size	xfs_buf_item.h	/^	unsigned short	blf_size;	\/* size of this item *\/$/;"	m	struct:xfs_buf_log_format
blf_type	xfs_buf_item.h	/^	unsigned short	blf_type;	\/* buf log item type indicator *\/$/;"	m	struct:xfs_buf_log_format
bli_buf	xfs_buf_item.h	/^	struct xfs_buf		*bli_buf;	\/* real buffer pointer *\/$/;"	m	struct:xfs_buf_log_item	typeref:struct:xfs_buf_log_item::xfs_buf
bli_flags	xfs_buf_item.h	/^	unsigned int		bli_flags;	\/* misc flags *\/$/;"	m	struct:xfs_buf_log_item
bli_format	xfs_buf_item.h	/^	xfs_buf_log_format_t	bli_format;	\/* in-log header *\/$/;"	m	struct:xfs_buf_log_item
bli_item	xfs_buf_item.h	/^	xfs_log_item_t		bli_item;	\/* common item structure *\/$/;"	m	struct:xfs_buf_log_item
bli_logged	xfs_buf_item.h	/^	char			*bli_logged;	\/* bytes logged (bitmap) *\/$/;"	m	struct:xfs_buf_log_item
bli_orig	xfs_buf_item.h	/^	char			*bli_orig;	\/* original buffer copy *\/$/;"	m	struct:xfs_buf_log_item
bli_recur	xfs_buf_item.h	/^	unsigned int		bli_recur;	\/* lock recursion count *\/$/;"	m	struct:xfs_buf_log_item
bli_refcount	xfs_buf_item.h	/^	atomic_t		bli_refcount;	\/* cnt of tp refs *\/$/;"	m	struct:xfs_buf_log_item
blk	xfs_da_btree.h	/^	xfs_da_state_blk_t	blk[XFS_DA_NODE_MAXDEPTH];$/;"	m	struct:xfs_da_state_path
blkno	xfs_attr.h	/^	__u32	blkno;		\/* block containing entry (suggestion) *\/$/;"	m	struct:attrlist_cursor_kern
blkno	xfs_bmap.h	/^	xfs_fsblock_t		blkno;	\/* starting block of new extent *\/$/;"	m	struct:xfs_bmalloca
blkno	xfs_da_btree.h	/^	xfs_dablk_t	blkno;		\/* blkno of attr leaf of interest *\/$/;"	m	struct:xfs_da_args
blkno	xfs_da_btree.h	/^	xfs_dablk_t	blkno;		\/* filesystem blkno of buffer *\/$/;"	m	struct:xfs_da_state_blk
blkno2	xfs_da_btree.h	/^	xfs_dablk_t	blkno2;		\/* blkno of 2nd attr leaf of interest *\/$/;"	m	struct:xfs_da_args
blocksize	xfs_da_btree.h	/^	unsigned int		blocksize;	\/* logical block size *\/$/;"	m	struct:xfs_da_state
blocksize	xfs_fs.h	/^	__u32		blocksize;	\/* filesystem (data) block size *\/$/;"	m	struct:xfs_fsop_geom
blocksize	xfs_fs.h	/^	__u32		blocksize;	\/* filesystem (data) block size *\/$/;"	m	struct:xfs_fsop_geom_v1
blocksize	xfs_ioctl32.h	/^	__u32		blocksize;	\/* filesystem (data) block size *\/$/;"	m	struct:compat_xfs_fsop_geom_v1
bmbr	xfs_btree.h	/^	xfs_bmdr_key_t		bmbr;	\/* bmbt root block *\/$/;"	m	union:xfs_btree_key
bmbr	xfs_btree.h	/^	xfs_bmdr_rec_t		bmbr;	\/* bmbt root block *\/$/;"	m	union:xfs_btree_rec
bmbt	xfs_btree.h	/^	xfs_bmbt_key_t		bmbt;$/;"	m	union:xfs_btree_key
bmbt	xfs_btree.h	/^	xfs_bmbt_rec_t		bmbt;$/;"	m	union:xfs_btree_rec
bmv_block	xfs_fs.h	/^	__s64		bmv_block;	\/* starting block (64-bit daddr_t)  *\/$/;"	m	struct:getbmap
bmv_block	xfs_fs.h	/^	__s64		bmv_block;	\/* starting block (64-bit daddr_t)  *\/$/;"	m	struct:getbmapx
bmv_count	xfs_fs.h	/^	__s32		bmv_count;	\/* # of entries in array incl. 1st  *\/$/;"	m	struct:getbmap
bmv_count	xfs_fs.h	/^	__s32		bmv_count;	\/* # of entries in array incl. 1st  *\/$/;"	m	struct:getbmapx
bmv_entries	xfs_fs.h	/^	__s32		bmv_entries;	\/* # of entries filled in (output)  *\/$/;"	m	struct:getbmap
bmv_entries	xfs_fs.h	/^	__s32		bmv_entries;	\/* # of entries filled in (output). *\/$/;"	m	struct:getbmapx
bmv_iflags	xfs_fs.h	/^	__s32		bmv_iflags;	\/* input flags (1st structure)	    *\/$/;"	m	struct:getbmapx
bmv_length	xfs_fs.h	/^	__s64		bmv_length;	\/* length of segment, blocks	    *\/$/;"	m	struct:getbmap
bmv_length	xfs_fs.h	/^	__s64		bmv_length;	\/* length of segment, blocks	    *\/$/;"	m	struct:getbmapx
bmv_offset	xfs_fs.h	/^	__s64		bmv_offset;	\/* file offset of segment in blocks *\/$/;"	m	struct:getbmap
bmv_offset	xfs_fs.h	/^	__s64		bmv_offset;	\/* file offset of segment in blocks *\/$/;"	m	struct:getbmapx
bmv_oflags	xfs_fs.h	/^	__s32		bmv_oflags;	\/* output flags (after 1st structure)*\/$/;"	m	struct:getbmapx
bmv_unused1	xfs_fs.h	/^	__s32		bmv_unused1;	\/* future use			    *\/$/;"	m	struct:getbmapx
bmv_unused2	xfs_fs.h	/^	__s32		bmv_unused2;	\/* future use			    *\/$/;"	m	struct:getbmapx
bno	xfs_ag.h	/^	xfs_agblock_t	bno;$/;"	m	struct:xfs_busy_extent
boolean_t	xfs_types.h	/^typedef enum { B_FALSE,B_TRUE }	boolean_t;$/;"	t	typeref:enum:__anon33
bp	xfs_da_btree.h	/^	xfs_dabuf_t	*bp;		\/* buffer containing block *\/$/;"	m	struct:xfs_da_state_blk
bps	xfs_da_btree.h	/^	struct xfs_buf	*bps[1];	\/* actually nbuf of these *\/$/;"	m	struct:xfs_dabuf	typeref:struct:xfs_dabuf::xfs_buf
br_blockcount	xfs_bmap_btree.h	/^	xfs_filblks_t	br_blockcount;	\/* number of blocks *\/$/;"	m	struct:xfs_bmbt_irec
br_startblock	xfs_bmap_btree.h	/^	xfs_fsblock_t	br_startblock;	\/* starting block number *\/$/;"	m	struct:xfs_bmbt_irec
br_startoff	xfs_bmap_btree.h	/^	__be64		br_startoff;	\/* starting file offset *\/$/;"	m	struct:xfs_bmbt_key
br_startoff	xfs_bmap_btree.h	/^	xfs_fileoff_t	br_startoff;	\/* starting file offset *\/$/;"	m	struct:xfs_bmbt_irec
br_state	xfs_bmap_btree.h	/^	xfs_exntst_t	br_state;	\/* extent state *\/$/;"	m	struct:xfs_bmbt_irec
bs_aextents	xfs_fs.h	/^	__u16		bs_aextents;	\/* attribute number of extents	*\/$/;"	m	struct:xfs_bstat
bs_aextents	xfs_ioctl32.h	/^	__u16		bs_aextents;	\/* attribute number of extents	*\/$/;"	m	struct:compat_xfs_bstat
bs_atime	xfs_fs.h	/^	xfs_bstime_t	bs_atime;	\/* access time			*\/$/;"	m	struct:xfs_bstat
bs_atime	xfs_ioctl32.h	/^	compat_xfs_bstime_t bs_atime;	\/* access time			*\/$/;"	m	struct:compat_xfs_bstat
bs_blksize	xfs_fs.h	/^	__s32		bs_blksize;	\/* block size			*\/$/;"	m	struct:xfs_bstat
bs_blksize	xfs_ioctl32.h	/^	__s32		bs_blksize;	\/* block size			*\/$/;"	m	struct:compat_xfs_bstat
bs_blocks	xfs_fs.h	/^	int64_t		bs_blocks;	\/* number of blocks		*\/$/;"	m	struct:xfs_bstat
bs_blocks	xfs_ioctl32.h	/^	int64_t		bs_blocks;	\/* number of blocks		*\/$/;"	m	struct:compat_xfs_bstat
bs_ctime	xfs_fs.h	/^	xfs_bstime_t	bs_ctime;	\/* inode change time		*\/$/;"	m	struct:xfs_bstat
bs_ctime	xfs_ioctl32.h	/^	compat_xfs_bstime_t bs_ctime;	\/* inode change time		*\/$/;"	m	struct:compat_xfs_bstat
bs_dmevmask	xfs_fs.h	/^	__u32		bs_dmevmask;	\/* DMIG event mask		*\/$/;"	m	struct:xfs_bstat
bs_dmevmask	xfs_ioctl32.h	/^	__u32		bs_dmevmask;	\/* DMIG event mask		*\/$/;"	m	struct:compat_xfs_bstat
bs_dmstate	xfs_fs.h	/^	__u16		bs_dmstate;	\/* DMIG state info		*\/$/;"	m	struct:xfs_bstat
bs_dmstate	xfs_ioctl32.h	/^	__u16		bs_dmstate;	\/* DMIG state info		*\/$/;"	m	struct:compat_xfs_bstat
bs_extents	xfs_fs.h	/^	__s32		bs_extents;	\/* number of extents		*\/$/;"	m	struct:xfs_bstat
bs_extents	xfs_ioctl32.h	/^	__s32		bs_extents;	\/* number of extents		*\/$/;"	m	struct:compat_xfs_bstat
bs_extsize	xfs_fs.h	/^	__s32		bs_extsize;	\/* extent size			*\/$/;"	m	struct:xfs_bstat
bs_extsize	xfs_ioctl32.h	/^	__s32		bs_extsize;	\/* extent size			*\/$/;"	m	struct:compat_xfs_bstat
bs_forkoff	xfs_fs.h	/^	__u16		bs_forkoff;	\/* inode fork offset in bytes	*\/$/;"	m	struct:xfs_bstat
bs_gen	xfs_fs.h	/^	__u32		bs_gen;		\/* generation count		*\/$/;"	m	struct:xfs_bstat
bs_gen	xfs_ioctl32.h	/^	__u32		bs_gen;		\/* generation count		*\/$/;"	m	struct:compat_xfs_bstat
bs_gid	xfs_fs.h	/^	__u32		bs_gid;		\/* group id			*\/$/;"	m	struct:xfs_bstat
bs_gid	xfs_ioctl32.h	/^	__u32		bs_gid;		\/* group id			*\/$/;"	m	struct:compat_xfs_bstat
bs_ino	xfs_fs.h	/^	__u64		bs_ino;		\/* inode number			*\/$/;"	m	struct:xfs_bstat
bs_ino	xfs_ioctl32.h	/^	__u64		bs_ino;		\/* inode number			*\/$/;"	m	struct:compat_xfs_bstat
bs_mode	xfs_fs.h	/^	__u16		bs_mode;	\/* type and mode		*\/$/;"	m	struct:xfs_bstat
bs_mode	xfs_ioctl32.h	/^	__u16		bs_mode;	\/* type and mode		*\/$/;"	m	struct:compat_xfs_bstat
bs_mtime	xfs_fs.h	/^	xfs_bstime_t	bs_mtime;	\/* modify time			*\/$/;"	m	struct:xfs_bstat
bs_mtime	xfs_ioctl32.h	/^	compat_xfs_bstime_t bs_mtime;	\/* modify time			*\/$/;"	m	struct:compat_xfs_bstat
bs_nlink	xfs_fs.h	/^	__u16		bs_nlink;	\/* number of links		*\/$/;"	m	struct:xfs_bstat
bs_nlink	xfs_ioctl32.h	/^	__u16		bs_nlink;	\/* number of links		*\/$/;"	m	struct:compat_xfs_bstat
bs_pad	xfs_fs.h	/^	unsigned char	bs_pad[10];	\/* pad space, unused		*\/$/;"	m	struct:xfs_bstat
bs_pad	xfs_ioctl32.h	/^	unsigned char	bs_pad[12];	\/* pad space, unused		*\/$/;"	m	struct:compat_xfs_bstat
bs_projid	xfs_fs.h	302;"	d
bs_projid	xfs_ioctl32.h	69;"	d
bs_projid_hi	xfs_fs.h	/^	__u16		bs_projid_hi;	\/* higher part of project id	*\/$/;"	m	struct:xfs_bstat
bs_projid_hi	xfs_ioctl32.h	/^	__u16		bs_projid_hi;	\/* high part of project id	*\/$/;"	m	struct:compat_xfs_bstat
bs_projid_lo	xfs_fs.h	/^	__u16		bs_projid_lo;	\/* lower part of project id	*\/$/;"	m	struct:xfs_bstat
bs_projid_lo	xfs_ioctl32.h	/^	__u16		bs_projid_lo;	\/* lower part of project id	*\/$/;"	m	struct:compat_xfs_bstat
bs_rdev	xfs_fs.h	/^	__u32		bs_rdev;	\/* device value			*\/$/;"	m	struct:xfs_bstat
bs_rdev	xfs_ioctl32.h	/^	__u32		bs_rdev;	\/* device value			*\/$/;"	m	struct:compat_xfs_bstat
bs_size	xfs_fs.h	/^	__s64		bs_size;	\/* file size			*\/$/;"	m	struct:xfs_bstat
bs_size	xfs_ioctl32.h	/^	__s64		bs_size;	\/* file size			*\/$/;"	m	struct:compat_xfs_bstat
bs_uid	xfs_fs.h	/^	__u32		bs_uid;		\/* user id			*\/$/;"	m	struct:xfs_bstat
bs_uid	xfs_ioctl32.h	/^	__u32		bs_uid;		\/* user id			*\/$/;"	m	struct:compat_xfs_bstat
bs_xflags	xfs_fs.h	/^	__u32		bs_xflags;	\/* extended flags		*\/$/;"	m	struct:xfs_bstat
bs_xflags	xfs_ioctl32.h	/^	__u32		bs_xflags;	\/* extended flags		*\/$/;"	m	struct:compat_xfs_bstat
bt_bdev	xfs_buf.h	/^	struct block_device	*bt_bdev;$/;"	m	struct:xfs_buftarg	typeref:struct:xfs_buftarg::block_device
bt_bdi	xfs_buf.h	/^	struct backing_dev_info	*bt_bdi;$/;"	m	struct:xfs_buftarg	typeref:struct:xfs_buftarg::backing_dev_info
bt_bsize	xfs_buf.h	/^	unsigned int		bt_bsize;$/;"	m	struct:xfs_buftarg
bt_delwri_lock	xfs_buf.h	/^	spinlock_t		bt_delwri_lock;$/;"	m	struct:xfs_buftarg
bt_delwri_queue	xfs_buf.h	/^	struct list_head	bt_delwri_queue;$/;"	m	struct:xfs_buftarg	typeref:struct:xfs_buftarg::list_head
bt_dev	xfs_buf.h	/^	dev_t			bt_dev;$/;"	m	struct:xfs_buftarg
bt_flags	xfs_buf.h	/^	unsigned long		bt_flags;$/;"	m	struct:xfs_buftarg
bt_lru	xfs_buf.h	/^	struct list_head	bt_lru;$/;"	m	struct:xfs_buftarg	typeref:struct:xfs_buftarg::list_head
bt_lru_lock	xfs_buf.h	/^	spinlock_t		bt_lru_lock;$/;"	m	struct:xfs_buftarg
bt_lru_nr	xfs_buf.h	/^	unsigned int		bt_lru_nr;$/;"	m	struct:xfs_buftarg
bt_mount	xfs_buf.h	/^	struct xfs_mount	*bt_mount;$/;"	m	struct:xfs_buftarg	typeref:struct:xfs_buftarg::xfs_mount
bt_shrinker	xfs_buf.h	/^	struct shrinker		bt_shrinker;$/;"	m	struct:xfs_buftarg	typeref:struct:xfs_buftarg::shrinker
bt_smask	xfs_buf.h	/^	size_t			bt_smask;$/;"	m	struct:xfs_buftarg
bt_sshift	xfs_buf.h	/^	unsigned int		bt_sshift;$/;"	m	struct:xfs_buftarg
bt_task	xfs_buf.h	/^	struct task_struct	*bt_task;$/;"	m	struct:xfs_buftarg	typeref:struct:xfs_buftarg::task_struct
btree	xfs_da_btree.h	/^	} btree[1];			\/* variable sized array of keys *\/$/;"	m	struct:xfs_da_intnode	typeref:struct:xfs_da_intnode::xfs_da_node_entry
buffer	xfs_fs.h	/^	void				__user *buffer;	\/* returned names *\/$/;"	m	struct:xfs_fsop_attrlist_handlereq
buffer	xfs_ioctl32.h	/^	compat_uptr_t			buffer;	\/* returned names *\/$/;"	m	struct:compat_xfs_fsop_attrlist_handlereq
buflen	xfs_fs.h	/^	__u32				buflen;	\/* length of buffer supplied *\/$/;"	m	struct:xfs_fsop_attrlist_handlereq
buflen	xfs_ioctl32.h	/^	__u32				buflen;	\/* length of buffer supplied *\/$/;"	m	struct:compat_xfs_fsop_attrlist_handlereq
bufsize	xfs_attr.h	/^	int				bufsize;	\/* total buffer size *\/$/;"	m	struct:xfs_attr_list_context
bulkstat_one_fmt_pf	xfs_itable.h	/^typedef int (*bulkstat_one_fmt_pf)(  \/* used size in bytes or negative error *\/$/;"	t
bulkstat_one_pf	xfs_itable.h	/^typedef int (*bulkstat_one_pf)(struct xfs_mount	*mp,$/;"	t
busy_extents	xfs_log_priv.h	/^	struct list_head	busy_extents;	\/* busy extents in chkpt *\/$/;"	m	struct:xfs_cil_ctx	typeref:struct:xfs_cil_ctx::list_head
cb_arg	xfs_log.h	/^	void			*cb_arg;$/;"	m	struct:xfs_log_callback
cb_func	xfs_log.h	/^	void			(*cb_func)(void *, int);$/;"	m	struct:xfs_log_callback
cb_next	xfs_log.h	/^	struct xfs_log_callback	*cb_next;$/;"	m	struct:xfs_log_callback	typeref:struct:xfs_log_callback::xfs_log_callback
cil	xfs_log_priv.h	/^	struct xfs_cil		*cil;$/;"	m	struct:xfs_cil_ctx	typeref:struct:xfs_cil_ctx::xfs_cil
cmpresult	xfs_da_btree.h	/^	enum xfs_dacmp	cmpresult;	\/* name compare result for lookups *\/$/;"	m	struct:xfs_da_args	typeref:enum:xfs_da_args::xfs_dacmp
commit_lsn	xfs_log_priv.h	/^	xfs_lsn_t		commit_lsn;	\/* chkpt commit record lsn *\/$/;"	m	struct:xfs_cil_ctx
committing	xfs_log_priv.h	/^	struct list_head	committing;	\/* ctx committing list *\/$/;"	m	struct:xfs_cil_ctx	typeref:struct:xfs_cil_ctx::list_head
compat_xfs_attr_multiop	xfs_ioctl32.h	/^typedef struct compat_xfs_attr_multiop {$/;"	s
compat_xfs_attr_multiop_t	xfs_ioctl32.h	/^} compat_xfs_attr_multiop_t;$/;"	t	typeref:struct:compat_xfs_attr_multiop
compat_xfs_bstat	xfs_ioctl32.h	/^typedef struct compat_xfs_bstat {$/;"	s
compat_xfs_bstat_t	xfs_ioctl32.h	/^} __compat_packed compat_xfs_bstat_t;$/;"	t	typeref:struct:compat_xfs_bstat
compat_xfs_bstime	xfs_ioctl32.h	/^typedef struct compat_xfs_bstime {$/;"	s
compat_xfs_bstime_t	xfs_ioctl32.h	/^} compat_xfs_bstime_t;$/;"	t	typeref:struct:compat_xfs_bstime
compat_xfs_flock64	xfs_ioctl32.h	/^typedef struct compat_xfs_flock64 {$/;"	s
compat_xfs_flock64_t	xfs_ioctl32.h	/^} compat_xfs_flock64_t;$/;"	t	typeref:struct:compat_xfs_flock64
compat_xfs_fsop_attrlist_handlereq	xfs_ioctl32.h	/^typedef struct compat_xfs_fsop_attrlist_handlereq {$/;"	s
compat_xfs_fsop_attrlist_handlereq_t	xfs_ioctl32.h	/^} __compat_packed compat_xfs_fsop_attrlist_handlereq_t;$/;"	t	typeref:struct:compat_xfs_fsop_attrlist_handlereq
compat_xfs_fsop_attrmulti_handlereq	xfs_ioctl32.h	/^typedef struct compat_xfs_fsop_attrmulti_handlereq {$/;"	s
compat_xfs_fsop_attrmulti_handlereq_t	xfs_ioctl32.h	/^} compat_xfs_fsop_attrmulti_handlereq_t;$/;"	t	typeref:struct:compat_xfs_fsop_attrmulti_handlereq
compat_xfs_fsop_bulkreq	xfs_ioctl32.h	/^typedef struct compat_xfs_fsop_bulkreq {$/;"	s
compat_xfs_fsop_bulkreq_t	xfs_ioctl32.h	/^} compat_xfs_fsop_bulkreq_t;$/;"	t	typeref:struct:compat_xfs_fsop_bulkreq
compat_xfs_fsop_geom_v1	xfs_ioctl32.h	/^typedef struct compat_xfs_fsop_geom_v1 {$/;"	s
compat_xfs_fsop_geom_v1_t	xfs_ioctl32.h	/^} __attribute__((packed)) compat_xfs_fsop_geom_v1_t;$/;"	t	typeref:struct:compat_xfs_fsop_geom_v1
compat_xfs_fsop_handlereq	xfs_ioctl32.h	/^typedef struct compat_xfs_fsop_handlereq {$/;"	s
compat_xfs_fsop_handlereq_t	xfs_ioctl32.h	/^} compat_xfs_fsop_handlereq_t;$/;"	t	typeref:struct:compat_xfs_fsop_handlereq
compat_xfs_fsop_setdm_handlereq	xfs_ioctl32.h	/^typedef struct compat_xfs_fsop_setdm_handlereq {$/;"	s
compat_xfs_fsop_setdm_handlereq_t	xfs_ioctl32.h	/^} compat_xfs_fsop_setdm_handlereq_t;$/;"	t	typeref:struct:compat_xfs_fsop_setdm_handlereq
compat_xfs_growfs_data	xfs_ioctl32.h	/^typedef struct compat_xfs_growfs_data {$/;"	s
compat_xfs_growfs_data_t	xfs_ioctl32.h	/^} __attribute__((packed)) compat_xfs_growfs_data_t;$/;"	t	typeref:struct:compat_xfs_growfs_data
compat_xfs_growfs_rt	xfs_ioctl32.h	/^typedef struct compat_xfs_growfs_rt {$/;"	s
compat_xfs_growfs_rt_t	xfs_ioctl32.h	/^} __attribute__((packed)) compat_xfs_growfs_rt_t;$/;"	t	typeref:struct:compat_xfs_growfs_rt
compat_xfs_inogrp	xfs_ioctl32.h	/^typedef struct compat_xfs_inogrp {$/;"	s
compat_xfs_inogrp_t	xfs_ioctl32.h	/^} __attribute__((packed)) compat_xfs_inogrp_t;$/;"	t	typeref:struct:compat_xfs_inogrp
compat_xfs_swapext	xfs_ioctl32.h	/^typedef struct compat_xfs_swapext {$/;"	s
compat_xfs_swapext_t	xfs_ioctl32.h	/^} __compat_packed compat_xfs_swapext_t;$/;"	t	typeref:struct:compat_xfs_swapext
compname	xfs_da_btree.h	/^	enum xfs_dacmp	(*compname)(struct xfs_da_args *,$/;"	m	struct:xfs_nameops	typeref:enum:xfs_nameops::compname
conv	xfs_bmap.h	/^	char			conv;	\/* overwriting unwritten extents *\/$/;"	m	struct:xfs_bmalloca
count	xfs_attr.h	/^	ssize_t				count;		\/* num used entries *\/$/;"	m	struct:xfs_attr_list_context
count	xfs_attr_leaf.h	/^	__be16	count;			\/* count of active leaf_entry's *\/$/;"	m	struct:xfs_attr_leaf_hdr
count	xfs_attr_sf.h	/^		__u8	count;	\/* count of active entries *\/$/;"	m	struct:xfs_attr_shortform::xfs_attr_sf_hdr
count	xfs_da_btree.h	/^		__be16	count;		\/* count of active entries *\/$/;"	m	struct:xfs_da_intnode::xfs_da_node_hdr
count	xfs_dir2_format.h	/^	__be16			count;		\/* count of entries *\/$/;"	m	struct:xfs_dir2_leaf_hdr
count	xfs_dir2_format.h	/^	__be32		count;			\/* count of leaf entries *\/$/;"	m	struct:xfs_dir2_block_tail
count	xfs_dir2_format.h	/^	__uint8_t		count;		\/* count of entries *\/$/;"	m	struct:xfs_dir2_sf_hdr
cur	xfs_bmap.h	/^	struct xfs_btree_cur	*cur;	\/* btree cursor *\/$/;"	m	struct:xfs_bmalloca	typeref:struct:xfs_bmalloca::xfs_btree_cur
current_clear_flags_nested	xfs_linux.h	127;"	d
current_cpu	xfs_linux.h	122;"	d
current_pid	xfs_linux.h	123;"	d
current_restore_flags_nested	xfs_linux.h	129;"	d
current_set_flags_nested	xfs_linux.h	125;"	d
current_test_flags	xfs_linux.h	124;"	d
cursor	xfs_attr.h	/^	struct attrlist_cursor_kern	*cursor;	\/* position in list *\/$/;"	m	struct:xfs_attr_list_context	typeref:struct:xfs_attr_list_context::attrlist_cursor_kern
d_bcount	xfs_quota.h	/^	__be64		d_bcount;	\/* disk blocks owned by the user *\/$/;"	m	struct:xfs_disk_dquot
d_blk_hardlimit	xfs_quota.h	/^	__be64		d_blk_hardlimit;\/* absolute limit on disk blks *\/$/;"	m	struct:xfs_disk_dquot
d_blk_softlimit	xfs_quota.h	/^	__be64		d_blk_softlimit;\/* preferred limit on disk blks *\/$/;"	m	struct:xfs_disk_dquot
d_btimer	xfs_quota.h	/^	__be32		d_btimer;	\/* similar to above; for disk blocks *\/$/;"	m	struct:xfs_disk_dquot
d_bwarns	xfs_quota.h	/^	__be16		d_bwarns;	\/* warnings issued wrt disk blocks *\/$/;"	m	struct:xfs_disk_dquot
d_flags	xfs_quota.h	/^	__u8		d_flags;	\/* XFS_DQ_USER\/PROJ\/GROUP *\/$/;"	m	struct:xfs_disk_dquot
d_icount	xfs_quota.h	/^	__be64		d_icount;	\/* inodes owned by the user *\/$/;"	m	struct:xfs_disk_dquot
d_id	xfs_quota.h	/^	__be32		d_id;		\/* user,project,group id *\/$/;"	m	struct:xfs_disk_dquot
d_ino_hardlimit	xfs_quota.h	/^	__be64		d_ino_hardlimit;\/* maximum # allocated inodes *\/$/;"	m	struct:xfs_disk_dquot
d_ino_softlimit	xfs_quota.h	/^	__be64		d_ino_softlimit;\/* preferred inode limit *\/$/;"	m	struct:xfs_disk_dquot
d_itimer	xfs_quota.h	/^	__be32		d_itimer;	\/* zero if within inode limits if not,$/;"	m	struct:xfs_disk_dquot
d_iwarns	xfs_quota.h	/^	__be16		d_iwarns;	\/* warnings issued wrt num inodes *\/$/;"	m	struct:xfs_disk_dquot
d_magic	xfs_quota.h	/^	__be16		d_magic;	\/* dquot magic = XFS_DQUOT_MAGIC *\/$/;"	m	struct:xfs_disk_dquot
d_maxiosz	xfs_fs.h	/^	__u32		d_maxiosz;	\/* max xfer size		*\/$/;"	m	struct:dioattr
d_mem	xfs_fs.h	/^	__u32		d_mem;		\/* data buffer memory alignment *\/$/;"	m	struct:dioattr
d_miniosz	xfs_fs.h	/^	__u32		d_miniosz;	\/* min xfer size		*\/$/;"	m	struct:dioattr
d_pad	xfs_quota.h	/^	__be16		d_pad;$/;"	m	struct:xfs_disk_dquot
d_pad0	xfs_quota.h	/^	__be32		d_pad0;		\/* 64 bit align *\/$/;"	m	struct:xfs_disk_dquot
d_rtb_hardlimit	xfs_quota.h	/^	__be64		d_rtb_hardlimit;\/* absolute limit on realtime blks *\/$/;"	m	struct:xfs_disk_dquot
d_rtb_softlimit	xfs_quota.h	/^	__be64		d_rtb_softlimit;\/* preferred limit on RT disk blks *\/$/;"	m	struct:xfs_disk_dquot
d_rtbcount	xfs_quota.h	/^	__be64		d_rtbcount;	\/* realtime blocks owned *\/$/;"	m	struct:xfs_disk_dquot
d_rtbtimer	xfs_quota.h	/^	__be32		d_rtbtimer;	\/* similar to above; for RT disk blocks *\/$/;"	m	struct:xfs_disk_dquot
d_rtbwarns	xfs_quota.h	/^	__be16		d_rtbwarns;	\/* warnings issued wrt RT disk blocks *\/$/;"	m	struct:xfs_disk_dquot
d_version	xfs_quota.h	/^	__u8		d_version;	\/* dquot version *\/$/;"	m	struct:xfs_disk_dquot
data	xfs_da_btree.h	/^	void		*data;		\/* pointer for buffers' data *\/$/;"	m	struct:xfs_dabuf
data	xfs_fs.h	/^	struct fsdmidata		__user *data;	\/* DMAPI data	*\/$/;"	m	struct:xfs_fsop_setdm_handlereq	typeref:struct:xfs_fsop_setdm_handlereq::__user
data	xfs_ioctl32.h	/^	compat_uptr_t			data;	\/* DMAPI data   *\/$/;"	m	struct:compat_xfs_fsop_setdm_handlereq
datablocks	xfs_fs.h	/^	__u64		datablocks;	\/* fsblocks in data subvolume	*\/$/;"	m	struct:xfs_fsop_geom
datablocks	xfs_fs.h	/^	__u64		datablocks;	\/* fsblocks in data subvolume	*\/$/;"	m	struct:xfs_fsop_geom_v1
datablocks	xfs_ioctl32.h	/^	__u64		datablocks;	\/* fsblocks in data subvolume	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
dd_diskdq	xfs_quota.h	/^	xfs_disk_dquot_t  dd_diskdq;	\/* portion that lives incore as well *\/$/;"	m	struct:xfs_dqblk
dd_fill	xfs_quota.h	/^	char		  dd_fill[32];	\/* filling for posterity *\/$/;"	m	struct:xfs_dqblk
define_xfs_printk_level	xfs_message.c	44;"	d	file:
delay	time.h	/^static inline void delay(long ticks)$/;"	f
di_aformat	xfs_dinode.h	/^	__s8		di_aformat;	\/* format of attr fork's data *\/$/;"	m	struct:xfs_dinode
di_aformat	xfs_inode.h	/^	__int8_t	di_aformat;	\/* format of attr fork's data *\/$/;"	m	struct:xfs_icdinode
di_anextents	xfs_dinode.h	/^	__be16		di_anextents;	\/* number of extents in attribute fork*\/$/;"	m	struct:xfs_dinode
di_anextents	xfs_inode.h	/^	xfs_aextnum_t	di_anextents;	\/* number of extents in attribute fork*\/$/;"	m	struct:xfs_icdinode
di_atime	xfs_dinode.h	/^	xfs_timestamp_t	di_atime;	\/* time last accessed *\/$/;"	m	struct:xfs_dinode
di_atime	xfs_inode.h	/^	xfs_ictimestamp_t di_atime;	\/* time last accessed *\/$/;"	m	struct:xfs_icdinode
di_ctime	xfs_dinode.h	/^	xfs_timestamp_t	di_ctime;	\/* time created\/inode modified *\/$/;"	m	struct:xfs_dinode
di_ctime	xfs_inode.h	/^	xfs_ictimestamp_t di_ctime;	\/* time created\/inode modified *\/$/;"	m	struct:xfs_icdinode
di_dmevmask	xfs_dinode.h	/^	__be32		di_dmevmask;	\/* DMIG event mask *\/$/;"	m	struct:xfs_dinode
di_dmevmask	xfs_inode.h	/^	__uint32_t	di_dmevmask;	\/* DMIG event mask *\/$/;"	m	struct:xfs_icdinode
di_dmstate	xfs_dinode.h	/^	__be16		di_dmstate;	\/* DMIG state info *\/$/;"	m	struct:xfs_dinode
di_dmstate	xfs_inode.h	/^	__uint16_t	di_dmstate;	\/* DMIG state info *\/$/;"	m	struct:xfs_icdinode
di_extsize	xfs_dinode.h	/^	__be32		di_extsize;	\/* basic\/minimum extent size for file *\/$/;"	m	struct:xfs_dinode
di_extsize	xfs_inode.h	/^	xfs_extlen_t	di_extsize;	\/* basic\/minimum extent size for file *\/$/;"	m	struct:xfs_icdinode
di_flags	xfs_dinode.h	/^	__be16		di_flags;	\/* random flags, XFS_DIFLAG_... *\/$/;"	m	struct:xfs_dinode
di_flags	xfs_inode.h	/^	__uint16_t	di_flags;	\/* random flags, XFS_DIFLAG_... *\/$/;"	m	struct:xfs_icdinode
di_flushiter	xfs_dinode.h	/^	__be16		di_flushiter;	\/* incremented on flush *\/$/;"	m	struct:xfs_dinode
di_flushiter	xfs_inode.h	/^	__uint16_t	di_flushiter;	\/* incremented on flush *\/$/;"	m	struct:xfs_icdinode
di_forkoff	xfs_dinode.h	/^	__u8		di_forkoff;	\/* attr fork offs, <<3 for 64b align *\/$/;"	m	struct:xfs_dinode
di_forkoff	xfs_inode.h	/^	__uint8_t	di_forkoff;	\/* attr fork offs, <<3 for 64b align *\/$/;"	m	struct:xfs_icdinode
di_format	xfs_dinode.h	/^	__u8		di_format;	\/* format of di_c data *\/$/;"	m	struct:xfs_dinode
di_format	xfs_inode.h	/^	__int8_t	di_format;	\/* format of di_c data *\/$/;"	m	struct:xfs_icdinode
di_gen	xfs_dinode.h	/^	__be32		di_gen;		\/* generation number *\/$/;"	m	struct:xfs_dinode
di_gen	xfs_inode.h	/^	__uint32_t	di_gen;		\/* generation number *\/$/;"	m	struct:xfs_icdinode
di_gid	xfs_dinode.h	/^	__be32		di_gid;		\/* owner's group id *\/$/;"	m	struct:xfs_dinode
di_gid	xfs_inode.h	/^	__uint32_t	di_gid;		\/* owner's group id *\/$/;"	m	struct:xfs_icdinode
di_magic	xfs_dinode.h	/^	__be16		di_magic;	\/* inode magic # = XFS_DINODE_MAGIC *\/$/;"	m	struct:xfs_dinode
di_magic	xfs_inode.h	/^	__uint16_t	di_magic;	\/* inode magic # = XFS_DINODE_MAGIC *\/$/;"	m	struct:xfs_icdinode
di_mode	xfs_dinode.h	/^	__be16		di_mode;	\/* mode and type of file *\/$/;"	m	struct:xfs_dinode
di_mode	xfs_inode.h	/^	__uint16_t	di_mode;	\/* mode and type of file *\/$/;"	m	struct:xfs_icdinode
di_mtime	xfs_dinode.h	/^	xfs_timestamp_t	di_mtime;	\/* time last modified *\/$/;"	m	struct:xfs_dinode
di_mtime	xfs_inode.h	/^	xfs_ictimestamp_t di_mtime;	\/* time last modified *\/$/;"	m	struct:xfs_icdinode
di_nblocks	xfs_dinode.h	/^	__be64		di_nblocks;	\/* # of direct & btree blocks used *\/$/;"	m	struct:xfs_dinode
di_nblocks	xfs_inode.h	/^	xfs_drfsbno_t	di_nblocks;	\/* # of direct & btree blocks used *\/$/;"	m	struct:xfs_icdinode
di_next_unlinked	xfs_dinode.h	/^	__be32		di_next_unlinked;\/* agi unlinked list ptr *\/$/;"	m	struct:xfs_dinode
di_nextents	xfs_dinode.h	/^	__be32		di_nextents;	\/* number of extents in data fork *\/$/;"	m	struct:xfs_dinode
di_nextents	xfs_inode.h	/^	xfs_extnum_t	di_nextents;	\/* number of extents in data fork *\/$/;"	m	struct:xfs_icdinode
di_nlink	xfs_dinode.h	/^	__be32		di_nlink;	\/* number of links to file *\/$/;"	m	struct:xfs_dinode
di_nlink	xfs_inode.h	/^	__uint32_t	di_nlink;	\/* number of links to file *\/$/;"	m	struct:xfs_icdinode
di_onlink	xfs_dinode.h	/^	__be16		di_onlink;	\/* old number of links to file *\/$/;"	m	struct:xfs_dinode
di_onlink	xfs_inode.h	/^	__uint16_t	di_onlink;	\/* old number of links to file *\/$/;"	m	struct:xfs_icdinode
di_pad	xfs_dinode.h	/^	__u8		di_pad[6];	\/* unused, zeroed space *\/$/;"	m	struct:xfs_dinode
di_pad	xfs_inode.h	/^	__uint8_t	di_pad[6];	\/* unused, zeroed space *\/$/;"	m	struct:xfs_icdinode
di_projid_hi	xfs_dinode.h	/^	__be16		di_projid_hi;	\/* higher part owner's project id *\/$/;"	m	struct:xfs_dinode
di_projid_hi	xfs_inode.h	/^	__uint16_t	di_projid_hi;	\/* higher part of owner's project id *\/$/;"	m	struct:xfs_icdinode
di_projid_lo	xfs_dinode.h	/^	__be16		di_projid_lo;	\/* lower part of owner's project id *\/$/;"	m	struct:xfs_dinode
di_projid_lo	xfs_inode.h	/^	__uint16_t	di_projid_lo;	\/* lower part of owner's project id *\/$/;"	m	struct:xfs_icdinode
di_size	xfs_dinode.h	/^	__be64		di_size;	\/* number of bytes in file *\/$/;"	m	struct:xfs_dinode
di_size	xfs_inode.h	/^	xfs_fsize_t	di_size;	\/* number of bytes in file *\/$/;"	m	struct:xfs_icdinode
di_uid	xfs_dinode.h	/^	__be32		di_uid;		\/* owner's user id *\/$/;"	m	struct:xfs_dinode
di_uid	xfs_inode.h	/^	__uint32_t	di_uid;		\/* owner's user id *\/$/;"	m	struct:xfs_icdinode
di_version	xfs_dinode.h	/^	__u8		di_version;	\/* inode version *\/$/;"	m	struct:xfs_dinode
di_version	xfs_inode.h	/^	__int8_t	di_version;	\/* inode version *\/$/;"	m	struct:xfs_icdinode
dioattr	xfs_fs.h	/^struct dioattr {$/;"	s
dirblocksize	xfs_fs.h	/^	__u32		dirblocksize;	\/* directory block size, bytes	*\/$/;"	m	struct:xfs_fsop_geom
dirblocksize	xfs_fs.h	/^	__u32		dirblocksize;	\/* directory block size, bytes	*\/$/;"	m	struct:xfs_fsop_geom_v1
dirblocksize	xfs_ioctl32.h	/^	__u32		dirblocksize;	\/* directory block size, bytes	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
dirty	xfs_da_btree.h	/^	short		dirty;		\/* data needs to be copied back *\/$/;"	m	struct:xfs_dabuf
disk_blkno	xfs_da_btree.h	/^	xfs_daddr_t	disk_blkno;	\/* on-disk blkno (in BBs) of buffer *\/$/;"	m	struct:xfs_da_state_blk
do_div	xfs_linux.h	265;"	d
do_div	xfs_linux.h	266;"	d
do_mod	xfs_linux.h	267;"	d
do_readlink	xfs_ioctl.c	/^do_readlink($/;"	f
dp	xfs_attr.h	/^	struct xfs_inode		*dp;		\/* inode *\/$/;"	m	struct:xfs_attr_list_context	typeref:struct:xfs_attr_list_context::xfs_inode
dp	xfs_da_btree.h	/^	struct xfs_inode *dp;		\/* directory inode to manipulate *\/$/;"	m	struct:xfs_da_args	typeref:struct:xfs_da_args::xfs_inode
dq_flags	xfs_dquot.h	/^	uint		 dq_flags;	\/* various flags (XFS_DQ_*) *\/$/;"	m	struct:xfs_dquot
dqa_grpdquots	xfs_qm.h	/^	xfs_dqtrx_t	dqa_grpdquots[XFS_QM_TRANS_MAXDQS];$/;"	m	struct:xfs_dquot_acct
dqa_usrdquots	xfs_qm.h	/^	xfs_dqtrx_t	dqa_usrdquots[XFS_QM_TRANS_MAXDQS];$/;"	m	struct:xfs_dquot_acct
dup_cursor	xfs_btree.h	/^	struct xfs_btree_cur *(*dup_cursor)(struct xfs_btree_cur *);$/;"	m	struct:xfs_btree_ops	typeref:struct:xfs_btree_ops::dup_cursor
dupcnt	xfs_attr.h	/^	int				dupcnt;		\/* count dup hashvals seen *\/$/;"	m	struct:xfs_attr_list_context
efd_efi_id	xfs_extfree_item.h	/^	__uint64_t		efd_efi_id;	\/* id of corresponding efi *\/$/;"	m	struct:xfs_efd_log_format
efd_efi_id	xfs_extfree_item.h	/^	__uint64_t		efd_efi_id;	\/* id of corresponding efi *\/$/;"	m	struct:xfs_efd_log_format_32
efd_efi_id	xfs_extfree_item.h	/^	__uint64_t		efd_efi_id;	\/* id of corresponding efi *\/$/;"	m	struct:xfs_efd_log_format_64
efd_efip	xfs_extfree_item.h	/^	xfs_efi_log_item_t	*efd_efip;$/;"	m	struct:xfs_efd_log_item
efd_extents	xfs_extfree_item.h	/^	xfs_extent_32_t		efd_extents[1];	\/* array of extents freed *\/$/;"	m	struct:xfs_efd_log_format_32
efd_extents	xfs_extfree_item.h	/^	xfs_extent_64_t		efd_extents[1];	\/* array of extents freed *\/$/;"	m	struct:xfs_efd_log_format_64
efd_extents	xfs_extfree_item.h	/^	xfs_extent_t		efd_extents[1];	\/* array of extents freed *\/$/;"	m	struct:xfs_efd_log_format
efd_format	xfs_extfree_item.h	/^	xfs_efd_log_format_t	efd_format;$/;"	m	struct:xfs_efd_log_item
efd_item	xfs_extfree_item.h	/^	xfs_log_item_t		efd_item;$/;"	m	struct:xfs_efd_log_item
efd_next_extent	xfs_extfree_item.h	/^	uint			efd_next_extent;$/;"	m	struct:xfs_efd_log_item
efd_nextents	xfs_extfree_item.h	/^	__uint32_t		efd_nextents;	\/* # of extents freed *\/$/;"	m	struct:xfs_efd_log_format
efd_nextents	xfs_extfree_item.h	/^	__uint32_t		efd_nextents;	\/* # of extents freed *\/$/;"	m	struct:xfs_efd_log_format_32
efd_nextents	xfs_extfree_item.h	/^	__uint32_t		efd_nextents;	\/* # of extents freed *\/$/;"	m	struct:xfs_efd_log_format_64
efd_size	xfs_extfree_item.h	/^	__uint16_t		efd_size;	\/* size of this item *\/$/;"	m	struct:xfs_efd_log_format
efd_size	xfs_extfree_item.h	/^	__uint16_t		efd_size;	\/* size of this item *\/$/;"	m	struct:xfs_efd_log_format_32
efd_size	xfs_extfree_item.h	/^	__uint16_t		efd_size;	\/* size of this item *\/$/;"	m	struct:xfs_efd_log_format_64
efd_type	xfs_extfree_item.h	/^	__uint16_t		efd_type;	\/* efd log item type *\/$/;"	m	struct:xfs_efd_log_format
efd_type	xfs_extfree_item.h	/^	__uint16_t		efd_type;	\/* efd log item type *\/$/;"	m	struct:xfs_efd_log_format_32
efd_type	xfs_extfree_item.h	/^	__uint16_t		efd_type;	\/* efd log item type *\/$/;"	m	struct:xfs_efd_log_format_64
efi_extents	xfs_extfree_item.h	/^	xfs_extent_32_t		efi_extents[1];	\/* array of extents to free *\/$/;"	m	struct:xfs_efi_log_format_32
efi_extents	xfs_extfree_item.h	/^	xfs_extent_64_t		efi_extents[1];	\/* array of extents to free *\/$/;"	m	struct:xfs_efi_log_format_64
efi_extents	xfs_extfree_item.h	/^	xfs_extent_t		efi_extents[1];	\/* array of extents to free *\/$/;"	m	struct:xfs_efi_log_format
efi_flags	xfs_extfree_item.h	/^	unsigned long		efi_flags;	\/* misc flags *\/$/;"	m	struct:xfs_efi_log_item
efi_format	xfs_extfree_item.h	/^	xfs_efi_log_format_t	efi_format;$/;"	m	struct:xfs_efi_log_item
efi_id	xfs_extfree_item.h	/^	__uint64_t		efi_id;		\/* efi identifier *\/$/;"	m	struct:xfs_efi_log_format
efi_id	xfs_extfree_item.h	/^	__uint64_t		efi_id;		\/* efi identifier *\/$/;"	m	struct:xfs_efi_log_format_32
efi_id	xfs_extfree_item.h	/^	__uint64_t		efi_id;		\/* efi identifier *\/$/;"	m	struct:xfs_efi_log_format_64
efi_item	xfs_extfree_item.h	/^	xfs_log_item_t		efi_item;$/;"	m	struct:xfs_efi_log_item
efi_next_extent	xfs_extfree_item.h	/^	atomic_t		efi_next_extent;$/;"	m	struct:xfs_efi_log_item
efi_nextents	xfs_extfree_item.h	/^	__uint32_t		efi_nextents;	\/* # extents to free *\/$/;"	m	struct:xfs_efi_log_format
efi_nextents	xfs_extfree_item.h	/^	__uint32_t		efi_nextents;	\/* # extents to free *\/$/;"	m	struct:xfs_efi_log_format_32
efi_nextents	xfs_extfree_item.h	/^	__uint32_t		efi_nextents;	\/* # extents to free *\/$/;"	m	struct:xfs_efi_log_format_64
efi_size	xfs_extfree_item.h	/^	__uint16_t		efi_size;	\/* size of this item *\/$/;"	m	struct:xfs_efi_log_format
efi_size	xfs_extfree_item.h	/^	__uint16_t		efi_size;	\/* size of this item *\/$/;"	m	struct:xfs_efi_log_format_32
efi_size	xfs_extfree_item.h	/^	__uint16_t		efi_size;	\/* size of this item *\/$/;"	m	struct:xfs_efi_log_format_64
efi_type	xfs_extfree_item.h	/^	__uint16_t		efi_type;	\/* efi log item type *\/$/;"	m	struct:xfs_efi_log_format
efi_type	xfs_extfree_item.h	/^	__uint16_t		efi_type;	\/* efi log item type *\/$/;"	m	struct:xfs_efi_log_format_32
efi_type	xfs_extfree_item.h	/^	__uint16_t		efi_type;	\/* efi log item type *\/$/;"	m	struct:xfs_efi_log_format_64
entno	xfs_attr_sf.h	/^	__uint8_t	entno;		\/* entry number in original list *\/$/;"	m	struct:xfs_attr_sf_sort
entries	xfs_attr_leaf.h	/^	xfs_attr_leaf_entry_t	entries[1];	\/* sorted on key, not name *\/$/;"	m	struct:xfs_attr_leafblock
ents	xfs_dir2_format.h	/^	xfs_dir2_leaf_entry_t	ents[];		\/* entries *\/$/;"	m	struct:xfs_dir2_leaf
eof	xfs_bmap.h	/^	char			eof;	\/* set if allocating past last extent *\/$/;"	m	struct:xfs_bmalloca
er_extbuf	xfs_inode.h	/^	xfs_bmbt_rec_host_t *er_extbuf;	\/* block of extent records *\/$/;"	m	struct:xfs_ext_irec
er_extcount	xfs_inode.h	/^	xfs_extnum_t	er_extcount;	\/* number of extents in page\/block *\/$/;"	m	struct:xfs_ext_irec
er_extoff	xfs_inode.h	/^	xfs_extnum_t	er_extoff;	\/* extent offset in file *\/$/;"	m	struct:xfs_ext_irec
error_level	xfs_sysctl.h	/^	xfs_sysctl_val_t error_level;	\/* Degree of reporting for problems  *\/$/;"	m	struct:xfs_param
errtag	xfs_fs.h	/^	__s32		errtag;$/;"	m	struct:xfs_error_injection
exit_xfs_fs	xfs_super.c	/^exit_xfs_fs(void)$/;"	f
exit_xfs_fs	xfs_super.c	/^module_exit(exit_xfs_fs);$/;"	v
ext_len	xfs_extfree_item.h	/^	__uint32_t	ext_len;$/;"	m	struct:xfs_extent_32
ext_len	xfs_extfree_item.h	/^	__uint32_t	ext_len;$/;"	m	struct:xfs_extent_64
ext_len	xfs_extfree_item.h	/^	xfs_extlen_t	ext_len;$/;"	m	struct:xfs_extent
ext_pad	xfs_extfree_item.h	/^	__uint32_t	ext_pad;$/;"	m	struct:xfs_extent_64
ext_start	xfs_extfree_item.h	/^	__uint64_t	ext_start;$/;"	m	struct:xfs_extent_32
ext_start	xfs_extfree_item.h	/^	__uint64_t	ext_start;$/;"	m	struct:xfs_extent_64
ext_start	xfs_extfree_item.h	/^	xfs_dfsbno_t	ext_start;$/;"	m	struct:xfs_extent
extraafter	xfs_da_btree.h	/^	unsigned char		extraafter;	\/* T\/F: extrablk is after new *\/$/;"	m	struct:xfs_da_state
extrablk	xfs_da_btree.h	/^	xfs_da_state_blk_t	extrablk;	\/* for double-splits on leaves *\/$/;"	m	struct:xfs_da_state
extravalid	xfs_da_btree.h	/^	unsigned char		extravalid;	\/* T\/F: extrablk is in use *\/$/;"	m	struct:xfs_da_state
extsize	xfs_fs.h	/^	__u32		extsize;	\/* new realtime extent size, fsblocks *\/$/;"	m	struct:xfs_growfs_rt
extsize	xfs_ioctl32.h	/^	__u32		extsize;	\/* new realtime extent size, fsblocks *\/$/;"	m	struct:compat_xfs_growfs_rt
fd	xfs_fs.h	/^	__s32		fd;$/;"	m	struct:xfs_error_injection
fd	xfs_fs.h	/^	__u32		fd;		\/* fd for FD_TO_HANDLE		*\/$/;"	m	struct:xfs_fsop_handlereq
fd	xfs_ioctl32.h	/^	__u32		fd;		\/* fd for FD_TO_HANDLE		*\/$/;"	m	struct:compat_xfs_fsop_handlereq
fid_gen	xfs_fs.h	/^	__u32	fid_gen;		\/* generation number	*\/$/;"	m	struct:xfs_fid
fid_ino	xfs_fs.h	/^	__u64	fid_ino;		\/* 64 bits inode number *\/$/;"	m	struct:xfs_fid
fid_len	xfs_fs.h	/^	__u16	fid_len;		\/* length of remainder	*\/$/;"	m	struct:xfs_fid
fid_pad	xfs_fs.h	/^	__u16	fid_pad;$/;"	m	struct:xfs_fid
firstblock	xfs_alloc.h	/^	xfs_fsblock_t	firstblock;	\/* io first block allocated *\/$/;"	m	struct:xfs_alloc_arg
firstblock	xfs_bmap.h	/^	xfs_fsblock_t		*firstblock; \/* i\/o first block allocated *\/$/;"	m	struct:xfs_bmalloca
firstblock	xfs_btree.h	/^			xfs_fsblock_t	firstblock;	\/* 1st blk allocated *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon13
firstblock	xfs_da_btree.h	/^	xfs_fsblock_t	*firstblock;	\/* ptr to firstblock for bmap calls *\/$/;"	m	struct:xfs_da_args
firstdb	xfs_dir2_format.h	/^	__be32			firstdb;	\/* db of first entry *\/$/;"	m	struct:xfs_dir2_free_hdr
firstu	xfs_attr.h	/^	int				firstu;		\/* first used byte in buffer *\/$/;"	m	struct:xfs_attr_list_context
firstused	xfs_attr_leaf.h	/^	__be16	firstused;		\/* first used byte in name area *\/$/;"	m	struct:xfs_attr_leaf_hdr
flag	xfs_super.c	/^	int	flag;$/;"	m	struct:proc_xfs_info	file:
flags	xfs_ag.h	/^	unsigned int	flags;$/;"	m	struct:xfs_busy_extent
flags	xfs_attr.h	/^	int				flags;		\/* from VOP call *\/$/;"	m	struct:xfs_attr_list_context
flags	xfs_attr_leaf.h	/^	__u8	flags;			\/* LOCAL\/ROOT\/SECURE\/INCOMPLETE flag *\/$/;"	m	struct:xfs_attr_leaf_entry
flags	xfs_attr_sf.h	/^		__uint8_t flags;	\/* flags bits (see xfs_attr_leaf.h) *\/$/;"	m	struct:xfs_attr_shortform::xfs_attr_sf_entry
flags	xfs_attr_sf.h	/^	__uint8_t	flags;		\/* flags bits (see xfs_attr_leaf.h) *\/$/;"	m	struct:xfs_attr_sf_sort
flags	xfs_btree.h	/^			char		flags;		\/* flags *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon13
flags	xfs_da_btree.h	/^	int		flags;		\/* argument flags (eg: ATTR_NOCREATE) *\/$/;"	m	struct:xfs_da_args
flags	xfs_fs.h	/^	__u32				flags;	\/* which namespace to use *\/$/;"	m	struct:xfs_fsop_attrlist_handlereq
flags	xfs_fs.h	/^	__u32		flags;		\/* superblock version flags	*\/$/;"	m	struct:xfs_fsop_geom
flags	xfs_fs.h	/^	__u32		flags;		\/* superblock version flags	*\/$/;"	m	struct:xfs_fsop_geom_v1
flags	xfs_ioctl32.h	/^	__u32				flags;	\/* which namespace to use *\/$/;"	m	struct:compat_xfs_fsop_attrlist_handlereq
flags	xfs_ioctl32.h	/^	__u32		flags;		\/* superblock version flags	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
flist	xfs_bmap.h	/^	struct xfs_bmap_free	*flist;	\/* bmap freelist *\/$/;"	m	struct:xfs_bmalloca	typeref:struct:xfs_bmalloca::xfs_bmap_free
flist	xfs_btree.h	/^			struct xfs_bmap_free *flist;	\/* list to free after *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon13	typeref:struct:xfs_btree_cur::__anon11::__anon13::xfs_bmap_free
flist	xfs_da_btree.h	/^	struct xfs_bmap_free *flist;	\/* ptr to freelist for bmap_finish *\/$/;"	m	struct:xfs_da_args	typeref:struct:xfs_da_args::xfs_bmap_free
forksize	xfs_btree.h	/^			short		forksize;	\/* fork's inode space *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon13
forw	xfs_da_btree.h	/^	__be32		forw;			\/* previous block in list *\/$/;"	m	struct:xfs_da_blkinfo
free_block	xfs_btree.h	/^	int	(*free_block)(struct xfs_btree_cur *cur, struct xfs_buf *bp);$/;"	m	struct:xfs_btree_ops
free_func	xfs_mru_cache.h	/^	xfs_mru_cache_free_func_t free_func; \/* Function pointer for freeing. *\/$/;"	m	struct:xfs_mru_cache
freedata	xfs_fs.h	/^	__u64	freedata;	\/* free data section blocks *\/$/;"	m	struct:xfs_fsop_counts
freeino	xfs_fs.h	/^	__u64	freeino;	\/* free inodes *\/$/;"	m	struct:xfs_fsop_counts
freemap	xfs_attr_leaf.h	/^	xfs_attr_leaf_map_t freemap[XFS_ATTR_LEAF_MAPSIZE];$/;"	m	struct:xfs_attr_leaf_hdr
freertx	xfs_fs.h	/^	__u64	freertx;	\/* free rt extents *\/$/;"	m	struct:xfs_fsop_counts
freetag	xfs_dir2_format.h	/^	__be16			freetag;	\/* XFS_DIR2_DATA_FREE_TAG *\/$/;"	m	struct:xfs_dir2_data_unused
fsbno	xfs_alloc.h	/^	xfs_fsblock_t	fsbno;		\/* file system block number *\/$/;"	m	struct:xfs_alloc_arg
fsd_dmevmask	xfs_fs.h	/^	__u32		fsd_dmevmask;	\/* corresponds to di_dmevmask *\/$/;"	m	struct:fsdmidata
fsd_dmstate	xfs_fs.h	/^	__u16		fsd_dmstate;	\/* corresponds to di_dmstate  *\/$/;"	m	struct:fsdmidata
fsd_padding	xfs_fs.h	/^	__u16		fsd_padding;$/;"	m	struct:fsdmidata
fsdmidata	xfs_fs.h	/^struct fsdmidata {$/;"	s
fstrm_item	xfs_filestream.c	/^typedef struct fstrm_item$/;"	s	file:
fstrm_item_t	xfs_filestream.c	/^} fstrm_item_t;$/;"	t	typeref:struct:fstrm_item	file:
fstrm_timer	xfs_sysctl.h	/^	xfs_sysctl_val_t fstrm_timer;	\/* Filestream dir-AG assoc'n timeout. *\/$/;"	m	struct:xfs_param
fsx_extsize	xfs_fs.h	/^	__u32		fsx_extsize;	\/* extsize field value (get\/set)*\/$/;"	m	struct:fsxattr
fsx_nextents	xfs_fs.h	/^	__u32		fsx_nextents;	\/* nextents field value (get)	*\/$/;"	m	struct:fsxattr
fsx_pad	xfs_fs.h	/^	unsigned char	fsx_pad[12];$/;"	m	struct:fsxattr
fsx_projid	xfs_fs.h	/^	__u32		fsx_projid;	\/* project identifier (get\/set) *\/$/;"	m	struct:fsxattr
fsx_xflags	xfs_fs.h	/^	__u32		fsx_xflags;	\/* xflags field value (get\/set) *\/$/;"	m	struct:fsxattr
fsxattr	xfs_fs.h	/^struct fsxattr {$/;"	s
gen	xfs_export.h	/^	u32 gen;$/;"	m	struct:xfs_fid64
get_dmaxrecs	xfs_btree.h	/^	int	(*get_dmaxrecs)(struct xfs_btree_cur *cur, int level);$/;"	m	struct:xfs_btree_ops
get_maxrecs	xfs_btree.h	/^	int	(*get_maxrecs)(struct xfs_btree_cur *cur, int level);$/;"	m	struct:xfs_btree_ops
get_minrecs	xfs_btree.h	/^	int	(*get_minrecs)(struct xfs_btree_cur *cur, int level);$/;"	m	struct:xfs_btree_ops
getbmap	xfs_fs.h	/^struct getbmap {$/;"	s
getbmapx	xfs_fs.h	/^struct getbmapx {$/;"	s
got	xfs_bmap.h	/^	struct xfs_bmbt_irec	got;	\/* extent after, or delayed *\/$/;"	m	struct:xfs_bmalloca	typeref:struct:xfs_bmalloca::xfs_bmbt_irec
grant	xfs_log_priv.h	/^	atomic64_t		grant;$/;"	m	struct:xlog_grant_head
grp_count	xfs_mru_cache.h	/^	unsigned int		grp_count; \/* Number of discrete groups.    *\/$/;"	m	struct:xfs_mru_cache
grp_time	xfs_mru_cache.h	/^	unsigned int		grp_time;  \/* Time period spanned by grps.  *\/$/;"	m	struct:xfs_mru_cache
h_chksum	xfs_log_priv.h	/^	__be32	  h_chksum;	\/* may not be used; non-zero if used	:  4 *\/$/;"	m	struct:xlog_rec_header
h_cycle	xfs_log_priv.h	/^	__be32	  h_cycle;	\/* write cycle of log			:  4 *\/$/;"	m	struct:xlog_rec_header
h_cycle_data	xfs_log_priv.h	/^	__be32	  h_cycle_data[XLOG_HEADER_CYCLE_SIZE \/ BBSIZE];$/;"	m	struct:xlog_rec_header
h_fmt	xfs_log_priv.h	/^	__be32    h_fmt;        \/* format of log record                 :  4 *\/$/;"	m	struct:xlog_rec_header
h_fs_uuid	xfs_log_priv.h	/^	uuid_t	  h_fs_uuid;    \/* uuid of FS                           : 16 *\/$/;"	m	struct:xlog_rec_header
h_len	xfs_log_priv.h	/^	__be32	  h_len;	\/* len in bytes; should be 64-bit aligned: 4 *\/$/;"	m	struct:xlog_rec_header
h_lsn	xfs_log_priv.h	/^	__be64	  h_lsn;	\/* lsn of this LR			:  8 *\/$/;"	m	struct:xlog_rec_header
h_magicno	xfs_log_priv.h	/^	__be32	  h_magicno;	\/* log record (LR) identifier		:  4 *\/$/;"	m	struct:xlog_rec_header
h_num_logops	xfs_log_priv.h	/^	__be32	  h_num_logops;	\/* number of log operations in this LR	:  4 *\/$/;"	m	struct:xlog_rec_header
h_prev_block	xfs_log_priv.h	/^	__be32	  h_prev_block; \/* block number to previous LR		:  4 *\/$/;"	m	struct:xlog_rec_header
h_size	xfs_log_priv.h	/^	__be32	  h_size;	\/* iclog size				:  4 *\/$/;"	m	struct:xlog_rec_header
h_tail_lsn	xfs_log_priv.h	/^	__be64	  h_tail_lsn;	\/* lsn of 1st LR w\/ buffers not committed: 8 *\/$/;"	m	struct:xlog_rec_header
h_version	xfs_log_priv.h	/^	__be32	  h_version;	\/* LR version				:  4 *\/$/;"	m	struct:xlog_rec_header
ha_fid	xfs_fs.h	/^	xfs_fid_t	ha_fid;		\/* file system specific file ID	 *\/$/;"	m	struct:xfs_handle
ha_fsid	xfs_fs.h	415;"	d
ha_u	xfs_fs.h	/^	} ha_u;$/;"	m	struct:xfs_handle	typeref:union:xfs_handle::__anon22
hash	xfs_attr_sf.h	/^	xfs_dahash_t	hash;		\/* this entry's hash value *\/$/;"	m	struct:xfs_attr_sf_sort
hashname	xfs_da_btree.h	/^	xfs_dahash_t	(*hashname)(struct xfs_name *);$/;"	m	struct:xfs_nameops
hashval	xfs_attr.h	/^	__u32	hashval;	\/* hash value of next entry to add *\/$/;"	m	struct:attrlist_cursor_kern
hashval	xfs_attr_leaf.h	/^	__be32	hashval;		\/* hash value of name *\/$/;"	m	struct:xfs_attr_leaf_entry
hashval	xfs_da_btree.h	/^		__be32	hashval;	\/* hash value for this descendant *\/$/;"	m	struct:xfs_da_intnode::xfs_da_node_entry
hashval	xfs_da_btree.h	/^	xfs_dahash_t	hashval;	\/* hash value of name *\/$/;"	m	struct:xfs_da_args
hashval	xfs_da_btree.h	/^	xfs_dahash_t	hashval;	\/* last hash value in block *\/$/;"	m	struct:xfs_da_state_blk
hashval	xfs_dir2_format.h	/^	__be32			hashval;	\/* hash value of name *\/$/;"	m	struct:xfs_dir2_leaf_entry
hdr	xfs_attr_leaf.h	/^	xfs_attr_leaf_hdr_t	hdr;	\/* constant-structure header block *\/$/;"	m	struct:xfs_attr_leafblock
hdr	xfs_attr_sf.h	/^	} hdr;$/;"	m	struct:xfs_attr_shortform	typeref:struct:xfs_attr_shortform::xfs_attr_sf_hdr
hdr	xfs_da_btree.h	/^	} hdr;$/;"	m	struct:xfs_da_intnode	typeref:struct:xfs_da_intnode::xfs_da_node_hdr
hdr	xfs_dir2_format.h	/^	xfs_dir2_free_hdr_t	hdr;		\/* block header *\/$/;"	m	struct:xfs_dir2_free
hdr	xfs_dir2_format.h	/^	xfs_dir2_leaf_hdr_t	hdr;		\/* leaf header *\/$/;"	m	struct:xfs_dir2_leaf
hic_header	xfs_log_priv.h	/^	xlog_rec_header_t	hic_header;$/;"	m	union:xlog_in_core2
hic_sector	xfs_log_priv.h	/^	char			hic_sector[XLOG_HEADER_SIZE];$/;"	m	union:xlog_in_core2
hic_xheader	xfs_log_priv.h	/^	xlog_rec_ext_header_t	hic_xheader;$/;"	m	union:xlog_in_core2
holes	xfs_attr_leaf.h	/^	__u8	holes;			\/* != 0 if blk needs compaction *\/$/;"	m	struct:xfs_attr_leaf_hdr
howmany	xfs_linux.h	157;"	d
howmany_64	xfs_linux.h	/^static inline __uint64_t howmany_64(__uint64_t x, __uint32_t y)$/;"	f
hreq	xfs_fs.h	/^	struct xfs_fsop_handlereq	hreq;	\/* handle information	*\/$/;"	m	struct:xfs_fsop_setdm_handlereq	typeref:struct:xfs_fsop_setdm_handlereq::xfs_fsop_handlereq
hreq	xfs_fs.h	/^	struct xfs_fsop_handlereq	hreq; \/* handle interface structure *\/$/;"	m	struct:xfs_fsop_attrlist_handlereq	typeref:struct:xfs_fsop_attrlist_handlereq::xfs_fsop_handlereq
hreq	xfs_fs.h	/^	struct xfs_fsop_handlereq	hreq; \/* handle interface structure *\/$/;"	m	struct:xfs_fsop_attrmulti_handlereq	typeref:struct:xfs_fsop_attrmulti_handlereq::xfs_fsop_handlereq
hreq	xfs_ioctl32.h	/^	struct compat_xfs_fsop_handlereq hreq;	\/* handle information   *\/$/;"	m	struct:compat_xfs_fsop_setdm_handlereq	typeref:struct:compat_xfs_fsop_setdm_handlereq::compat_xfs_fsop_handlereq
hreq	xfs_ioctl32.h	/^	struct compat_xfs_fsop_handlereq hreq; \/* handle interface structure *\/$/;"	m	struct:compat_xfs_fsop_attrlist_handlereq	typeref:struct:compat_xfs_fsop_attrlist_handlereq::compat_xfs_fsop_handlereq
hreq	xfs_ioctl32.h	/^	struct compat_xfs_fsop_handlereq hreq; \/* handle interface structure *\/$/;"	m	struct:compat_xfs_fsop_attrmulti_handlereq	typeref:struct:compat_xfs_fsop_attrmulti_handlereq::compat_xfs_fsop_handlereq
i	xfs_btree.h	/^		xfs_inobt_rec_incore_t	i;$/;"	m	union:xfs_btree_cur::__anon10
i	xfs_dir2_format.h	/^typedef	struct { __uint8_t i[8]; } xfs_dir2_ino8_t;$/;"	m	struct:__anon17
i	xfs_dir2_format.h	/^typedef struct { __uint8_t i[2]; } __arch_pack xfs_dir2_sf_off_t;$/;"	m	struct:__anon16
i	xfs_dir2_format.h	/^typedef struct { __uint8_t i[4]; } xfs_dir2_ino4_t;$/;"	m	struct:__anon18
i4	xfs_dir2_format.h	/^	xfs_dir2_ino4_t	i4;$/;"	m	union:__anon19
i8	xfs_dir2_format.h	/^	xfs_dir2_ino8_t	i8;$/;"	m	union:__anon19
i8count	xfs_dir2_format.h	/^	__uint8_t		i8count;	\/* count of 8-byte inode #s *\/$/;"	m	struct:xfs_dir2_sf_hdr
i_addr	xfs_log.h	/^	void		*i_addr;	\/* beginning address of region *\/$/;"	m	struct:xfs_log_iovec
i_afp	xfs_inode.h	/^	xfs_ifork_t		*i_afp;		\/* attribute fork pointer *\/$/;"	m	struct:xfs_inode
i_d	xfs_inode.h	/^	xfs_icdinode_t		i_d;		\/* most of ondisk inode *\/$/;"	m	struct:xfs_inode
i_delayed_blks	xfs_inode.h	/^	unsigned int		i_delayed_blks;	\/* count of delay alloc blks *\/$/;"	m	struct:xfs_inode
i_df	xfs_inode.h	/^	xfs_ifork_t		i_df;		\/* data fork *\/$/;"	m	struct:xfs_inode
i_flags	xfs_inode.h	/^	unsigned long		i_flags;	\/* see defined flags below *\/$/;"	m	struct:xfs_inode
i_flags_lock	xfs_inode.h	/^	spinlock_t		i_flags_lock;	\/* inode i_flags lock *\/$/;"	m	struct:xfs_inode
i_gdquot	xfs_inode.h	/^	struct xfs_dquot	*i_gdquot;	\/* group dquot *\/$/;"	m	struct:xfs_inode	typeref:struct:xfs_inode::xfs_dquot
i_imap	xfs_inode.h	/^	struct xfs_imap		i_imap;		\/* location for xfs_imap() *\/$/;"	m	struct:xfs_inode	typeref:struct:xfs_inode::xfs_imap
i_ino	xfs_inode.h	/^	xfs_ino_t		i_ino;		\/* inode number (agno\/agino)*\/$/;"	m	struct:xfs_inode
i_iolock	xfs_inode.h	/^	mrlock_t		i_iolock;	\/* inode IO lock *\/$/;"	m	struct:xfs_inode
i_itemp	xfs_inode.h	/^	struct xfs_inode_log_item *i_itemp;	\/* logging information *\/$/;"	m	struct:xfs_inode	typeref:struct:xfs_inode::xfs_inode_log_item
i_len	xfs_log.h	/^	int		i_len;		\/* length in bytes of region *\/$/;"	m	struct:xfs_log_iovec
i_lock	xfs_inode.h	/^	mrlock_t		i_lock;		\/* inode lock *\/$/;"	m	struct:xfs_inode
i_mount	xfs_inode.h	/^	struct xfs_mount	*i_mount;	\/* fs mount struct ptr *\/$/;"	m	struct:xfs_inode	typeref:struct:xfs_inode::xfs_mount
i_pincount	xfs_inode.h	/^	atomic_t		i_pincount;	\/* inode pin count *\/$/;"	m	struct:xfs_inode
i_type	xfs_log.h	/^	uint		i_type;		\/* type of region *\/$/;"	m	struct:xfs_log_iovec
i_udquot	xfs_inode.h	/^	struct xfs_dquot	*i_udquot;	\/* user dquot *\/$/;"	m	struct:xfs_inode	typeref:struct:xfs_inode::xfs_dquot
i_update_core	xfs_inode.h	/^	unsigned char		i_update_core;	\/* timestamps\/size is dirty *\/$/;"	m	struct:xfs_inode
i_vnode	xfs_inode.h	/^	struct inode		i_vnode;	\/* embedded VFS inode *\/$/;"	m	struct:xfs_inode	typeref:struct:xfs_inode::inode
ic_bp	xfs_log_priv.h	/^	struct xfs_buf		*ic_bp;$/;"	m	struct:xlog_in_core	typeref:struct:xlog_in_core::xfs_buf
ic_bwritecnt	xfs_log_priv.h	/^	int			ic_bwritecnt;$/;"	m	struct:xlog_in_core
ic_callback	xfs_log_priv.h	/^	xfs_log_callback_t	*ic_callback;$/;"	m	struct:xlog_in_core
ic_callback_tail	xfs_log_priv.h	/^	xfs_log_callback_t	**ic_callback_tail;$/;"	m	struct:xlog_in_core
ic_data	xfs_log_priv.h	/^	xlog_in_core_2_t	*ic_data;$/;"	m	struct:xlog_in_core
ic_datap	xfs_log_priv.h	/^	char			*ic_datap;	\/* pointer to iclog data *\/$/;"	m	struct:xlog_in_core
ic_force_wait	xfs_log_priv.h	/^	wait_queue_head_t	ic_force_wait;$/;"	m	struct:xlog_in_core
ic_header	xfs_log_priv.h	370;"	d
ic_log	xfs_log_priv.h	/^	struct log		*ic_log;$/;"	m	struct:xlog_in_core	typeref:struct:xlog_in_core::log
ic_next	xfs_log_priv.h	/^	struct xlog_in_core	*ic_next;$/;"	m	struct:xlog_in_core	typeref:struct:xlog_in_core::xlog_in_core
ic_offset	xfs_log_priv.h	/^	int			ic_offset;$/;"	m	struct:xlog_in_core
ic_prev	xfs_log_priv.h	/^	struct xlog_in_core	*ic_prev;$/;"	m	struct:xlog_in_core	typeref:struct:xlog_in_core::xlog_in_core
ic_size	xfs_log_priv.h	/^	int			ic_size;$/;"	m	struct:xlog_in_core
ic_state	xfs_log_priv.h	/^	unsigned short		ic_state;$/;"	m	struct:xlog_in_core
ic_write_wait	xfs_log_priv.h	/^	wait_queue_head_t	ic_write_wait;$/;"	m	struct:xlog_in_core
icount	xfs_fs.h	/^	__s32		icount;		\/* count of entries in buffer	*\/$/;"	m	struct:xfs_fsop_bulkreq
icount	xfs_ioctl32.h	/^	__s32		icount;		\/* count of entries in buffer	*\/$/;"	m	struct:compat_xfs_fsop_bulkreq
icsb_fdblocks	xfs_mount.h	/^	uint64_t	icsb_fdblocks;$/;"	m	struct:xfs_icsb_cnts
icsb_flags	xfs_mount.h	/^	unsigned long	icsb_flags;$/;"	m	struct:xfs_icsb_cnts
icsb_icount	xfs_mount.h	/^	uint64_t	icsb_icount;$/;"	m	struct:xfs_icsb_cnts
icsb_ifree	xfs_mount.h	/^	uint64_t	icsb_ifree;$/;"	m	struct:xfs_icsb_cnts
idx	xfs_bmap.h	/^	xfs_extnum_t		idx;	\/* current extent index *\/$/;"	m	struct:xfs_bmalloca
if_broot	xfs_inode.h	/^	struct xfs_btree_block	*if_broot;	\/* file's incore btree root *\/$/;"	m	struct:xfs_ifork	typeref:struct:xfs_ifork::xfs_btree_block
if_broot_bytes	xfs_inode.h	/^	short			if_broot_bytes;	\/* bytes allocated for root *\/$/;"	m	struct:xfs_ifork
if_bytes	xfs_inode.h	/^	int			if_bytes;	\/* bytes in if_u1 *\/$/;"	m	struct:xfs_ifork
if_data	xfs_inode.h	/^		char		*if_data;	\/* inline file data *\/$/;"	m	union:xfs_ifork::__anon23
if_ext_irec	xfs_inode.h	/^		xfs_ext_irec_t	*if_ext_irec;	\/* irec map file exts *\/$/;"	m	union:xfs_ifork::__anon23
if_extents	xfs_inode.h	/^		xfs_bmbt_rec_host_t *if_extents;\/* linear map file exts *\/$/;"	m	union:xfs_ifork::__anon23
if_flags	xfs_inode.h	/^	unsigned char		if_flags;	\/* per-fork flags *\/$/;"	m	struct:xfs_ifork
if_inline_data	xfs_inode.h	/^		char		if_inline_data[XFS_INLINE_DATA];$/;"	m	union:xfs_ifork::__anon24
if_inline_ext	xfs_inode.h	/^		xfs_bmbt_rec_host_t if_inline_ext[XFS_INLINE_EXTS];$/;"	m	union:xfs_ifork::__anon24
if_rdev	xfs_inode.h	/^		xfs_dev_t	if_rdev;	\/* dev number if special *\/$/;"	m	union:xfs_ifork::__anon24
if_real_bytes	xfs_inode.h	/^	int			if_real_bytes;	\/* bytes allocated in if_u1 *\/$/;"	m	struct:xfs_ifork
if_u1	xfs_inode.h	/^	} if_u1;$/;"	m	struct:xfs_ifork	typeref:union:xfs_ifork::__anon23
if_u2	xfs_inode.h	/^	} if_u2;$/;"	m	struct:xfs_ifork	typeref:union:xfs_ifork::__anon24
if_uuid	xfs_inode.h	/^		uuid_t		if_uuid;	\/* mount point value *\/$/;"	m	union:xfs_ifork::__anon24
ihandle	xfs_fs.h	/^	void		__user *ihandle;\/* user supplied handle		*\/$/;"	m	struct:xfs_fsop_handlereq
ihandle	xfs_ioctl32.h	/^	compat_uptr_t	ihandle;	\/* user supplied handle		*\/$/;"	m	struct:compat_xfs_fsop_handlereq
ihandlen	xfs_fs.h	/^	__u32		ihandlen;	\/* user supplied length		*\/$/;"	m	struct:xfs_fsop_handlereq
ihandlen	xfs_ioctl32.h	/^	__u32		ihandlen;	\/* user supplied length		*\/$/;"	m	struct:compat_xfs_fsop_handlereq
ilf_asize	xfs_inode_item.h	/^	__uint16_t		ilf_asize;	\/* size of attr d\/ext\/root *\/$/;"	m	struct:xfs_inode_log_format
ilf_asize	xfs_inode_item.h	/^	__uint16_t		ilf_asize;	\/* size of attr d\/ext\/root *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_asize	xfs_inode_item.h	/^	__uint16_t		ilf_asize;	\/* size of attr d\/ext\/root *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_blkno	xfs_inode_item.h	/^	__int64_t		ilf_blkno;	\/* blkno of inode buffer *\/$/;"	m	struct:xfs_inode_log_format
ilf_blkno	xfs_inode_item.h	/^	__int64_t		ilf_blkno;	\/* blkno of inode buffer *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_blkno	xfs_inode_item.h	/^	__int64_t		ilf_blkno;	\/* blkno of inode buffer *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_boffset	xfs_inode_item.h	/^	__int32_t		ilf_boffset;	\/* off of inode in buffer *\/$/;"	m	struct:xfs_inode_log_format
ilf_boffset	xfs_inode_item.h	/^	__int32_t		ilf_boffset;	\/* off of inode in buffer *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_boffset	xfs_inode_item.h	/^	__int32_t		ilf_boffset;	\/* off of inode in buffer *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_dsize	xfs_inode_item.h	/^	__uint16_t		ilf_dsize;	\/* size of data\/ext\/root *\/$/;"	m	struct:xfs_inode_log_format
ilf_dsize	xfs_inode_item.h	/^	__uint16_t		ilf_dsize;	\/* size of data\/ext\/root *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_dsize	xfs_inode_item.h	/^	__uint16_t		ilf_dsize;	\/* size of data\/ext\/root *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_fields	xfs_inode_item.h	/^	__uint32_t		ilf_fields;	\/* flags for fields logged *\/$/;"	m	struct:xfs_inode_log_format
ilf_fields	xfs_inode_item.h	/^	__uint32_t		ilf_fields;	\/* flags for fields logged *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_fields	xfs_inode_item.h	/^	__uint32_t		ilf_fields;	\/* flags for fields logged *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_ino	xfs_inode_item.h	/^	__uint64_t		ilf_ino;	\/* inode number *\/$/;"	m	struct:xfs_inode_log_format
ilf_ino	xfs_inode_item.h	/^	__uint64_t		ilf_ino;	\/* inode number *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_ino	xfs_inode_item.h	/^	__uint64_t		ilf_ino;	\/* inode number *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_len	xfs_inode_item.h	/^	__int32_t		ilf_len;	\/* len of inode buffer *\/$/;"	m	struct:xfs_inode_log_format
ilf_len	xfs_inode_item.h	/^	__int32_t		ilf_len;	\/* len of inode buffer *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_len	xfs_inode_item.h	/^	__int32_t		ilf_len;	\/* len of inode buffer *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_pad	xfs_inode_item.h	/^	__uint32_t		ilf_pad;	\/* pad for 64 bit boundary *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_size	xfs_inode_item.h	/^	__uint16_t		ilf_size;	\/* size of this item *\/$/;"	m	struct:xfs_inode_log_format
ilf_size	xfs_inode_item.h	/^	__uint16_t		ilf_size;	\/* size of this item *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_size	xfs_inode_item.h	/^	__uint16_t		ilf_size;	\/* size of this item *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_type	xfs_inode_item.h	/^	__uint16_t		ilf_type;	\/* inode log item type *\/$/;"	m	struct:xfs_inode_log_format
ilf_type	xfs_inode_item.h	/^	__uint16_t		ilf_type;	\/* inode log item type *\/$/;"	m	struct:xfs_inode_log_format_32
ilf_type	xfs_inode_item.h	/^	__uint16_t		ilf_type;	\/* inode log item type *\/$/;"	m	struct:xfs_inode_log_format_64
ilf_u	xfs_inode_item.h	/^	} ilf_u;$/;"	m	struct:xfs_inode_log_format	typeref:union:xfs_inode_log_format::__anon25
ilf_u	xfs_inode_item.h	/^	} ilf_u;$/;"	m	struct:xfs_inode_log_format_32	typeref:union:xfs_inode_log_format_32::__anon26
ilf_u	xfs_inode_item.h	/^	} ilf_u;$/;"	m	struct:xfs_inode_log_format_64	typeref:union:xfs_inode_log_format_64::__anon27
ilfu_rdev	xfs_inode_item.h	/^		__uint32_t	ilfu_rdev;	\/* rdev value for dev inode*\/$/;"	m	union:xfs_inode_log_format::__anon25
ilfu_rdev	xfs_inode_item.h	/^		__uint32_t	ilfu_rdev;	\/* rdev value for dev inode*\/$/;"	m	union:xfs_inode_log_format_32::__anon26
ilfu_rdev	xfs_inode_item.h	/^		__uint32_t	ilfu_rdev;	\/* rdev value for dev inode*\/$/;"	m	union:xfs_inode_log_format_64::__anon27
ilfu_uuid	xfs_inode_item.h	/^		uuid_t		ilfu_uuid;	\/* mount point value *\/$/;"	m	union:xfs_inode_log_format::__anon25
ilfu_uuid	xfs_inode_item.h	/^		uuid_t		ilfu_uuid;	\/* mount point value *\/$/;"	m	union:xfs_inode_log_format_32::__anon26
ilfu_uuid	xfs_inode_item.h	/^		uuid_t		ilfu_uuid;	\/* mount point value *\/$/;"	m	union:xfs_inode_log_format_64::__anon27
ili_aextents_buf	xfs_inode_item.h	/^	struct xfs_bmbt_rec	*ili_aextents_buf; \/* array of logged$/;"	m	struct:xfs_inode_log_item	typeref:struct:xfs_inode_log_item::xfs_bmbt_rec
ili_extents_buf	xfs_inode_item.h	/^	struct xfs_bmbt_rec	*ili_extents_buf;  \/* array of logged$/;"	m	struct:xfs_inode_log_item	typeref:struct:xfs_inode_log_item::xfs_bmbt_rec
ili_flush_lsn	xfs_inode_item.h	/^	xfs_lsn_t		ili_flush_lsn;	   \/* lsn at last flush *\/$/;"	m	struct:xfs_inode_log_item
ili_format	xfs_inode_item.h	/^	xfs_inode_log_format_t	ili_format;	   \/* logged structure *\/$/;"	m	struct:xfs_inode_log_item
ili_inode	xfs_inode_item.h	/^	struct xfs_inode	*ili_inode;	   \/* inode ptr *\/$/;"	m	struct:xfs_inode_log_item	typeref:struct:xfs_inode_log_item::xfs_inode
ili_item	xfs_inode_item.h	/^	xfs_log_item_t		ili_item;	   \/* common portion *\/$/;"	m	struct:xfs_inode_log_item
ili_last_fields	xfs_inode_item.h	/^	unsigned int		ili_last_fields;   \/* fields when flushed *\/$/;"	m	struct:xfs_inode_log_item
ili_last_lsn	xfs_inode_item.h	/^	xfs_lsn_t		ili_last_lsn;	   \/* lsn at last transaction *\/$/;"	m	struct:xfs_inode_log_item
ili_lock_flags	xfs_inode_item.h	/^	unsigned short		ili_lock_flags;	   \/* lock flags *\/$/;"	m	struct:xfs_inode_log_item
ili_logged	xfs_inode_item.h	/^	unsigned short		ili_logged;	   \/* flushed logged data *\/$/;"	m	struct:xfs_inode_log_item
ili_orig_root	xfs_inode_item.h	/^	char			*ili_orig_root;$/;"	m	struct:xfs_inode_log_item
ili_root_size	xfs_inode_item.h	/^	int			ili_root_size;$/;"	m	struct:xfs_inode_log_item
im_blkno	xfs_inode.h	/^	xfs_daddr_t	im_blkno;	\/* starting BB of inode chunk *\/$/;"	m	struct:xfs_imap
im_boffset	xfs_inode.h	/^	ushort		im_boffset;	\/* inode offset in block in bytes *\/$/;"	m	struct:xfs_imap
im_len	xfs_inode.h	/^	ushort		im_len;		\/* length in BBs of inode chunk *\/$/;"	m	struct:xfs_imap
imaxpct	xfs_fs.h	/^	__u32		imaxpct;	\/* max allowed inode space(%)	*\/$/;"	m	struct:xfs_fsop_geom
imaxpct	xfs_fs.h	/^	__u32		imaxpct;	\/* max allowed inode space(%)	*\/$/;"	m	struct:xfs_fsop_geom_v1
imaxpct	xfs_fs.h	/^	__u32		imaxpct;	\/* new inode space percentage limit *\/$/;"	m	struct:xfs_growfs_data
imaxpct	xfs_ioctl32.h	/^	__u32		imaxpct;	\/* max allowed inode space(%)	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
imaxpct	xfs_ioctl32.h	/^	__u32		imaxpct;	\/* new inode space percentage limit *\/$/;"	m	struct:compat_xfs_growfs_data
index	xfs_attr.h	/^	int				index;		\/* index into output buffer *\/$/;"	m	struct:xfs_attr_list_context
index	xfs_da_btree.h	/^	int		index;		\/* index of attr of interest in blk *\/$/;"	m	struct:xfs_da_args
index	xfs_da_btree.h	/^	int		index;		\/* relevant index into block *\/$/;"	m	struct:xfs_da_state_blk
index2	xfs_da_btree.h	/^	int		index2;		\/* index of 2nd attr in blk *\/$/;"	m	struct:xfs_da_args
info	xfs_attr_leaf.h	/^	xfs_da_blkinfo_t info;		\/* block type, links, etc. *\/$/;"	m	struct:xfs_attr_leaf_hdr
info	xfs_da_btree.h	/^		xfs_da_blkinfo_t info;	\/* block type, links, etc. *\/$/;"	m	struct:xfs_da_intnode::xfs_da_node_hdr
info	xfs_dir2_format.h	/^	xfs_da_blkinfo_t	info;		\/* header for da routines *\/$/;"	m	struct:xfs_dir2_leaf_hdr
inherit_noatim	xfs_sysctl.h	/^	xfs_sysctl_val_t inherit_noatim;\/* Inherit the "noatime" inode flag. *\/$/;"	m	struct:xfs_param
inherit_nodfrg	xfs_sysctl.h	/^	xfs_sysctl_val_t inherit_nodfrg;\/* Inherit the "nodefrag" inode flag. *\/$/;"	m	struct:xfs_param
inherit_nodump	xfs_sysctl.h	/^	xfs_sysctl_val_t inherit_nodump;\/* Inherit the "nodump" inode flag. *\/$/;"	m	struct:xfs_param
inherit_nosym	xfs_sysctl.h	/^	xfs_sysctl_val_t inherit_nosym;	\/* Inherit the "nosymlinks" flag. *\/$/;"	m	struct:xfs_param
inherit_sync	xfs_sysctl.h	/^	xfs_sysctl_val_t inherit_sync;	\/* Inherit the "sync" inode flag. *\/$/;"	m	struct:xfs_param
init_key_from_rec	xfs_btree.h	/^	void	(*init_key_from_rec)(union xfs_btree_key *key,$/;"	m	struct:xfs_btree_ops
init_ptr_from_cur	xfs_btree.h	/^	void	(*init_ptr_from_cur)(struct xfs_btree_cur *cur,$/;"	m	struct:xfs_btree_ops
init_rec_from_cur	xfs_btree.h	/^	void	(*init_rec_from_cur)(struct xfs_btree_cur *cur,$/;"	m	struct:xfs_btree_ops
init_rec_from_key	xfs_btree.h	/^	void	(*init_rec_from_key)(union xfs_btree_key *key,$/;"	m	struct:xfs_btree_ops
init_xfs_fs	xfs_super.c	/^init_xfs_fs(void)$/;"	f
init_xfs_fs	xfs_super.c	/^module_init(init_xfs_fs);$/;"	v
initted	xfs_attr.h	/^	__u8	initted;	\/* T\/F: cursor has been initialized *\/$/;"	m	struct:attrlist_cursor_kern
inleaf	xfs_da_btree.h	/^	unsigned char		inleaf;		\/* insert into 1->lf, 0->splf *\/$/;"	m	struct:xfs_da_state
ino	xfs_export.h	/^	u64 ino;$/;"	m	struct:xfs_fid64
inobt	xfs_btree.h	/^	xfs_inobt_key_t		inobt;$/;"	m	union:xfs_btree_key
inobt	xfs_btree.h	/^	xfs_inobt_rec_t		inobt;$/;"	m	union:xfs_btree_rec
inodesize	xfs_fs.h	/^	__u32		inodesize;	\/* inode size in bytes		*\/$/;"	m	struct:xfs_fsop_geom
inodesize	xfs_fs.h	/^	__u32		inodesize;	\/* inode size in bytes		*\/$/;"	m	struct:xfs_fsop_geom_v1
inodesize	xfs_ioctl32.h	/^	__u32		inodesize;	\/* inode size in bytes		*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
inst_t	xfs_types.h	/^typedef __uint32_t		inst_t;		\/* an instruction *\/$/;"	t
inumber	xfs_da_btree.h	/^	xfs_ino_t	inumber;	\/* input\/output inode number *\/$/;"	m	struct:xfs_da_args
inumber	xfs_dir2_format.h	/^	__be64			inumber;	\/* inode number *\/$/;"	m	struct:xfs_dir2_data_entry
inumbers_fmt_pf	xfs_itable.h	/^typedef int (*inumbers_fmt_pf)($/;"	t
io_buffer_head	xfs_aops.h	/^	struct buffer_head	*io_buffer_head;\/* buffer linked list head *\/$/;"	m	struct:xfs_ioend	typeref:struct:xfs_ioend::buffer_head
io_buffer_tail	xfs_aops.h	/^	struct buffer_head	*io_buffer_tail;\/* buffer linked list tail *\/$/;"	m	struct:xfs_ioend	typeref:struct:xfs_ioend::buffer_head
io_error	xfs_aops.h	/^	int			io_error;	\/* I\/O error code *\/$/;"	m	struct:xfs_ioend
io_inode	xfs_aops.h	/^	struct inode		*io_inode;	\/* file being written to *\/$/;"	m	struct:xfs_ioend	typeref:struct:xfs_ioend::inode
io_iocb	xfs_aops.h	/^	struct kiocb		*io_iocb;$/;"	m	struct:xfs_ioend	typeref:struct:xfs_ioend::kiocb
io_isasync	xfs_aops.h	/^	unsigned int		io_isasync : 1;	\/* needs aio_complete *\/$/;"	m	struct:xfs_ioend
io_list	xfs_aops.h	/^	struct xfs_ioend	*io_list;	\/* next ioend in chain *\/$/;"	m	struct:xfs_ioend	typeref:struct:xfs_ioend::xfs_ioend
io_offset	xfs_aops.h	/^	xfs_off_t		io_offset;	\/* offset in the file *\/$/;"	m	struct:xfs_ioend
io_remaining	xfs_aops.h	/^	atomic_t		io_remaining;	\/* hold count *\/$/;"	m	struct:xfs_ioend
io_result	xfs_aops.h	/^	int			io_result;$/;"	m	struct:xfs_ioend
io_size	xfs_aops.h	/^	size_t			io_size;	\/* size of the extent *\/$/;"	m	struct:xfs_ioend
io_type	xfs_aops.h	/^	unsigned int		io_type;	\/* delalloc \/ unwritten *\/$/;"	m	struct:xfs_ioend
io_work	xfs_aops.h	/^	struct work_struct	io_work;	\/* xfsdatad work queue *\/$/;"	m	struct:xfs_ioend	typeref:struct:xfs_ioend::work_struct
iop_committed	xfs_trans.h	/^	xfs_lsn_t (*iop_committed)(xfs_log_item_t *, xfs_lsn_t);$/;"	m	struct:xfs_item_ops
iop_committing	xfs_trans.h	/^	void (*iop_committing)(xfs_log_item_t *, xfs_lsn_t);$/;"	m	struct:xfs_item_ops
iop_format	xfs_trans.h	/^	void (*iop_format)(xfs_log_item_t *, struct xfs_log_iovec *);$/;"	m	struct:xfs_item_ops
iop_pin	xfs_trans.h	/^	void (*iop_pin)(xfs_log_item_t *);$/;"	m	struct:xfs_item_ops
iop_push	xfs_trans.h	/^	void (*iop_push)(xfs_log_item_t *);$/;"	m	struct:xfs_item_ops
iop_pushbuf	xfs_trans.h	/^	bool (*iop_pushbuf)(xfs_log_item_t *);$/;"	m	struct:xfs_item_ops
iop_size	xfs_trans.h	/^	uint (*iop_size)(xfs_log_item_t *);$/;"	m	struct:xfs_item_ops
iop_trylock	xfs_trans.h	/^	uint (*iop_trylock)(xfs_log_item_t *);$/;"	m	struct:xfs_item_ops
iop_unlock	xfs_trans.h	/^	void (*iop_unlock)(xfs_log_item_t *);$/;"	m	struct:xfs_item_ops
iop_unpin	xfs_trans.h	/^	void (*iop_unpin)(xfs_log_item_t *, int remove);$/;"	m	struct:xfs_item_ops
ip	xfs_bmap.h	/^	struct xfs_inode	*ip;	\/* incore inode pointer *\/$/;"	m	struct:xfs_bmalloca	typeref:struct:xfs_bmalloca::xfs_inode
ip	xfs_btree.h	/^			struct xfs_inode *ip;	\/* pointer to our inode *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon13	typeref:struct:xfs_btree_cur::__anon11::__anon13::xfs_inode
ip	xfs_filestream.c	/^	xfs_inode_t	*ip;	\/* inode self-pointer. *\/$/;"	m	struct:fstrm_item	file:
ir_free	xfs_ialloc_btree.h	/^	__be64		ir_free;	\/* free inode mask *\/$/;"	m	struct:xfs_inobt_rec
ir_free	xfs_ialloc_btree.h	/^	xfs_inofree_t	ir_free;	\/* free inode mask *\/$/;"	m	struct:xfs_inobt_rec_incore
ir_freecount	xfs_ialloc_btree.h	/^	__be32		ir_freecount;	\/* count of free inodes (set bits) *\/$/;"	m	struct:xfs_inobt_rec
ir_freecount	xfs_ialloc_btree.h	/^	__int32_t	ir_freecount;	\/* count of free inodes (set bits) *\/$/;"	m	struct:xfs_inobt_rec_incore
ir_startino	xfs_ialloc_btree.h	/^	__be32		ir_startino;	\/* starting inode number *\/$/;"	m	struct:xfs_inobt_key
ir_startino	xfs_ialloc_btree.h	/^	__be32		ir_startino;	\/* starting inode number *\/$/;"	m	struct:xfs_inobt_rec
ir_startino	xfs_ialloc_btree.h	/^	xfs_agino_t	ir_startino;	\/* starting inode number *\/$/;"	m	struct:xfs_inobt_rec_incore
irix_sgid_inherit	xfs_linux.h	106;"	d
irix_symlink_mode	xfs_linux.h	107;"	d
isfl	xfs_alloc.h	/^	char		isfl;		\/* set if is freelist blocks - !acctg *\/$/;"	m	struct:xfs_alloc_arg
isint	xfs_fs.h	/^	__u32		isint;		\/* 1 if new log is internal *\/$/;"	m	struct:xfs_growfs_log
isnulldstartblock	xfs_bmap_btree.h	/^static inline int isnulldstartblock(xfs_dfsbno_t x)$/;"	f
isnullstartblock	xfs_bmap_btree.h	/^static inline int isnullstartblock(xfs_fsblock_t x)$/;"	f
item	xfs_trans_priv.h	/^	struct xfs_log_item	*item;$/;"	m	struct:xfs_ail_cursor	typeref:struct:xfs_ail_cursor::xfs_log_item
item_zone	xfs_filestream.c	/^static kmem_zone_t *item_zone;$/;"	v	file:
key	xfs_mru_cache.c	/^	unsigned long	key;$/;"	m	struct:xfs_mru_cache_elem	file:
key_diff	xfs_btree.h	/^	__int64_t (*key_diff)(struct xfs_btree_cur *cur,$/;"	m	struct:xfs_btree_ops
key_len	xfs_btree.h	/^	size_t	key_len;$/;"	m	struct:xfs_btree_ops
keys_inorder	xfs_btree.h	/^	int	(*keys_inorder)(struct xfs_btree_cur *cur,$/;"	m	struct:xfs_btree_ops
kmem_alloc	kmem.c	/^kmem_alloc(size_t size, unsigned int __nocast flags)$/;"	f
kmem_flags_convert	kmem.h	/^kmem_flags_convert(unsigned int __nocast flags)$/;"	f
kmem_free	kmem.c	/^kmem_free(const void *ptr)$/;"	f
kmem_free_large	kmem.h	/^static inline void kmem_free_large(void *ptr)$/;"	f
kmem_realloc	kmem.c	/^kmem_realloc(const void *ptr, size_t newsize, size_t oldsize,$/;"	f
kmem_zalloc	kmem.c	/^kmem_zalloc(size_t size, unsigned int __nocast flags)$/;"	f
kmem_zalloc_greedy	kmem.c	/^kmem_zalloc_greedy(size_t *size, size_t minsize, size_t maxsize)$/;"	f
kmem_zalloc_large	kmem.h	/^static inline void *kmem_zalloc_large(size_t size)$/;"	f
kmem_zone	kmem.h	81;"	d
kmem_zone_alloc	kmem.c	/^kmem_zone_alloc(kmem_zone_t *zone, unsigned int __nocast flags)$/;"	f
kmem_zone_destroy	kmem.h	/^kmem_zone_destroy(kmem_zone_t *zone)$/;"	f
kmem_zone_free	kmem.h	/^kmem_zone_free(kmem_zone_t *zone, void *ptr)$/;"	f
kmem_zone_init	kmem.h	/^kmem_zone_init(int size, char *zone_name)$/;"	f
kmem_zone_init_flags	kmem.h	/^kmem_zone_init_flags(int size, char *zone_name, unsigned long flags,$/;"	f
kmem_zone_t	kmem.h	82;"	d
kmem_zone_zalloc	kmem.c	/^kmem_zone_zalloc(kmem_zone_t *zone, unsigned int __nocast flags)$/;"	f
l	xfs_btree.h	/^		} l;			\/* long form pointers *\/$/;"	m	union:xfs_btree_block::__anon7	typeref:struct:xfs_btree_block::__anon7::__anon9
l	xfs_btree.h	/^	__be64			l;	\/* long form ptr *\/$/;"	m	union:xfs_btree_ptr
l0	xfs_bmap_btree.h	/^	__be64			l0, l1;$/;"	m	struct:xfs_bmbt_rec
l0	xfs_bmap_btree.h	/^	__uint64_t		l0, l1;$/;"	m	struct:xfs_bmbt_rec_host
l1	xfs_bmap_btree.h	/^	__be64			l0, l1;$/;"	m	struct:xfs_bmbt_rec
l1	xfs_bmap_btree.h	/^	__uint64_t		l0, l1;$/;"	m	struct:xfs_bmbt_rec_host
l_ailp	xfs_log_priv.h	/^	struct xfs_ail		*l_ailp;	\/* AIL log is working with *\/$/;"	m	struct:log	typeref:struct:log::xfs_ail
l_buf_cancel_table	xfs_log_priv.h	/^	struct list_head	*l_buf_cancel_table;$/;"	m	struct:log	typeref:struct:log::list_head
l_cilp	xfs_log_priv.h	/^	struct xfs_cil		*l_cilp;	\/* CIL log is working with *\/$/;"	m	struct:log	typeref:struct:log::xfs_cil
l_covered_state	xfs_log_priv.h	/^	int			l_covered_state;\/* state of "covering disk$/;"	m	struct:log
l_curr_block	xfs_log_priv.h	/^	int			l_curr_block;   \/* current logical log block *\/$/;"	m	struct:log
l_curr_cycle	xfs_log_priv.h	/^	int			l_curr_cycle;   \/* Cycle number of log writes *\/$/;"	m	struct:log
l_flags	xfs_log_priv.h	/^	uint			l_flags;$/;"	m	struct:log
l_iclog	xfs_log_priv.h	/^	xlog_in_core_t		*l_iclog;       \/* head log queue	*\/$/;"	m	struct:log
l_iclog_bak	xfs_log_priv.h	/^	char			*l_iclog_bak[XLOG_MAX_ICLOGS];$/;"	m	struct:log
l_iclog_bufs	xfs_log_priv.h	/^	int			l_iclog_bufs;	\/* number of iclog buffers *\/$/;"	m	struct:log
l_iclog_heads	xfs_log_priv.h	/^	int			l_iclog_heads;  \/* # of iclog header sectors *\/$/;"	m	struct:log
l_iclog_hsize	xfs_log_priv.h	/^	int			l_iclog_hsize;  \/* size of iclog header *\/$/;"	m	struct:log
l_iclog_size	xfs_log_priv.h	/^	int			l_iclog_size;	\/* size of log in bytes *\/$/;"	m	struct:log
l_iclog_size_log	xfs_log_priv.h	/^	int			l_iclog_size_log; \/* log power size of log *\/$/;"	m	struct:log
l_icloglock	xfs_log_priv.h	/^	spinlock_t		l_icloglock;    \/* grab to change iclog state *\/$/;"	m	struct:log
l_len	xfs_fs.h	/^	__s64		l_len;		\/* len == 0 means until end of file *\/$/;"	m	struct:xfs_flock64
l_len	xfs_ioctl32.h	/^	__s64		l_len __attribute__((packed));$/;"	m	struct:compat_xfs_flock64
l_logBBsize	xfs_log_priv.h	/^	int			l_logBBsize;    \/* size of log in BB chunks *\/$/;"	m	struct:log
l_logBBstart	xfs_log_priv.h	/^	xfs_daddr_t		l_logBBstart;   \/* start block of log *\/$/;"	m	struct:log
l_logsize	xfs_log_priv.h	/^	int			l_logsize;      \/* size of log in bytes *\/$/;"	m	struct:log
l_mp	xfs_log_priv.h	/^	struct xfs_mount	*l_mp;	        \/* mount point *\/$/;"	m	struct:log	typeref:struct:log::xfs_mount
l_pad	xfs_fs.h	/^	__s32		l_pad[4];	\/* reserve area			    *\/$/;"	m	struct:xfs_flock64
l_pad	xfs_ioctl32.h	/^	__s32		l_pad[4];	\/* reserve area *\/$/;"	m	struct:compat_xfs_flock64
l_pid	xfs_fs.h	/^	__u32		l_pid;$/;"	m	struct:xfs_flock64
l_pid	xfs_ioctl32.h	/^	__u32		l_pid;$/;"	m	struct:compat_xfs_flock64
l_prev_block	xfs_log_priv.h	/^	int			l_prev_block;   \/* previous logical log block *\/$/;"	m	struct:log
l_prev_cycle	xfs_log_priv.h	/^	int			l_prev_cycle;   \/* Cycle number before last$/;"	m	struct:log
l_quotaoffs_flag	xfs_log_priv.h	/^	uint			l_quotaoffs_flag; \/* XFS_DQ_*, for QUOTAOFFs *\/$/;"	m	struct:log
l_reserve_head	xfs_log_priv.h	/^	struct xlog_grant_head	l_reserve_head;$/;"	m	struct:log	typeref:struct:log::xlog_grant_head
l_sectBBsize	xfs_log_priv.h	/^	uint			l_sectBBsize;   \/* sector size in BBs (2^n) *\/$/;"	m	struct:log
l_start	xfs_fs.h	/^	__s64		l_start;$/;"	m	struct:xfs_flock64
l_start	xfs_ioctl32.h	/^	__s64		l_start	__attribute__((packed));$/;"	m	struct:compat_xfs_flock64
l_sysid	xfs_fs.h	/^	__s32		l_sysid;$/;"	m	struct:xfs_flock64
l_sysid	xfs_ioctl32.h	/^	__s32		l_sysid;$/;"	m	struct:compat_xfs_flock64
l_targ	xfs_log_priv.h	/^	struct xfs_buftarg	*l_targ;        \/* buftarg of log *\/$/;"	m	struct:log	typeref:struct:log::xfs_buftarg
l_type	xfs_fs.h	/^	__s16		l_type;$/;"	m	struct:xfs_flock64
l_type	xfs_ioctl32.h	/^	__s16		l_type;$/;"	m	struct:compat_xfs_flock64
l_whence	xfs_fs.h	/^	__s16		l_whence;$/;"	m	struct:xfs_flock64
l_whence	xfs_ioctl32.h	/^	__s16		l_whence;$/;"	m	struct:compat_xfs_flock64
l_write_head	xfs_log_priv.h	/^	struct xlog_grant_head	l_write_head;$/;"	m	struct:log	typeref:struct:log::xlog_grant_head
l_xbuf	xfs_log_priv.h	/^	struct xfs_buf		*l_xbuf;        \/* extra buffer for log$/;"	m	struct:log	typeref:struct:log::xfs_buf
lastip	xfs_fs.h	/^	__u64		__user *lastip;	\/* last inode # pointer		*\/$/;"	m	struct:xfs_fsop_bulkreq
lastip	xfs_ioctl32.h	/^	compat_uptr_t	lastip;		\/* last inode # pointer		*\/$/;"	m	struct:compat_xfs_fsop_bulkreq
len	xfs_alloc.h	/^	xfs_extlen_t	len;		\/* output: actual size of extent *\/$/;"	m	struct:xfs_alloc_arg
len	xfs_types.h	/^	int			len;$/;"	m	struct:xfs_name
length	xfs_ag.h	/^	xfs_extlen_t	length;$/;"	m	struct:xfs_busy_extent
length	xfs_bmap.h	/^	xfs_extlen_t		length;	\/* i\/o length asked\/allocated *\/$/;"	m	struct:xfs_bmalloca
length	xfs_dir2_format.h	/^	__be16			length;		\/* length of freespace *\/$/;"	m	struct:xfs_dir2_data_free
length	xfs_dir2_format.h	/^	__be16			length;		\/* total free length *\/$/;"	m	struct:xfs_dir2_data_unused
level	xfs_da_btree.h	/^		__be16	level;		\/* level above leaves (leaf == 0) *\/$/;"	m	struct:xfs_da_intnode::xfs_da_node_hdr
li_ail	xfs_trans.h	/^	struct list_head		li_ail;		\/* AIL pointers *\/$/;"	m	struct:xfs_log_item	typeref:struct:xfs_log_item::list_head
li_ailp	xfs_trans.h	/^	struct xfs_ail			*li_ailp;	\/* ptr to AIL *\/$/;"	m	struct:xfs_log_item	typeref:struct:xfs_log_item::xfs_ail
li_bio_list	xfs_trans.h	/^	struct xfs_log_item		*li_bio_list;	\/* buffer item list *\/$/;"	m	struct:xfs_log_item	typeref:struct:xfs_log_item::xfs_log_item
li_cb	xfs_trans.h	/^	void				(*li_cb)(struct xfs_buf *,$/;"	m	struct:xfs_log_item
li_cil	xfs_trans.h	/^	struct list_head		li_cil;		\/* CIL pointers *\/$/;"	m	struct:xfs_log_item	typeref:struct:xfs_log_item::list_head
li_desc	xfs_trans.h	/^	struct xfs_log_item_desc	*li_desc;	\/* ptr to current desc*\/$/;"	m	struct:xfs_log_item	typeref:struct:xfs_log_item::xfs_log_item_desc
li_flags	xfs_trans.h	/^	uint				li_flags;	\/* misc flags *\/$/;"	m	struct:xfs_log_item
li_lsn	xfs_trans.h	/^	xfs_lsn_t			li_lsn;		\/* last on-disk lsn *\/$/;"	m	struct:xfs_log_item
li_lv	xfs_trans.h	/^	struct xfs_log_vec		*li_lv;		\/* active log vector *\/$/;"	m	struct:xfs_log_item	typeref:struct:xfs_log_item::xfs_log_vec
li_mountp	xfs_trans.h	/^	struct xfs_mount		*li_mountp;	\/* ptr to fs mount *\/$/;"	m	struct:xfs_log_item	typeref:struct:xfs_log_item::xfs_mount
li_ops	xfs_trans.h	/^	const struct xfs_item_ops	*li_ops;	\/* function list *\/$/;"	m	struct:xfs_log_item	typeref:struct:xfs_log_item::xfs_item_ops
li_seq	xfs_trans.h	/^	xfs_lsn_t			li_seq;		\/* CIL commit seq *\/$/;"	m	struct:xfs_log_item
li_type	xfs_trans.h	/^	uint				li_type;	\/* item type *\/$/;"	m	struct:xfs_log_item
lid_flags	xfs_trans.h	/^	unsigned char		lid_flags;$/;"	m	struct:xfs_log_item_desc
lid_item	xfs_trans.h	/^	struct xfs_log_item	*lid_item;$/;"	m	struct:xfs_log_item_desc	typeref:struct:xfs_log_item_desc::xfs_log_item
lid_trans	xfs_trans.h	/^	struct list_head	lid_trans;$/;"	m	struct:xfs_log_item_desc	typeref:struct:xfs_log_item_desc::list_head
list	xfs_ag.h	/^	struct list_head list;		\/* transaction busy extent list *\/$/;"	m	struct:xfs_busy_extent	typeref:struct:xfs_busy_extent::list_head
list	xfs_attr_sf.h	/^	} list[1];			\/* variable sized array *\/$/;"	m	struct:xfs_attr_shortform	typeref:struct:xfs_attr_shortform::xfs_attr_sf_entry
list	xfs_trans_priv.h	/^	struct list_head	list;$/;"	m	struct:xfs_ail_cursor	typeref:struct:xfs_ail_cursor::list_head
list_node	xfs_mru_cache.c	/^	struct list_head list_node;$/;"	m	struct:xfs_mru_cache_elem	typeref:struct:xfs_mru_cache_elem::list_head	file:
list_one_attr	xfs_xattr.c	/^list_one_attr(const char *name, const size_t len, void *data,$/;"	f	file:
lists	xfs_mru_cache.h	/^	struct list_head	*lists;    \/* Array of lists, one per grp.  *\/$/;"	m	struct:xfs_mru_cache	typeref:struct:xfs_mru_cache::list_head
lock	xfs_mru_cache.h	/^	spinlock_t		lock;      \/* Lock to protect this struct.  *\/$/;"	m	struct:xfs_mru_cache
log	xfs_log_priv.h	/^typedef struct log {$/;"	s
log_cb	xfs_log_priv.h	/^	xfs_log_callback_t	log_cb;		\/* completion callback hook. *\/$/;"	m	struct:xfs_cil_ctx
logblocks	xfs_fs.h	/^	__u32		logblocks;	\/* fsblocks in the log		*\/$/;"	m	struct:xfs_fsop_geom
logblocks	xfs_fs.h	/^	__u32		logblocks;	\/* fsblocks in the log		*\/$/;"	m	struct:xfs_fsop_geom_v1
logblocks	xfs_ioctl32.h	/^	__u32		logblocks;	\/* fsblocks in the log		*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
logflags	xfs_bmap.h	/^	int			logflags;\/* flags for transaction logging *\/$/;"	m	struct:xfs_bmalloca
logsectsize	xfs_fs.h	/^	__u32		logsectsize;	\/* log sector size, bytes	*\/$/;"	m	struct:xfs_fsop_geom
logsectsize	xfs_fs.h	/^	__u32		logsectsize;	\/* log sector size, bytes	*\/$/;"	m	struct:xfs_fsop_geom_v1
logsectsize	xfs_ioctl32.h	/^	__u32		logsectsize;	\/* log sector size, bytes	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
logstart	xfs_fs.h	/^	__u64		logstart;	\/* starting fsblock of the log	*\/$/;"	m	struct:xfs_fsop_geom
logstart	xfs_fs.h	/^	__u64		logstart;	\/* starting fsblock of the log	*\/$/;"	m	struct:xfs_fsop_geom_v1
logstart	xfs_ioctl32.h	/^	__u64		logstart;	\/* starting fsblock of the log	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
logsunit	xfs_fs.h	/^	__u32		logsunit;	\/* log stripe unit, bytes *\/$/;"	m	struct:xfs_fsop_geom
lru_grp	xfs_mru_cache.h	/^	unsigned int		lru_grp;   \/* Group containing time zero.   *\/$/;"	m	struct:xfs_mru_cache
lv_buf	xfs_log.h	/^	char			*lv_buf;	\/* formatted buffer *\/$/;"	m	struct:xfs_log_vec
lv_buf_len	xfs_log.h	/^	int			lv_buf_len;	\/* size of formatted buffer *\/$/;"	m	struct:xfs_log_vec
lv_chain	xfs_log_priv.h	/^	struct xfs_log_vec	*lv_chain;	\/* logvecs being pushed *\/$/;"	m	struct:xfs_cil_ctx	typeref:struct:xfs_cil_ctx::xfs_log_vec
lv_iovecp	xfs_log.h	/^	struct xfs_log_iovec	*lv_iovecp;	\/* iovec array *\/$/;"	m	struct:xfs_log_vec	typeref:struct:xfs_log_vec::xfs_log_iovec
lv_item	xfs_log.h	/^	struct xfs_log_item	*lv_item;	\/* owner *\/$/;"	m	struct:xfs_log_vec	typeref:struct:xfs_log_vec::xfs_log_item
lv_next	xfs_log.h	/^	struct xfs_log_vec	*lv_next;	\/* next lv in build list *\/$/;"	m	struct:xfs_log_vec	typeref:struct:xfs_log_vec::xfs_log_vec
lv_niovecs	xfs_log.h	/^	int			lv_niovecs;	\/* number of iovecs in lv *\/$/;"	m	struct:xfs_log_vec
m_active_trans	xfs_mount.h	/^	atomic_t		m_active_trans;	\/* number trans frozen *\/$/;"	m	struct:xfs_mount
m_ag_maxlevels	xfs_mount.h	/^	uint			m_ag_maxlevels;	\/* XFS_AG_MAXLEVELS *\/$/;"	m	struct:xfs_mount
m_agfrotor	xfs_mount.h	/^	xfs_agnumber_t		m_agfrotor;	\/* last ag where space found *\/$/;"	m	struct:xfs_mount
m_agino_log	xfs_mount.h	/^	__uint8_t		m_agino_log;	\/* #bits for agino in inum *\/$/;"	m	struct:xfs_mount
m_agirotor	xfs_mount.h	/^	xfs_agnumber_t		m_agirotor;	\/* last ag dir inode alloced *\/$/;"	m	struct:xfs_mount
m_agirotor_lock	xfs_mount.h	/^	spinlock_t		m_agirotor_lock;\/* .. and lock protecting it *\/$/;"	m	struct:xfs_mount
m_agno_log	xfs_mount.h	/^	__uint8_t		m_agno_log;	\/* log #ag's *\/$/;"	m	struct:xfs_mount
m_ail	xfs_mount.h	/^	struct xfs_ail		*m_ail;		\/* fs active log item list *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_ail
m_alloc_mnr	xfs_mount.h	/^	uint			m_alloc_mnr[2];	\/* min alloc btree records *\/$/;"	m	struct:xfs_mount
m_alloc_mxr	xfs_mount.h	/^	uint			m_alloc_mxr[2];	\/* max alloc btree records *\/$/;"	m	struct:xfs_mount
m_attr_magicpct	xfs_mount.h	/^	int			m_attr_magicpct;\/* 37% of the blocksize *\/$/;"	m	struct:xfs_mount
m_attr_node_ents	xfs_mount.h	/^	uint			m_attr_node_ents; \/* #entries in attr danode *\/$/;"	m	struct:xfs_mount
m_blkbb_log	xfs_mount.h	/^	__uint8_t		m_blkbb_log;	\/* blocklog - BBSHIFT *\/$/;"	m	struct:xfs_mount
m_blkbit_log	xfs_mount.h	/^	__uint8_t		m_blkbit_log;	\/* blocklog + NBBY *\/$/;"	m	struct:xfs_mount
m_blockmask	xfs_mount.h	/^	uint			m_blockmask;	\/* sb_blocksize-1 *\/$/;"	m	struct:xfs_mount
m_blockwmask	xfs_mount.h	/^	uint			m_blockwmask;	\/* blockwsize-1 *\/$/;"	m	struct:xfs_mount
m_blockwsize	xfs_mount.h	/^	uint			m_blockwsize;	\/* sb_blocksize in words *\/$/;"	m	struct:xfs_mount
m_bm_maxlevels	xfs_mount.h	/^	uint			m_bm_maxlevels[2]; \/* XFS_BM_MAXLEVELS *\/$/;"	m	struct:xfs_mount
m_bmap_dmnr	xfs_mount.h	/^	uint			m_bmap_dmnr[2];	\/* min bmap btree records *\/$/;"	m	struct:xfs_mount
m_bmap_dmxr	xfs_mount.h	/^	uint			m_bmap_dmxr[2];	\/* max bmap btree records *\/$/;"	m	struct:xfs_mount
m_bsize	xfs_mount.h	/^	int			m_bsize;	\/* fs logical block size *\/$/;"	m	struct:xfs_mount
m_chash	xfs_mount.h	/^	struct xfs_chash	*m_chash;	\/* fs private inode per-cluster$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_chash
m_chsize	xfs_mount.h	/^	uint			m_chsize;	\/* size of next field *\/$/;"	m	struct:xfs_mount
m_dalign	xfs_mount.h	/^	int			m_dalign;	\/* stripe unit *\/$/;"	m	struct:xfs_mount
m_ddev_targp	xfs_mount.h	/^	xfs_buftarg_t		*m_ddev_targp;	\/* saves taking the address *\/$/;"	m	struct:xfs_mount
m_dir_magicpct	xfs_mount.h	/^	int			m_dir_magicpct;	\/* 37% of the dir blocksize *\/$/;"	m	struct:xfs_mount
m_dir_node_ents	xfs_mount.h	/^	uint			m_dir_node_ents; \/* #entries in a dir danode *\/$/;"	m	struct:xfs_mount
m_dirblkfsbs	xfs_mount.h	/^	int			m_dirblkfsbs;	\/* directory block sz--fsbs *\/$/;"	m	struct:xfs_mount
m_dirblksize	xfs_mount.h	/^	int			m_dirblksize;	\/* directory block sz--bytes *\/$/;"	m	struct:xfs_mount
m_dirdatablk	xfs_mount.h	/^	xfs_dablk_t		m_dirdatablk;	\/* blockno of dir data v2 *\/$/;"	m	struct:xfs_mount
m_dirfreeblk	xfs_mount.h	/^	xfs_dablk_t		m_dirfreeblk;	\/* blockno of dirfreeindex v2 *\/$/;"	m	struct:xfs_mount
m_dirleafblk	xfs_mount.h	/^	xfs_dablk_t		m_dirleafblk;	\/* blockno of dir non-data v2 *\/$/;"	m	struct:xfs_mount
m_dirnameops	xfs_mount.h	/^	const struct xfs_nameops *m_dirnameops;	\/* vector of dir name ops *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_nameops
m_dmevmask	xfs_mount.h	/^	uint			m_dmevmask;	\/* DMI events for this FS *\/$/;"	m	struct:xfs_mount
m_filestream	xfs_mount.h	/^	struct xfs_mru_cache	*m_filestream;  \/* per-mount filestream data *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_mru_cache
m_fixedfsid	xfs_mount.h	/^	int			m_fixedfsid[2];	\/* unchanged for life of FS *\/$/;"	m	struct:xfs_mount
m_flags	xfs_mount.h	/^	__uint64_t		m_flags;	\/* global mount flags *\/$/;"	m	struct:xfs_mount
m_flush_work	xfs_mount.h	/^	struct work_struct	m_flush_work;	\/* background inode flush *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::work_struct
m_fsname	xfs_mount.h	/^	char			*m_fsname;	\/* filesystem name *\/$/;"	m	struct:xfs_mount
m_fsname_len	xfs_mount.h	/^	int			m_fsname_len;	\/* strlen of fs name *\/$/;"	m	struct:xfs_mount
m_growlock	xfs_mount.h	/^	struct mutex		m_growlock;	\/* growfs mutex *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::mutex
m_ialloc_blks	xfs_mount.h	/^	int			m_ialloc_blks;	\/* blocks in inode allocation *\/$/;"	m	struct:xfs_mount
m_ialloc_inos	xfs_mount.h	/^	int			m_ialloc_inos;	\/* inodes in inode allocation *\/$/;"	m	struct:xfs_mount
m_icsb_counters	xfs_mount.h	/^	unsigned long		m_icsb_counters; \/* disabled per-cpu counters *\/$/;"	m	struct:xfs_mount
m_icsb_mutex	xfs_mount.h	/^	struct mutex		m_icsb_mutex;	\/* balancer sync lock *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::mutex
m_icsb_notifier	xfs_mount.h	/^	struct notifier_block	m_icsb_notifier; \/* hotplug cpu notifier *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::notifier_block
m_in_maxlevels	xfs_mount.h	/^	uint			m_in_maxlevels;	\/* max inobt btree levels. *\/$/;"	m	struct:xfs_mount
m_inoalign_mask	xfs_mount.h	/^	int			m_inoalign_mask;\/* mask sb_inoalignmt if used *\/$/;"	m	struct:xfs_mount
m_inobt_mnr	xfs_mount.h	/^	uint			m_inobt_mnr[2];	\/* min inobt btree records *\/$/;"	m	struct:xfs_mount
m_inobt_mxr	xfs_mount.h	/^	uint			m_inobt_mxr[2];	\/* max inobt btree records *\/$/;"	m	struct:xfs_mount
m_inode_cluster_size	xfs_mount.h	/^	__uint16_t		m_inode_cluster_size;\/* min inode buf size *\/$/;"	m	struct:xfs_mount
m_inode_shrink	xfs_mount.h	/^	struct shrinker		m_inode_shrink;	\/* inode reclaim shrinker *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::shrinker
m_log	xfs_mount.h	/^	struct log		*m_log;		\/* log specific stuff *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::log
m_logbsize	xfs_mount.h	/^	int			m_logbsize;	\/* size of each log buffer *\/$/;"	m	struct:xfs_mount
m_logbufs	xfs_mount.h	/^	int			m_logbufs;	\/* number of log buffers *\/$/;"	m	struct:xfs_mount
m_logdev_targp	xfs_mount.h	/^	xfs_buftarg_t		*m_logdev_targp;\/* ptr to log device *\/$/;"	m	struct:xfs_mount
m_logname	xfs_mount.h	/^	char			*m_logname;	\/* external log device name *\/$/;"	m	struct:xfs_mount
m_low_space	xfs_mount.h	/^	int64_t			m_low_space[XFS_LOWSP_MAX];$/;"	m	struct:xfs_mount
m_maxagi	xfs_mount.h	/^	xfs_agnumber_t		m_maxagi;	\/* highest inode alloc group *\/$/;"	m	struct:xfs_mount
m_maxicount	xfs_mount.h	/^	__uint64_t		m_maxicount;	\/* maximum inode count *\/$/;"	m	struct:xfs_mount
m_maxioffset	xfs_mount.h	/^	__uint64_t		m_maxioffset;	\/* maximum inode offset *\/$/;"	m	struct:xfs_mount
m_perag_lock	xfs_mount.h	/^	spinlock_t		m_perag_lock;	\/* lock for m_perag_tree *\/$/;"	m	struct:xfs_mount
m_perag_tree	xfs_mount.h	/^	struct radix_tree_root	m_perag_tree;	\/* per-ag accounting info *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::radix_tree_root
m_qflags	xfs_mount.h	/^	uint			m_qflags;	\/* quota status flags *\/$/;"	m	struct:xfs_mount
m_quotainfo	xfs_mount.h	/^	struct xfs_quotainfo	*m_quotainfo;	\/* disk quota information *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_quotainfo
m_rbmip	xfs_mount.h	/^	struct xfs_inode	*m_rbmip;	\/* pointer to bitmap inode *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_inode
m_readio_blocks	xfs_mount.h	/^	uint			m_readio_blocks; \/* min read size blocks *\/$/;"	m	struct:xfs_mount
m_readio_log	xfs_mount.h	/^	uint			m_readio_log;	\/* min read size log bytes *\/$/;"	m	struct:xfs_mount
m_reclaim_work	xfs_mount.h	/^	struct delayed_work	m_reclaim_work;	\/* background inode reclaim *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::delayed_work
m_resblks	xfs_mount.h	/^	__uint64_t		m_resblks;	\/* total reserved blocks *\/$/;"	m	struct:xfs_mount
m_resblks_avail	xfs_mount.h	/^	__uint64_t		m_resblks_avail;\/* available reserved blocks *\/$/;"	m	struct:xfs_mount
m_resblks_save	xfs_mount.h	/^	__uint64_t		m_resblks_save;	\/* reserved blks @ remount,ro *\/$/;"	m	struct:xfs_mount
m_reservations	xfs_mount.h	/^	xfs_trans_reservations_t m_reservations;\/* precomputed res values *\/$/;"	m	struct:xfs_mount
m_rootip	xfs_mount.h	/^	struct xfs_inode	*m_rootip;	\/* pointer to root directory *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_inode
m_rsumip	xfs_mount.h	/^	struct xfs_inode	*m_rsumip;	\/* pointer to summary inode *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_inode
m_rsumlevels	xfs_mount.h	/^	uint			m_rsumlevels;	\/* rt summary levels *\/$/;"	m	struct:xfs_mount
m_rsumsize	xfs_mount.h	/^	uint			m_rsumsize;	\/* size of rt summary, bytes *\/$/;"	m	struct:xfs_mount
m_rtdev_targp	xfs_mount.h	/^	xfs_buftarg_t		*m_rtdev_targp;	\/* ptr to rt device *\/$/;"	m	struct:xfs_mount
m_rtname	xfs_mount.h	/^	char			*m_rtname;	\/* realtime device name *\/$/;"	m	struct:xfs_mount
m_sb	xfs_mount.h	/^	xfs_sb_t		m_sb;		\/* copy of fs superblock *\/$/;"	m	struct:xfs_mount
m_sb_bp	xfs_mount.h	/^	struct xfs_buf		*m_sb_bp;	\/* buffer for superblock *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::xfs_buf
m_sb_cnts	xfs_mount.h	/^	xfs_icsb_cnts_t __percpu *m_sb_cnts;	\/* per-cpu superblock counters *\/$/;"	m	struct:xfs_mount
m_sb_lock	xfs_mount.h	/^	spinlock_t		m_sb_lock;	\/* sb counter lock *\/$/;"	m	struct:xfs_mount
m_sectbb_log	xfs_mount.h	/^	__uint8_t		m_sectbb_log;	\/* sectlog - BBSHIFT *\/$/;"	m	struct:xfs_mount
m_sinoalign	xfs_mount.h	/^	int			m_sinoalign;	\/* stripe unit inode alignment *\/$/;"	m	struct:xfs_mount
m_super	xfs_mount.h	/^	struct super_block	*m_super;$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::super_block
m_swidth	xfs_mount.h	/^	int			m_swidth;	\/* stripe width *\/$/;"	m	struct:xfs_mount
m_sync_work	xfs_mount.h	/^	struct delayed_work	m_sync_work;	\/* background sync work *\/$/;"	m	struct:xfs_mount	typeref:struct:xfs_mount::delayed_work
m_tid	xfs_mount.h	/^	xfs_tid_t		m_tid;		\/* next unused tid for fs *\/$/;"	m	struct:xfs_mount
m_update_flags	xfs_mount.h	/^	__int64_t		m_update_flags;	\/* sb flags we need to update$/;"	m	struct:xfs_mount
m_writeio_blocks	xfs_mount.h	/^	uint			m_writeio_blocks; \/* min write size blocks *\/$/;"	m	struct:xfs_mount
m_writeio_log	xfs_mount.h	/^	uint			m_writeio_log;	\/* min write size log bytes *\/$/;"	m	struct:xfs_mount
magic	xfs_da_btree.h	/^	__be16		magic;			\/* validity check on block *\/$/;"	m	struct:xfs_da_blkinfo
magic	xfs_da_btree.h	/^	int		magic;		\/* blk's magic number, ie: blk type *\/$/;"	m	struct:xfs_da_state_blk
magic	xfs_dir2_format.h	/^	__be32			magic;		\/* XFS_DIR2_DATA_MAGIC or *\/$/;"	m	struct:xfs_dir2_data_hdr
magic	xfs_dir2_format.h	/^	__be32			magic;		\/* XFS_DIR2_FREE_MAGIC *\/$/;"	m	struct:xfs_dir2_free_hdr
max	xfs_sysctl.h	/^	int max;$/;"	m	struct:xfs_sysctl_val
maxlen	xfs_alloc.h	/^	xfs_extlen_t	maxlen;		\/* maximum size of extent *\/$/;"	m	struct:xfs_alloc_arg
mem_to_page	xfs_buf.c	/^mem_to_page($/;"	f	file:
min	xfs_sysctl.h	/^	int min;$/;"	m	struct:xfs_sysctl_val
minalignslop	xfs_alloc.h	/^	xfs_extlen_t	minalignslop;	\/* slop for minlen+alignment calcs *\/$/;"	m	struct:xfs_alloc_arg
minleft	xfs_alloc.h	/^	xfs_extlen_t	minleft;	\/* min blocks must be left after us *\/$/;"	m	struct:xfs_alloc_arg
minleft	xfs_bmap.h	/^	xfs_extlen_t		minleft; \/* amount must be left after alloc *\/$/;"	m	struct:xfs_bmalloca
minlen	xfs_alloc.h	/^	xfs_extlen_t	minlen;		\/* minimum size of extent *\/$/;"	m	struct:xfs_alloc_arg
minlen	xfs_bmap.h	/^	xfs_extlen_t		minlen;	\/* minimum allocation size (blocks) *\/$/;"	m	struct:xfs_bmalloca
mod	xfs_alloc.h	/^	xfs_extlen_t	mod;		\/* mod value for extent size *\/$/;"	m	struct:xfs_alloc_arg
mp	xfs_alloc.h	/^	struct xfs_mount *mp;		\/* file system mount point *\/$/;"	m	struct:xfs_alloc_arg	typeref:struct:xfs_alloc_arg::xfs_mount
mp	xfs_da_btree.h	/^	struct xfs_mount	*mp;		\/* filesystem mount point *\/$/;"	m	struct:xfs_da_state	typeref:struct:xfs_da_state::xfs_mount
mr_lock	mrlock.h	/^	struct rw_semaphore	mr_lock;$/;"	m	struct:__anon1	typeref:struct:__anon1::rw_semaphore
mr_writer	mrlock.h	/^	int			mr_writer;$/;"	m	struct:__anon1
mraccess_nested	mrlock.h	/^static inline void mraccess_nested(mrlock_t *mrp, int subclass)$/;"	f
mrdemote	mrlock.h	/^static inline void mrdemote(mrlock_t *mrp)$/;"	f
mrfree	mrlock.h	39;"	d
mrinit	mrlock.h	31;"	d
mrinit	mrlock.h	34;"	d
mrlock_init	mrlock.h	38;"	d
mrlock_t	mrlock.h	/^} mrlock_t;$/;"	t	typeref:struct:__anon1
mrtryaccess	mrlock.h	/^static inline int mrtryaccess(mrlock_t *mrp)$/;"	f
mrtryupdate	mrlock.h	/^static inline int mrtryupdate(mrlock_t *mrp)$/;"	f
mrunlock_excl	mrlock.h	/^static inline void mrunlock_excl(mrlock_t *mrp)$/;"	f
mrunlock_shared	mrlock.h	/^static inline void mrunlock_shared(mrlock_t *mrp)$/;"	f
mrupdate_nested	mrlock.h	/^static inline void mrupdate_nested(mrlock_t *mrp, int subclass)$/;"	f
msb_delta	xfs_mount.h	/^	int64_t		msb_delta;	\/* Change to make to specified field *\/$/;"	m	struct:xfs_mod_sb
msb_field	xfs_mount.h	/^	xfs_sb_field_t	msb_field;	\/* Field to modify, see below *\/$/;"	m	struct:xfs_mod_sb
nallocs	xfs_bmap.h	/^	int			nallocs;\/* number of extents alloc'd *\/$/;"	m	struct:xfs_bmalloca
name	xfs_attr_leaf.h	/^	__u8	name[1];		\/* name bytes *\/$/;"	m	struct:xfs_attr_leaf_name_remote
name	xfs_attr_sf.h	/^	unsigned char	*name;		\/* name value, pointer into buffer *\/$/;"	m	struct:xfs_attr_sf_sort
name	xfs_da_btree.h	/^	const __uint8_t	*name;		\/* string (maybe not NULL terminated) *\/$/;"	m	struct:xfs_da_args
name	xfs_dir2_format.h	/^	__u8			name[];		\/* name bytes, no null *\/$/;"	m	struct:xfs_dir2_data_entry
name	xfs_dir2_format.h	/^	__u8			name[];		\/* name, variable size *\/$/;"	m	struct:xfs_dir2_sf_entry
name	xfs_types.h	/^	const unsigned char	*name;$/;"	m	struct:xfs_name
nameidx	xfs_attr_leaf.h	/^ 	__be16	nameidx;		\/* index into buffer of name\/value *\/$/;"	m	struct:xfs_attr_leaf_entry
namelen	xfs_attr_leaf.h	/^	__u8	namelen;		\/* length of name bytes *\/$/;"	m	struct:xfs_attr_leaf_name_local
namelen	xfs_attr_leaf.h	/^	__u8	namelen;		\/* length of name bytes *\/$/;"	m	struct:xfs_attr_leaf_name_remote
namelen	xfs_attr_sf.h	/^		__uint8_t namelen;	\/* actual length of name (no NULL) *\/$/;"	m	struct:xfs_attr_shortform::xfs_attr_sf_entry
namelen	xfs_attr_sf.h	/^	__uint8_t	namelen;	\/* length of name value (no null) *\/$/;"	m	struct:xfs_attr_sf_sort
namelen	xfs_da_btree.h	/^	int		namelen;	\/* length of string (maybe no NULL) *\/$/;"	m	struct:xfs_da_args
namelen	xfs_dir2_format.h	/^	__u8			namelen;	\/* actual name length *\/$/;"	m	struct:xfs_dir2_sf_entry
namelen	xfs_dir2_format.h	/^	__u8			namelen;	\/* name length *\/$/;"	m	struct:xfs_dir2_data_entry
namelist	xfs_attr_leaf.h	/^	xfs_attr_leaf_name_local_t namelist;	\/* grows from bottom of buf *\/$/;"	m	struct:xfs_attr_leafblock
nameval	xfs_attr_leaf.h	/^	__u8	nameval[1];		\/* name\/value bytes *\/$/;"	m	struct:xfs_attr_leaf_name_local
nameval	xfs_attr_sf.h	/^		__uint8_t nameval[1];	\/* name & value bytes concatenated *\/$/;"	m	struct:xfs_attr_shortform::xfs_attr_sf_entry
nanotime	time.h	/^static inline void nanotime(struct timespec *tvp)$/;"	f
nbuf	xfs_da_btree.h	/^	int		nbuf;		\/* number of buffer pointers present *\/$/;"	m	struct:xfs_dabuf
newblocks	xfs_fs.h	/^	__u32		newblocks;	\/* new log size, fsblocks *\/$/;"	m	struct:xfs_growfs_log
newblocks	xfs_fs.h	/^	__u64		newblocks;	\/* new data subvol size, fsblocks *\/$/;"	m	struct:xfs_growfs_data
newblocks	xfs_fs.h	/^	__u64		newblocks;	\/* new realtime size, fsblocks *\/$/;"	m	struct:xfs_growfs_rt
newblocks	xfs_ioctl32.h	/^	__u64		newblocks;	\/* new data subvol size, fsblocks *\/$/;"	m	struct:compat_xfs_growfs_data
newblocks	xfs_ioctl32.h	/^	__u64		newblocks;	\/* new realtime size, fsblocks *\/$/;"	m	struct:compat_xfs_growfs_rt
node_ents	xfs_da_btree.h	/^	unsigned int		node_ents;	\/* how many entries in danode *\/$/;"	m	struct:xfs_da_state
nullstartblock	xfs_bmap_btree.h	/^static inline xfs_fsblock_t nullstartblock(int k)$/;"	f
nused	xfs_dir2_format.h	/^	__be32			nused;		\/* count of used entries *\/$/;"	m	struct:xfs_dir2_free_hdr
nvalid	xfs_dir2_format.h	/^	__be32			nvalid;		\/* count of valid entries *\/$/;"	m	struct:xfs_dir2_free_hdr
nvecs	xfs_log_priv.h	/^	int			nvecs;		\/* number of regions *\/$/;"	m	struct:xfs_cil_ctx
ocount	xfs_fs.h	/^	__s32		__user *ocount;	\/* output count pointer		*\/$/;"	m	struct:xfs_fsop_bulkreq
ocount	xfs_ioctl32.h	/^	compat_uptr_t	ocount;		\/* output count pointer		*\/$/;"	m	struct:compat_xfs_fsop_bulkreq
offset	xfs_attr.h	/^	__u32	offset;		\/* offset in list of equal-hashvals *\/$/;"	m	struct:attrlist_cursor_kern
offset	xfs_bmap.h	/^	xfs_fileoff_t		offset;	\/* offset in file filling in *\/$/;"	m	struct:xfs_bmalloca
offset	xfs_dir2_format.h	/^	__be16			offset;		\/* start of freespace *\/$/;"	m	struct:xfs_dir2_data_free
offset	xfs_dir2_format.h	/^	xfs_dir2_sf_off_t	offset;		\/* saved offset *\/$/;"	m	struct:xfs_dir2_sf_entry
offset	xfs_mount.c	/^	short offset;$/;"	m	struct:__anon28	file:
oflags	xfs_fs.h	/^	__u32		oflags;		\/* open flags			*\/$/;"	m	struct:xfs_fsop_handlereq
oflags	xfs_ioctl32.h	/^	__u32		oflags;		\/* open flags			*\/$/;"	m	struct:compat_xfs_fsop_handlereq
oh_clientid	xfs_log_priv.h	/^	__u8	   oh_clientid;	\/* who sent me this		:  1 b *\/$/;"	m	struct:xlog_op_header
oh_flags	xfs_log_priv.h	/^	__u8	   oh_flags;	\/*				:  1 b *\/$/;"	m	struct:xlog_op_header
oh_len	xfs_log_priv.h	/^	__be32	   oh_len;	\/* bytes in data region		:  4 b *\/$/;"	m	struct:xlog_op_header
oh_res2	xfs_log_priv.h	/^	__u16	   oh_res2;	\/* 32 bit align			:  2 b *\/$/;"	m	struct:xlog_op_header
oh_tid	xfs_log_priv.h	/^	__be32	   oh_tid;	\/* transaction id of operation	:  4 b *\/$/;"	m	struct:xlog_op_header
ohandle	xfs_fs.h	/^	void		__user *ohandle;\/* user buffer for handle	*\/$/;"	m	struct:xfs_fsop_handlereq
ohandle	xfs_ioctl32.h	/^	compat_uptr_t	ohandle;	\/* user buffer for handle	*\/$/;"	m	struct:compat_xfs_fsop_handlereq
ohandlen	xfs_fs.h	/^	__u32		__user *ohandlen;\/* user buffer length		*\/$/;"	m	struct:xfs_fsop_handlereq
ohandlen	xfs_ioctl32.h	/^	compat_uptr_t	ohandlen;	\/* user buffer length		*\/$/;"	m	struct:compat_xfs_fsop_handlereq
op_flags	xfs_da_btree.h	/^	int		op_flags;	\/* operation flags *\/$/;"	m	struct:xfs_da_args
opaque	xfs_fs.h	/^	__u32		opaque[4];$/;"	m	struct:xfs_attrlist_cursor
opcount	xfs_fs.h	/^	__u32				opcount;\/* count of following multiop *\/$/;"	m	struct:xfs_fsop_attrmulti_handlereq
opcount	xfs_ioctl32.h	/^	__u32				opcount;\/* count of following multiop *\/$/;"	m	struct:compat_xfs_fsop_attrmulti_handlereq
ops	xfs_fs.h	/^	struct xfs_attr_multiop		__user *ops; \/* attr_multi data *\/$/;"	m	struct:xfs_fsop_attrmulti_handlereq	typeref:struct:xfs_fsop_attrmulti_handlereq::__user
ops	xfs_ioctl32.h	/^	compat_uptr_t			ops; \/* attr_multi data *\/$/;"	m	struct:compat_xfs_fsop_attrmulti_handlereq
otype	xfs_alloc.h	/^	xfs_alloctype_t	otype;		\/* original allocation type *\/$/;"	m	struct:xfs_alloc_arg
pad	xfs_da_btree.h	/^	__be16		pad;			\/* unused *\/$/;"	m	struct:xfs_da_blkinfo
pad1	xfs_attr.h	/^	__u16	pad1;		\/* padding to match user-level *\/$/;"	m	struct:attrlist_cursor_kern
pad1	xfs_attr_leaf.h	/^	__u8	pad1;$/;"	m	struct:xfs_attr_leaf_hdr
pad2	xfs_attr.h	/^	__u8	pad2;		\/* padding to match user-level *\/$/;"	m	struct:attrlist_cursor_kern
pad2	xfs_attr_leaf.h	/^	__u8	pad2;			\/* unused pad byte *\/$/;"	m	struct:xfs_attr_leaf_entry
pag	xfs_alloc.h	/^	struct xfs_perag *pag;		\/* per-ag struct for this agno *\/$/;"	m	struct:xfs_alloc_arg	typeref:struct:xfs_alloc_arg::xfs_perag
pag_agno	xfs_ag.h	/^	xfs_agnumber_t	pag_agno;	\/* AG this structure belongs to *\/$/;"	m	struct:xfs_perag
pag_buf_lock	xfs_ag.h	/^	spinlock_t	pag_buf_lock;	\/* lock for pag_buf_tree *\/$/;"	m	struct:xfs_perag
pag_buf_tree	xfs_ag.h	/^	struct rb_root	pag_buf_tree;	\/* ordered tree of active buffers *\/$/;"	m	struct:xfs_perag	typeref:struct:xfs_perag::rb_root
pag_ici_lock	xfs_ag.h	/^	spinlock_t	pag_ici_lock;	\/* incore inode cache lock *\/$/;"	m	struct:xfs_perag
pag_ici_reclaim_cursor	xfs_ag.h	/^	unsigned long	pag_ici_reclaim_cursor;	\/* reclaim restart point *\/$/;"	m	struct:xfs_perag
pag_ici_reclaim_lock	xfs_ag.h	/^	struct mutex	pag_ici_reclaim_lock;	\/* serialisation point *\/$/;"	m	struct:xfs_perag	typeref:struct:xfs_perag::mutex
pag_ici_reclaimable	xfs_ag.h	/^	int		pag_ici_reclaimable;	\/* reclaimable inodes *\/$/;"	m	struct:xfs_perag
pag_ici_root	xfs_ag.h	/^	struct radix_tree_root pag_ici_root;	\/* incore inode cache root *\/$/;"	m	struct:xfs_perag	typeref:struct:xfs_perag::radix_tree_root
pag_mount	xfs_ag.h	/^	struct xfs_mount *pag_mount;	\/* owner filesystem *\/$/;"	m	struct:xfs_perag	typeref:struct:xfs_perag::xfs_mount
pag_ref	xfs_ag.h	/^	atomic_t	pag_ref;	\/* perag reference count *\/$/;"	m	struct:xfs_perag
pagb_count	xfs_ag.h	/^	int		pagb_count;	\/* pagb slots in use *\/$/;"	m	struct:xfs_perag
pagb_lock	xfs_ag.h	/^	spinlock_t	pagb_lock;	\/* lock for pagb_tree *\/$/;"	m	struct:xfs_perag
pagb_tree	xfs_ag.h	/^	struct rb_root	pagb_tree;	\/* ordered tree of busy extents *\/$/;"	m	struct:xfs_perag	typeref:struct:xfs_perag::rb_root
pagf_btreeblks	xfs_ag.h	/^	__uint32_t	pagf_btreeblks;	\/* # of blocks held in AGF btrees *\/$/;"	m	struct:xfs_perag
pagf_flcount	xfs_ag.h	/^	__uint32_t	pagf_flcount;	\/* count of blocks in freelist *\/$/;"	m	struct:xfs_perag
pagf_freeblks	xfs_ag.h	/^	xfs_extlen_t	pagf_freeblks;	\/* total free blocks *\/$/;"	m	struct:xfs_perag
pagf_fstrms	xfs_ag.h	/^	atomic_t        pagf_fstrms;    \/* # of filestreams active in this AG *\/$/;"	m	struct:xfs_perag
pagf_init	xfs_ag.h	/^	char		pagf_init;	\/* this agf's entry is initialized *\/$/;"	m	struct:xfs_perag
pagf_levels	xfs_ag.h	/^	__uint8_t	pagf_levels[XFS_BTNUM_AGF];$/;"	m	struct:xfs_perag
pagf_longest	xfs_ag.h	/^	xfs_extlen_t	pagf_longest;	\/* longest free space *\/$/;"	m	struct:xfs_perag
pagf_metadata	xfs_ag.h	/^	char		pagf_metadata;	\/* the agf is preferred to be metadata *\/$/;"	m	struct:xfs_perag
pagi_count	xfs_ag.h	/^	xfs_agino_t	pagi_count;	\/* number of allocated inodes *\/$/;"	m	struct:xfs_perag
pagi_freecount	xfs_ag.h	/^	xfs_agino_t	pagi_freecount;	\/* number of free inodes *\/$/;"	m	struct:xfs_perag
pagi_init	xfs_ag.h	/^	char		pagi_init;	\/* this agi's entry is initialized *\/$/;"	m	struct:xfs_perag
pagi_inodeok	xfs_ag.h	/^	char		pagi_inodeok;	\/* The agi is ok for inodes *\/$/;"	m	struct:xfs_perag
pagl_leftrec	xfs_ag.h	/^	xfs_agino_t	pagl_leftrec;$/;"	m	struct:xfs_perag
pagl_pagino	xfs_ag.h	/^	xfs_agino_t	pagl_pagino;$/;"	m	struct:xfs_perag
pagl_rightrec	xfs_ag.h	/^	xfs_agino_t	pagl_rightrec;$/;"	m	struct:xfs_perag
panic_mask	xfs_sysctl.h	/^	xfs_sysctl_val_t panic_mask;	\/* bitmask to cause panic on errors. *\/$/;"	m	struct:xfs_param
parent	xfs_dir2_format.h	/^	xfs_dir2_inou_t		parent;		\/* parent dir inode number *\/$/;"	m	struct:xfs_dir2_sf_hdr
parent_gen	xfs_export.h	/^	u32 parent_gen;$/;"	m	struct:xfs_fid64
parent_ino	xfs_export.h	/^	u64 parent_ino;$/;"	m	struct:xfs_fid64
path	xfs_da_btree.h	/^	xfs_da_state_path_t	path;		\/* search\/split paths *\/$/;"	m	struct:xfs_da_state
path	xfs_fs.h	/^	void		__user *path;	\/* user pathname		*\/$/;"	m	struct:xfs_fsop_handlereq
path	xfs_ioctl32.h	/^	compat_uptr_t	path;		\/* user pathname		*\/$/;"	m	struct:compat_xfs_fsop_handlereq
pip	xfs_filestream.c	/^	xfs_inode_t	*pip;	\/* Parent directory inode pointer. *\/$/;"	m	struct:fstrm_item	file:
pos	xfs_fs.h	/^	struct xfs_attrlist_cursor	pos; \/* opaque cookie, list offset *\/$/;"	m	struct:xfs_fsop_attrlist_handlereq	typeref:struct:xfs_fsop_attrlist_handlereq::xfs_attrlist_cursor
pos	xfs_ioctl32.h	/^	struct xfs_attrlist_cursor	pos; \/* opaque cookie, list offset *\/$/;"	m	struct:compat_xfs_fsop_attrlist_handlereq	typeref:struct:compat_xfs_fsop_attrlist_handlereq::xfs_attrlist_cursor
posix_acl_access_exists	xfs_acl.c	/^posix_acl_access_exists(struct inode *inode)$/;"	f
posix_acl_access_exists	xfs_acl.h	60;"	d
posix_acl_default_exists	xfs_acl.c	/^posix_acl_default_exists(struct inode *inode)$/;"	f
posix_acl_default_exists	xfs_acl.h	61;"	d
prev	xfs_bmap.h	/^	struct xfs_bmbt_irec	prev;	\/* extent before the new one *\/$/;"	m	struct:xfs_bmalloca	typeref:struct:xfs_bmalloca::xfs_bmbt_irec
prid_t	xfs_types.h	/^typedef __uint32_t		prid_t;		\/* project ID *\/$/;"	t
proc_xfs_info	xfs_super.c	/^struct proc_xfs_info {$/;"	s	file:
prod	xfs_alloc.h	/^	xfs_extlen_t	prod;		\/* prod value for extent size *\/$/;"	m	struct:xfs_alloc_arg
put_listent	xfs_attr.h	/^	put_listent_func_t		put_listent;	\/* list output fmt function *\/$/;"	m	struct:xfs_attr_list_context
put_listent_func_t	xfs_attr.h	/^typedef int (*put_listent_func_t)(struct xfs_attr_list_context *, int,$/;"	t
put_value	xfs_attr.h	/^	int				put_value;	\/* T\/F: need value for listent *\/$/;"	m	struct:xfs_attr_list_context
q_blkno	xfs_dquot.h	/^	xfs_daddr_t	 q_blkno;	\/* blkno of dquot buffer *\/$/;"	m	struct:xfs_dquot
q_bufoffset	xfs_dquot.h	/^	int		 q_bufoffset;	\/* off of dq in buffer (# dquots) *\/$/;"	m	struct:xfs_dquot
q_core	xfs_dquot.h	/^	xfs_disk_dquot_t q_core;	\/* actual usage & quotas *\/$/;"	m	struct:xfs_dquot
q_fileoffset	xfs_dquot.h	/^	xfs_fileoff_t	 q_fileoffset;	\/* offset in quotas file *\/$/;"	m	struct:xfs_dquot
q_flush	xfs_dquot.h	/^	struct completion q_flush;	\/* flush completion queue *\/$/;"	m	struct:xfs_dquot	typeref:struct:xfs_dquot::completion
q_freelist	xfs_dquot.h	/^	struct list_head q_freelist;	\/* global free list of dquots *\/$/;"	m	struct:xfs_dquot	typeref:struct:xfs_dquot::list_head
q_gdquot	xfs_dquot.h	/^	struct xfs_dquot*q_gdquot;	\/* group dquot, hint only *\/$/;"	m	struct:xfs_dquot	typeref:struct:xfs_dquot::xfs_dquot
q_hash	xfs_dquot.h	/^	xfs_dqhash_t	*q_hash;	\/* the hashchain header *\/$/;"	m	struct:xfs_dquot
q_hashlist	xfs_dquot.h	/^	struct list_head q_hashlist;	\/* gloabl hash list of dquots *\/$/;"	m	struct:xfs_dquot	typeref:struct:xfs_dquot::list_head
q_logitem	xfs_dquot.h	/^	xfs_dq_logitem_t q_logitem;	\/* dquot log item *\/$/;"	m	struct:xfs_dquot
q_mount	xfs_dquot.h	/^	struct xfs_mount*q_mount;	\/* filesystem this relates to *\/$/;"	m	struct:xfs_dquot	typeref:struct:xfs_dquot::xfs_mount
q_mplist	xfs_dquot.h	/^	struct list_head q_mplist;	\/* mount's list of dquots *\/$/;"	m	struct:xfs_dquot	typeref:struct:xfs_dquot::list_head
q_nrefs	xfs_dquot.h	/^	uint		 q_nrefs;	\/* # active refs from inodes *\/$/;"	m	struct:xfs_dquot
q_pincount	xfs_dquot.h	/^	atomic_t          q_pincount;	\/* dquot pin count *\/$/;"	m	struct:xfs_dquot
q_pinwait	xfs_dquot.h	/^	wait_queue_head_t q_pinwait;	\/* dquot pinning wait queue *\/$/;"	m	struct:xfs_dquot
q_qlock	xfs_dquot.h	/^	struct mutex	 q_qlock;	\/* quota lock *\/$/;"	m	struct:xfs_dquot	typeref:struct:xfs_dquot::mutex
q_res_bcount	xfs_dquot.h	/^	xfs_qcnt_t	 q_res_bcount;	\/* total regular nblks used+reserved *\/$/;"	m	struct:xfs_dquot
q_res_icount	xfs_dquot.h	/^	xfs_qcnt_t	 q_res_icount;	\/* total inos allocd+reserved *\/$/;"	m	struct:xfs_dquot
q_res_rtbcount	xfs_dquot.h	/^	xfs_qcnt_t	 q_res_rtbcount;\/* total realtime blks used+reserved *\/$/;"	m	struct:xfs_dquot
q_transp	xfs_dquot.h	/^	struct xfs_trans*q_transp;	\/* trans this belongs to currently *\/$/;"	m	struct:xfs_dquot	typeref:struct:xfs_dquot::xfs_trans
qf_flags	xfs_quota.h	/^	unsigned int		qf_flags;	\/* USR and\/or GRP *\/$/;"	m	struct:xfs_qoff_logformat
qf_pad	xfs_quota.h	/^	char			qf_pad[12];	\/* padding for future *\/$/;"	m	struct:xfs_qoff_logformat
qf_size	xfs_quota.h	/^	unsigned short		qf_size;	\/* size of this item *\/$/;"	m	struct:xfs_qoff_logformat
qf_type	xfs_quota.h	/^	unsigned short		qf_type;	\/* quotaoff log item type *\/$/;"	m	struct:xfs_qoff_logformat
qh_list	xfs_dquot.h	/^	struct list_head  qh_list;$/;"	m	struct:xfs_dqhash	typeref:struct:xfs_dqhash::list_head
qh_lock	xfs_dquot.h	/^	struct mutex	  qh_lock;$/;"	m	struct:xfs_dqhash	typeref:struct:xfs_dqhash::mutex
qh_nelems	xfs_dquot.h	/^	uint		  qh_nelems;	\/* number of dquots on the list *\/$/;"	m	struct:xfs_dqhash
qh_version	xfs_dquot.h	/^	uint		  qh_version;	\/* ever increasing version *\/$/;"	m	struct:xfs_dqhash
qi_bhardlimit	xfs_qm.h	/^	xfs_qcnt_t	 qi_bhardlimit;	 \/* default data blk hard limit *\/$/;"	m	struct:xfs_quotainfo
qi_bsoftlimit	xfs_qm.h	/^	xfs_qcnt_t	 qi_bsoftlimit;	 \/* default data blk soft limit *\/$/;"	m	struct:xfs_quotainfo
qi_btimelimit	xfs_qm.h	/^	time_t		 qi_btimelimit;	 \/* limit for blks timer *\/$/;"	m	struct:xfs_quotainfo
qi_bwarnlimit	xfs_qm.h	/^	xfs_qwarncnt_t	 qi_bwarnlimit;	 \/* limit for blks warnings *\/$/;"	m	struct:xfs_quotainfo
qi_dqchunklen	xfs_qm.h	/^	xfs_filblks_t	 qi_dqchunklen;	 \/* # BBs in a chunk of dqs *\/$/;"	m	struct:xfs_quotainfo
qi_dqlist	xfs_qm.h	/^	struct list_head qi_dqlist;	 \/* all dquots in filesys *\/$/;"	m	struct:xfs_quotainfo	typeref:struct:xfs_quotainfo::list_head
qi_dqlist_lock	xfs_qm.h	/^	struct mutex	 qi_dqlist_lock;$/;"	m	struct:xfs_quotainfo	typeref:struct:xfs_quotainfo::mutex
qi_dqperchunk	xfs_qm.h	/^	uint		 qi_dqperchunk;	 \/* # ondisk dqs in above chunk *\/$/;"	m	struct:xfs_quotainfo
qi_dqreclaims	xfs_qm.h	/^	int		 qi_dqreclaims;	 \/* a change here indicates$/;"	m	struct:xfs_quotainfo
qi_dquots	xfs_qm.h	/^	int		 qi_dquots;$/;"	m	struct:xfs_quotainfo
qi_gquotaip	xfs_qm.h	/^	xfs_inode_t	*qi_gquotaip;	 \/* group quota inode *\/$/;"	m	struct:xfs_quotainfo
qi_ihardlimit	xfs_qm.h	/^	xfs_qcnt_t	 qi_ihardlimit;	 \/* default inode count hard limit *\/$/;"	m	struct:xfs_quotainfo
qi_isoftlimit	xfs_qm.h	/^	xfs_qcnt_t	 qi_isoftlimit;	 \/* default inode count soft limit *\/$/;"	m	struct:xfs_quotainfo
qi_itimelimit	xfs_qm.h	/^	time_t		 qi_itimelimit;	 \/* limit for inodes timer *\/$/;"	m	struct:xfs_quotainfo
qi_iwarnlimit	xfs_qm.h	/^	xfs_qwarncnt_t	 qi_iwarnlimit;	 \/* limit for inodes warnings *\/$/;"	m	struct:xfs_quotainfo
qi_quotaofflock	xfs_qm.h	/^	struct mutex	 qi_quotaofflock;\/* to serialize quotaoff *\/$/;"	m	struct:xfs_quotainfo	typeref:struct:xfs_quotainfo::mutex
qi_rtbhardlimit	xfs_qm.h	/^	xfs_qcnt_t	 qi_rtbhardlimit;\/* default realtime blk hard limit *\/$/;"	m	struct:xfs_quotainfo
qi_rtbsoftlimit	xfs_qm.h	/^	xfs_qcnt_t	 qi_rtbsoftlimit;\/* default realtime blk soft limit *\/$/;"	m	struct:xfs_quotainfo
qi_rtbtimelimit	xfs_qm.h	/^	time_t		 qi_rtbtimelimit;\/* limit for rt blks timer *\/$/;"	m	struct:xfs_quotainfo
qi_rtbwarnlimit	xfs_qm.h	/^	xfs_qwarncnt_t	 qi_rtbwarnlimit;\/* limit for rt blks warnings *\/$/;"	m	struct:xfs_quotainfo
qi_uquotaip	xfs_qm.h	/^	xfs_inode_t	*qi_uquotaip;	 \/* user quota inode *\/$/;"	m	struct:xfs_quotainfo
qlf_blkno	xfs_quota.h	/^	__int64_t		qlf_blkno;     \/* blkno of dquot buffer *\/$/;"	m	struct:xfs_dq_logformat
qlf_boffset	xfs_quota.h	/^	__uint32_t		qlf_boffset;   \/* off of dquot in buffer *\/$/;"	m	struct:xfs_dq_logformat
qlf_id	xfs_quota.h	/^	xfs_dqid_t		qlf_id;	       \/* usr\/grp\/proj id : 32 bits *\/$/;"	m	struct:xfs_dq_logformat
qlf_len	xfs_quota.h	/^	__int32_t		qlf_len;       \/* len of dquot buffer *\/$/;"	m	struct:xfs_dq_logformat
qlf_size	xfs_quota.h	/^	__uint16_t		qlf_size;      \/* size of this item *\/$/;"	m	struct:xfs_dq_logformat
qlf_type	xfs_quota.h	/^	__uint16_t		qlf_type;      \/* dquot log item type *\/$/;"	m	struct:xfs_dq_logformat
qli_dquot	xfs_dquot_item.h	/^	struct xfs_dquot	*qli_dquot;	   \/* dquot ptr *\/$/;"	m	struct:xfs_dq_logitem	typeref:struct:xfs_dq_logitem::xfs_dquot
qli_flush_lsn	xfs_dquot_item.h	/^	xfs_lsn_t		 qli_flush_lsn;	   \/* lsn at last flush *\/$/;"	m	struct:xfs_dq_logitem
qli_format	xfs_dquot_item.h	/^	xfs_dq_logformat_t	 qli_format;	   \/* logged structure *\/$/;"	m	struct:xfs_dq_logitem
qli_item	xfs_dquot_item.h	/^	xfs_log_item_t		 qli_item;	   \/* common portion *\/$/;"	m	struct:xfs_dq_logitem
qm_dqfrlist	xfs_qm.h	/^	struct list_head qm_dqfrlist;	 \/* freelist of dquots *\/$/;"	m	struct:xfs_qm	typeref:struct:xfs_qm::list_head
qm_dqfrlist_cnt	xfs_qm.h	/^	int		 qm_dqfrlist_cnt;$/;"	m	struct:xfs_qm
qm_dqfrlist_lock	xfs_qm.h	/^	struct mutex	 qm_dqfrlist_lock;$/;"	m	struct:xfs_qm	typeref:struct:xfs_qm::mutex
qm_dqhashmask	xfs_qm.h	/^	uint		 qm_dqhashmask;	 \/* # buckets in dq hashtab - 1 *\/$/;"	m	struct:xfs_qm
qm_dqtrxzone	xfs_qm.c	/^kmem_zone_t	*qm_dqtrxzone;$/;"	v
qm_dqtrxzone	xfs_qm.h	/^	kmem_zone_t	*qm_dqtrxzone;	 \/* t_dqinfo of transactions *\/$/;"	m	struct:xfs_qm
qm_dqzone	xfs_qm.c	/^kmem_zone_t	*qm_dqzone;$/;"	v
qm_dqzone	xfs_qm.h	/^	kmem_zone_t	*qm_dqzone;	 \/* dquot mem-alloc zone *\/$/;"	m	struct:xfs_qm
qm_grp_dqhtable	xfs_qm.h	/^	xfs_dqlist_t	*qm_grp_dqhtable;\/* gdquot hash table *\/$/;"	m	struct:xfs_qm
qm_nrefs	xfs_qm.h	/^	uint		 qm_nrefs;	 \/* file systems with quota on *\/$/;"	m	struct:xfs_qm
qm_totaldquots	xfs_qm.h	/^	atomic_t	 qm_totaldquots; \/* total incore dquots *\/$/;"	m	struct:xfs_qm
qm_usr_dqhtable	xfs_qm.h	/^	xfs_dqlist_t	*qm_usr_dqhtable;\/* udquot hash table *\/$/;"	m	struct:xfs_qm
qql_format	xfs_dquot_item.h	/^	xfs_qoff_logformat_t	 qql_format;	\/* logged structure *\/$/;"	m	struct:xfs_qoff_logitem
qql_item	xfs_dquot_item.h	/^	xfs_log_item_t		 qql_item;	\/* common portion *\/$/;"	m	struct:xfs_qoff_logitem
qql_start_lip	xfs_dquot_item.h	/^	struct xfs_qoff_logitem *qql_start_lip; \/* qoff-start logitem, if any *\/$/;"	m	struct:xfs_qoff_logitem	typeref:struct:xfs_qoff_logitem::xfs_qoff_logitem
qt_bcount_delta	xfs_quota.h	/^	long		qt_bcount_delta;  \/* dquot blk count changes *\/$/;"	m	struct:xfs_dqtrx
qt_blk_res	xfs_quota.h	/^	ulong		qt_blk_res;	  \/* blks reserved on a dquot *\/$/;"	m	struct:xfs_dqtrx
qt_blk_res_used	xfs_quota.h	/^	ulong		qt_blk_res_used;  \/* blks used from the reservation *\/$/;"	m	struct:xfs_dqtrx
qt_delbcnt_delta	xfs_quota.h	/^	long		qt_delbcnt_delta; \/* delayed dquot blk count changes *\/$/;"	m	struct:xfs_dqtrx
qt_delrtb_delta	xfs_quota.h	/^	long		qt_delrtb_delta;  \/* delayed RT blk count changes *\/$/;"	m	struct:xfs_dqtrx
qt_dquot	xfs_quota.h	/^	struct xfs_dquot *qt_dquot;	  \/* the dquot this refers to *\/$/;"	m	struct:xfs_dqtrx	typeref:struct:xfs_dqtrx::xfs_dquot
qt_icount_delta	xfs_quota.h	/^	long		qt_icount_delta;  \/* dquot inode count changes *\/$/;"	m	struct:xfs_dqtrx
qt_ino_res	xfs_quota.h	/^	ulong		qt_ino_res;	  \/* inode reserved on a dquot *\/$/;"	m	struct:xfs_dqtrx
qt_ino_res_used	xfs_quota.h	/^	ulong		qt_ino_res_used;  \/* inodes used from the reservation *\/$/;"	m	struct:xfs_dqtrx
qt_rtbcount_delta	xfs_quota.h	/^	long		qt_rtbcount_delta;\/* dquot realtime blk changes *\/$/;"	m	struct:xfs_dqtrx
qt_rtblk_res	xfs_quota.h	/^	ulong		qt_rtblk_res;	  \/* # blks reserved on a dquot *\/$/;"	m	struct:xfs_dqtrx
qt_rtblk_res_used	xfs_quota.h	/^	ulong		qt_rtblk_res_used;\/* # blks used from reservation *\/$/;"	m	struct:xfs_dqtrx
queued	xfs_mru_cache.h	/^	unsigned int		queued;	   \/* work has been queued *\/$/;"	m	struct:xfs_mru_cache
r_itemq	xfs_log_recover.h	/^	struct list_head	r_itemq;	\/* q for items *\/$/;"	m	struct:xlog_recover	typeref:struct:xlog_recover::list_head
r_len	xfs_log_priv.h	/^	uint	r_len;	\/* region length		:4 *\/$/;"	m	struct:xlog_res
r_list	xfs_log_recover.h	/^	struct hlist_node	r_list;$/;"	m	struct:xlog_recover	typeref:struct:xlog_recover::hlist_node
r_log_tid	xfs_log_recover.h	/^	xlog_tid_t		r_log_tid;	\/* log's transaction id *\/$/;"	m	struct:xlog_recover
r_lsn	xfs_log_recover.h	/^	xfs_lsn_t		r_lsn;		\/* xact lsn *\/$/;"	m	struct:xlog_recover
r_state	xfs_log_recover.h	/^	int			r_state;	\/* not needed *\/$/;"	m	struct:xlog_recover
r_theader	xfs_log_recover.h	/^	xfs_trans_header_t	r_theader;	\/* trans header for partial *\/$/;"	m	struct:xlog_recover
r_type	xfs_log_priv.h	/^	uint	r_type;	\/* region's transaction type	:4 *\/$/;"	m	struct:xlog_res
rb_node	xfs_ag.h	/^	struct rb_node	rb_node;	\/* ag by-bno indexed search tree *\/$/;"	m	struct:xfs_busy_extent	typeref:struct:xfs_busy_extent::rb_node
rcu_head	xfs_ag.h	/^	struct rcu_head	rcu_head;$/;"	m	struct:xfs_perag	typeref:struct:xfs_perag::rcu_head
reap_list	xfs_mru_cache.h	/^	struct list_head	reap_list; \/* Elements overdue for reaping. *\/$/;"	m	struct:xfs_mru_cache	typeref:struct:xfs_mru_cache::list_head
rec_len	xfs_btree.h	/^	size_t	rec_len;$/;"	m	struct:xfs_btree_ops
recs_inorder	xfs_btree.h	/^	int	(*recs_inorder)(struct xfs_btree_cur *cur,$/;"	m	struct:xfs_btree_ops
resblks	xfs_fs.h	/^	__u64  resblks;$/;"	m	struct:xfs_fsop_resblks
resblks_avail	xfs_fs.h	/^	__u64  resblks_avail;$/;"	m	struct:xfs_fsop_resblks
resynch	xfs_attr.h	/^	int				resynch;	\/* T\/F: resynch with cursor *\/$/;"	m	struct:xfs_attr_list_context
ri_buf	xfs_log_recover.h	/^	xfs_log_iovec_t		*ri_buf;	\/* ptr to regions buffer *\/$/;"	m	struct:xlog_recover_item
ri_cnt	xfs_log_recover.h	/^	int			ri_cnt;	\/* count of regions found *\/$/;"	m	struct:xlog_recover_item
ri_list	xfs_log_recover.h	/^	struct list_head	ri_list;$/;"	m	struct:xlog_recover_item	typeref:struct:xlog_recover_item::list_head
ri_total	xfs_log_recover.h	/^	int			ri_total;	\/* total regions *\/$/;"	m	struct:xlog_recover_item
ri_type	xfs_log_recover.h	/^	int			ri_type;$/;"	m	struct:xlog_recover_item
rmtblkcnt	xfs_da_btree.h	/^	int		rmtblkcnt;	\/* remote attr value block count *\/$/;"	m	struct:xfs_da_args
rmtblkcnt2	xfs_da_btree.h	/^	int		rmtblkcnt2;	\/* remote attr value block count *\/$/;"	m	struct:xfs_da_args
rmtblkno	xfs_da_btree.h	/^	xfs_dablk_t	rmtblkno;	\/* remote attr value starting blkno *\/$/;"	m	struct:xfs_da_args
rmtblkno2	xfs_da_btree.h	/^	xfs_dablk_t	rmtblkno2;	\/* remote attr value starting blkno *\/$/;"	m	struct:xfs_da_args
rotorstep	xfs_sysctl.h	/^	xfs_sysctl_val_t rotorstep;	\/* inode32 AG rotoring control knob *\/$/;"	m	struct:xfs_param
roundup_64	xfs_linux.h	/^static inline __uint64_t roundup_64(__uint64_t x, __uint32_t y)$/;"	f
rtblocks	xfs_fs.h	/^	__u64		rtblocks;	\/* fsblocks in realtime subvol	*\/$/;"	m	struct:xfs_fsop_geom
rtblocks	xfs_fs.h	/^	__u64		rtblocks;	\/* fsblocks in realtime subvol	*\/$/;"	m	struct:xfs_fsop_geom_v1
rtblocks	xfs_ioctl32.h	/^	__u64		rtblocks;	\/* fsblocks in realtime subvol	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
rtextents	xfs_fs.h	/^	__u64		rtextents;	\/* rt extents in realtime subvol*\/$/;"	m	struct:xfs_fsop_geom
rtextents	xfs_fs.h	/^	__u64		rtextents;	\/* rt extents in realtime subvol*\/$/;"	m	struct:xfs_fsop_geom_v1
rtextents	xfs_ioctl32.h	/^	__u64		rtextents;	\/* rt extents in realtime subvol*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
rtextsize	xfs_fs.h	/^	__u32		rtextsize;	\/* realtime extent size		*\/$/;"	m	struct:xfs_fsop_geom
rtextsize	xfs_fs.h	/^	__u32		rtextsize;	\/* realtime extent size		*\/$/;"	m	struct:xfs_fsop_geom_v1
rtextsize	xfs_ioctl32.h	/^	__u32		rtextsize;	\/* realtime extent size		*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
rtsectsize	xfs_fs.h	/^	__u32		rtsectsize;	\/* realtime sector size, bytes	*\/$/;"	m	struct:xfs_fsop_geom
rtsectsize	xfs_fs.h	/^	__u32		rtsectsize;	\/* realtime sector size, bytes	*\/$/;"	m	struct:xfs_fsop_geom_v1
rtsectsize	xfs_ioctl32.h	/^	__u32		rtsectsize;	\/* realtime sector size, bytes	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
s	xfs_btree.h	/^		} s;			\/* short form pointers *\/$/;"	m	union:xfs_btree_block::__anon7	typeref:struct:xfs_btree_block::__anon7::__anon8
s	xfs_btree.h	/^	__be32			s;	\/* short form ptr *\/$/;"	m	union:xfs_btree_ptr
sb_agblklog	xfs_sb.h	/^	__u8		sb_agblklog;	\/* log2 of sb_agblocks (rounded up) *\/$/;"	m	struct:xfs_dsb
sb_agblklog	xfs_sb.h	/^	__uint8_t	sb_agblklog;	\/* log2 of sb_agblocks (rounded up) *\/$/;"	m	struct:xfs_sb
sb_agblocks	xfs_sb.h	/^	__be32		sb_agblocks;	\/* size of an allocation group *\/$/;"	m	struct:xfs_dsb
sb_agblocks	xfs_sb.h	/^	xfs_agblock_t	sb_agblocks;	\/* size of an allocation group *\/$/;"	m	struct:xfs_sb
sb_agcount	xfs_sb.h	/^	__be32		sb_agcount;	\/* number of allocation groups *\/$/;"	m	struct:xfs_dsb
sb_agcount	xfs_sb.h	/^	xfs_agnumber_t	sb_agcount;	\/* number of allocation groups *\/$/;"	m	struct:xfs_sb
sb_bad_features2	xfs_sb.h	/^	__be32	sb_bad_features2;$/;"	m	struct:xfs_dsb
sb_bad_features2	xfs_sb.h	/^	__uint32_t	sb_bad_features2;$/;"	m	struct:xfs_sb
sb_blocklog	xfs_sb.h	/^	__u8		sb_blocklog;	\/* log2 of sb_blocksize *\/$/;"	m	struct:xfs_dsb
sb_blocklog	xfs_sb.h	/^	__uint8_t	sb_blocklog;	\/* log2 of sb_blocksize *\/$/;"	m	struct:xfs_sb
sb_blocksize	xfs_sb.h	/^	__be32		sb_blocksize;	\/* logical block size, bytes *\/$/;"	m	struct:xfs_dsb
sb_blocksize	xfs_sb.h	/^	__uint32_t	sb_blocksize;	\/* logical block size, bytes *\/$/;"	m	struct:xfs_sb
sb_dblocks	xfs_sb.h	/^	__be64		sb_dblocks;	\/* number of data blocks *\/$/;"	m	struct:xfs_dsb
sb_dblocks	xfs_sb.h	/^	xfs_drfsbno_t	sb_dblocks;	\/* number of data blocks *\/$/;"	m	struct:xfs_sb
sb_dirblklog	xfs_sb.h	/^	__u8		sb_dirblklog;	\/* log2 of dir block size (fsbs) *\/$/;"	m	struct:xfs_dsb
sb_dirblklog	xfs_sb.h	/^	__uint8_t	sb_dirblklog;	\/* log2 of dir block size (fsbs) *\/$/;"	m	struct:xfs_sb
sb_fdblocks	xfs_sb.h	/^	__be64		sb_fdblocks;	\/* free data blocks *\/$/;"	m	struct:xfs_dsb
sb_fdblocks	xfs_sb.h	/^	__uint64_t	sb_fdblocks;	\/* free data blocks *\/$/;"	m	struct:xfs_sb
sb_features2	xfs_sb.h	/^	__be32		sb_features2;	\/* additional feature bits *\/$/;"	m	struct:xfs_dsb
sb_features2	xfs_sb.h	/^	__uint32_t	sb_features2;	\/* additional feature bits *\/$/;"	m	struct:xfs_sb
sb_flags	xfs_sb.h	/^	__u8		sb_flags;	\/* misc. flags *\/$/;"	m	struct:xfs_dsb
sb_flags	xfs_sb.h	/^	__uint8_t	sb_flags;	\/* misc. flags *\/$/;"	m	struct:xfs_sb
sb_fname	xfs_sb.h	/^	char		sb_fname[12];	\/* file system name *\/$/;"	m	struct:xfs_dsb
sb_fname	xfs_sb.h	/^	char		sb_fname[12];	\/* file system name *\/$/;"	m	struct:xfs_sb
sb_frextents	xfs_sb.h	/^	__be64		sb_frextents;	\/* free realtime extents *\/$/;"	m	struct:xfs_dsb
sb_frextents	xfs_sb.h	/^	__uint64_t	sb_frextents;	\/* free realtime extents *\/$/;"	m	struct:xfs_sb
sb_gquotino	xfs_sb.h	/^	__be64		sb_gquotino;	\/* group quota inode *\/$/;"	m	struct:xfs_dsb
sb_gquotino	xfs_sb.h	/^	xfs_ino_t	sb_gquotino;	\/* group quota inode *\/$/;"	m	struct:xfs_sb
sb_icount	xfs_sb.h	/^	__be64		sb_icount;	\/* allocated inodes *\/$/;"	m	struct:xfs_dsb
sb_icount	xfs_sb.h	/^	__uint64_t	sb_icount;	\/* allocated inodes *\/$/;"	m	struct:xfs_sb
sb_ifree	xfs_sb.h	/^	__be64		sb_ifree;	\/* free inodes *\/$/;"	m	struct:xfs_dsb
sb_ifree	xfs_sb.h	/^	__uint64_t	sb_ifree;	\/* free inodes *\/$/;"	m	struct:xfs_sb
sb_imax_pct	xfs_sb.h	/^	__u8		sb_imax_pct;	\/* max % of fs for inode space *\/$/;"	m	struct:xfs_dsb
sb_imax_pct	xfs_sb.h	/^	__uint8_t	sb_imax_pct;	\/* max % of fs for inode space *\/$/;"	m	struct:xfs_sb
sb_inoalignmt	xfs_sb.h	/^	__be32		sb_inoalignmt;	\/* inode chunk alignment, fsblocks *\/$/;"	m	struct:xfs_dsb
sb_inoalignmt	xfs_sb.h	/^	xfs_extlen_t	sb_inoalignmt;	\/* inode chunk alignment, fsblocks *\/$/;"	m	struct:xfs_sb
sb_inodelog	xfs_sb.h	/^	__u8		sb_inodelog;	\/* log2 of sb_inodesize *\/$/;"	m	struct:xfs_dsb
sb_inodelog	xfs_sb.h	/^	__uint8_t	sb_inodelog;	\/* log2 of sb_inodesize *\/$/;"	m	struct:xfs_sb
sb_inodesize	xfs_sb.h	/^	__be16		sb_inodesize;	\/* inode size, bytes *\/$/;"	m	struct:xfs_dsb
sb_inodesize	xfs_sb.h	/^	__uint16_t	sb_inodesize;	\/* inode size, bytes *\/$/;"	m	struct:xfs_sb
sb_inopblock	xfs_sb.h	/^	__be16		sb_inopblock;	\/* inodes per block *\/$/;"	m	struct:xfs_dsb
sb_inopblock	xfs_sb.h	/^	__uint16_t	sb_inopblock;	\/* inodes per block *\/$/;"	m	struct:xfs_sb
sb_inopblog	xfs_sb.h	/^	__u8		sb_inopblog;	\/* log2 of sb_inopblock *\/$/;"	m	struct:xfs_dsb
sb_inopblog	xfs_sb.h	/^	__uint8_t	sb_inopblog;	\/* log2 of sb_inopblock *\/$/;"	m	struct:xfs_sb
sb_inprogress	xfs_sb.h	/^	__u8		sb_inprogress;	\/* mkfs is in progress, don't mount *\/$/;"	m	struct:xfs_dsb
sb_inprogress	xfs_sb.h	/^	__uint8_t	sb_inprogress;	\/* mkfs is in progress, don't mount *\/$/;"	m	struct:xfs_sb
sb_logblocks	xfs_sb.h	/^	__be32		sb_logblocks;	\/* number of log blocks *\/$/;"	m	struct:xfs_dsb
sb_logblocks	xfs_sb.h	/^	xfs_extlen_t	sb_logblocks;	\/* number of log blocks *\/$/;"	m	struct:xfs_sb
sb_logsectlog	xfs_sb.h	/^	__u8		sb_logsectlog;	\/* log2 of the log sector size *\/$/;"	m	struct:xfs_dsb
sb_logsectlog	xfs_sb.h	/^	__uint8_t	sb_logsectlog;	\/* log2 of the log sector size *\/$/;"	m	struct:xfs_sb
sb_logsectsize	xfs_sb.h	/^	__be16		sb_logsectsize;	\/* sector size for the log, bytes *\/$/;"	m	struct:xfs_dsb
sb_logsectsize	xfs_sb.h	/^	__uint16_t	sb_logsectsize;	\/* sector size for the log, bytes *\/$/;"	m	struct:xfs_sb
sb_logstart	xfs_sb.h	/^	__be64		sb_logstart;	\/* starting block of log if internal *\/$/;"	m	struct:xfs_dsb
sb_logstart	xfs_sb.h	/^	xfs_dfsbno_t	sb_logstart;	\/* starting block of log if internal *\/$/;"	m	struct:xfs_sb
sb_logsunit	xfs_sb.h	/^	__be32		sb_logsunit;	\/* stripe unit size for the log *\/$/;"	m	struct:xfs_dsb
sb_logsunit	xfs_sb.h	/^	__uint32_t	sb_logsunit;	\/* stripe unit size for the log *\/$/;"	m	struct:xfs_sb
sb_magicnum	xfs_sb.h	/^	__be32		sb_magicnum;	\/* magic number == XFS_SB_MAGIC *\/$/;"	m	struct:xfs_dsb
sb_magicnum	xfs_sb.h	/^	__uint32_t	sb_magicnum;	\/* magic number == XFS_SB_MAGIC *\/$/;"	m	struct:xfs_sb
sb_qflags	xfs_sb.h	/^	__be16		sb_qflags;	\/* quota flags *\/$/;"	m	struct:xfs_dsb
sb_qflags	xfs_sb.h	/^	__uint16_t	sb_qflags;	\/* quota flags *\/$/;"	m	struct:xfs_sb
sb_rblocks	xfs_sb.h	/^	__be64		sb_rblocks;	\/* number of realtime blocks *\/$/;"	m	struct:xfs_dsb
sb_rblocks	xfs_sb.h	/^	xfs_drfsbno_t	sb_rblocks;	\/* number of realtime blocks *\/$/;"	m	struct:xfs_sb
sb_rbmblocks	xfs_sb.h	/^	__be32		sb_rbmblocks;	\/* number of rt bitmap blocks *\/$/;"	m	struct:xfs_dsb
sb_rbmblocks	xfs_sb.h	/^	xfs_extlen_t	sb_rbmblocks;	\/* number of rt bitmap blocks *\/$/;"	m	struct:xfs_sb
sb_rbmino	xfs_sb.h	/^	__be64		sb_rbmino;	\/* bitmap inode for realtime extents *\/$/;"	m	struct:xfs_dsb
sb_rbmino	xfs_sb.h	/^	xfs_ino_t	sb_rbmino;	\/* bitmap inode for realtime extents *\/$/;"	m	struct:xfs_sb
sb_rextents	xfs_sb.h	/^	__be64		sb_rextents;	\/* number of realtime extents *\/$/;"	m	struct:xfs_dsb
sb_rextents	xfs_sb.h	/^	xfs_drtbno_t	sb_rextents;	\/* number of realtime extents *\/$/;"	m	struct:xfs_sb
sb_rextsize	xfs_sb.h	/^	__be32		sb_rextsize;	\/* realtime extent size, blocks *\/$/;"	m	struct:xfs_dsb
sb_rextsize	xfs_sb.h	/^	xfs_agblock_t	sb_rextsize;	\/* realtime extent size, blocks *\/$/;"	m	struct:xfs_sb
sb_rextslog	xfs_sb.h	/^	__u8		sb_rextslog;	\/* log2 of sb_rextents *\/$/;"	m	struct:xfs_dsb
sb_rextslog	xfs_sb.h	/^	__uint8_t	sb_rextslog;	\/* log2 of sb_rextents *\/$/;"	m	struct:xfs_sb
sb_rootino	xfs_sb.h	/^	__be64		sb_rootino;	\/* root inode number *\/$/;"	m	struct:xfs_dsb
sb_rootino	xfs_sb.h	/^	xfs_ino_t	sb_rootino;	\/* root inode number *\/$/;"	m	struct:xfs_sb
sb_rsumino	xfs_sb.h	/^	__be64		sb_rsumino;	\/* summary inode for rt bitmap *\/$/;"	m	struct:xfs_dsb
sb_rsumino	xfs_sb.h	/^	xfs_ino_t	sb_rsumino;	\/* summary inode for rt bitmap *\/$/;"	m	struct:xfs_sb
sb_sectlog	xfs_sb.h	/^	__u8		sb_sectlog;	\/* log2 of sb_sectsize *\/$/;"	m	struct:xfs_dsb
sb_sectlog	xfs_sb.h	/^	__uint8_t	sb_sectlog;	\/* log2 of sb_sectsize *\/$/;"	m	struct:xfs_sb
sb_sectsize	xfs_sb.h	/^	__be16		sb_sectsize;	\/* volume sector size, bytes *\/$/;"	m	struct:xfs_dsb
sb_sectsize	xfs_sb.h	/^	__uint16_t	sb_sectsize;	\/* volume sector size, bytes *\/$/;"	m	struct:xfs_sb
sb_shared_vn	xfs_sb.h	/^	__u8		sb_shared_vn;	\/* shared version number *\/$/;"	m	struct:xfs_dsb
sb_shared_vn	xfs_sb.h	/^	__uint8_t	sb_shared_vn;	\/* shared version number *\/$/;"	m	struct:xfs_sb
sb_unit	xfs_sb.h	/^	__be32		sb_unit;	\/* stripe or raid unit *\/$/;"	m	struct:xfs_dsb
sb_unit	xfs_sb.h	/^	__uint32_t	sb_unit;	\/* stripe or raid unit *\/$/;"	m	struct:xfs_sb
sb_uquotino	xfs_sb.h	/^	__be64		sb_uquotino;	\/* user quota inode *\/$/;"	m	struct:xfs_dsb
sb_uquotino	xfs_sb.h	/^	xfs_ino_t	sb_uquotino;	\/* user quota inode *\/$/;"	m	struct:xfs_sb
sb_uuid	xfs_sb.h	/^	uuid_t		sb_uuid;	\/* file system unique id *\/$/;"	m	struct:xfs_dsb
sb_uuid	xfs_sb.h	/^	uuid_t		sb_uuid;	\/* file system unique id *\/$/;"	m	struct:xfs_sb
sb_versionnum	xfs_sb.h	/^	__be16		sb_versionnum;	\/* header version == XFS_SB_VERSION *\/$/;"	m	struct:xfs_dsb
sb_versionnum	xfs_sb.h	/^	__uint16_t	sb_versionnum;	\/* header version == XFS_SB_VERSION *\/$/;"	m	struct:xfs_sb
sb_width	xfs_sb.h	/^	__be32		sb_width;	\/* stripe or raid width *\/$/;"	m	struct:xfs_dsb
sb_width	xfs_sb.h	/^	__uint32_t	sb_width;	\/* stripe or raid width *\/$/;"	m	struct:xfs_sb
sectsize	xfs_fs.h	/^	__u32		sectsize;	\/* (data) sector size, bytes	*\/$/;"	m	struct:xfs_fsop_geom
sectsize	xfs_fs.h	/^	__u32		sectsize;	\/* (data) sector size, bytes	*\/$/;"	m	struct:xfs_fsop_geom_v1
sectsize	xfs_ioctl32.h	/^	__u32		sectsize;	\/* (data) sector size, bytes	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
seen_enough	xfs_attr.h	/^	int				seen_enough;	\/* T\/F: seen enough of list? *\/$/;"	m	struct:xfs_attr_list_context
sequence	xfs_log_priv.h	/^	xfs_lsn_t		sequence;	\/* chkpt sequence # *\/$/;"	m	struct:xfs_cil_ctx
set_posix_acl_flag	xfs_super.h	35;"	d
set_posix_acl_flag	xfs_super.h	38;"	d
set_root	xfs_btree.h	/^	void	(*set_root)(struct xfs_btree_cur *cur,$/;"	m	struct:xfs_btree_ops
sgid_inherit	xfs_sysctl.h	/^	xfs_sysctl_val_t sgid_inherit;	\/* Inherit S_ISGID if process' GID is$/;"	m	struct:xfs_param
size	xfs_attr_leaf.h	/^	__be16	size;			  \/* length of free region *\/$/;"	m	struct:xfs_attr_leaf_map
space_used	xfs_log_priv.h	/^	int			space_used;	\/* aggregate size of regions *\/$/;"	m	struct:xfs_cil_ctx
spinlock_destroy	xfs_linux.h	132;"	d
stale	xfs_dir2_format.h	/^	__be16			stale;		\/* count of stale entries *\/$/;"	m	struct:xfs_dir2_leaf_hdr
stale	xfs_dir2_format.h	/^	__be32		stale;			\/* count of stale lf entries *\/$/;"	m	struct:xfs_dir2_block_tail
start_lsn	xfs_log_priv.h	/^	xfs_lsn_t		start_lsn;	\/* first LSN of chkpt commit *\/$/;"	m	struct:xfs_cil_ctx
startblockval	xfs_bmap_btree.h	/^static inline xfs_filblks_t startblockval(xfs_fsblock_t x)$/;"	f
stats_clear	xfs_sysctl.h	/^	xfs_sysctl_val_t stats_clear;	\/* Reset all XFS statistics to zero. *\/$/;"	m	struct:xfs_param
store	xfs_mru_cache.h	/^	struct radix_tree_root	store;     \/* Core storage data structure.  *\/$/;"	m	struct:xfs_mru_cache	typeref:struct:xfs_mru_cache::radix_tree_root
str	xfs_super.c	/^	char	*str;$/;"	m	struct:proc_xfs_info	file:
suffix_strtoul	xfs_super.c	/^suffix_strtoul(char *s, char **endp, unsigned int base)$/;"	f
sunit	xfs_fs.h	/^	__u32		sunit;		\/* stripe unit, fsblocks	*\/$/;"	m	struct:xfs_fsop_geom
sunit	xfs_fs.h	/^	__u32		sunit;		\/* stripe unit, fsblocks	*\/$/;"	m	struct:xfs_fsop_geom_v1
sunit	xfs_ioctl32.h	/^	__u32		sunit;		\/* stripe unit, fsblocks	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
swidth	xfs_fs.h	/^	__u32		swidth;		\/* stripe width, fsblocks	*\/$/;"	m	struct:xfs_fsop_geom
swidth	xfs_fs.h	/^	__u32		swidth;		\/* stripe width, fsblocks	*\/$/;"	m	struct:xfs_fsop_geom_v1
swidth	xfs_ioctl32.h	/^	__u32		swidth;		\/* stripe width, fsblocks	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
sx_fdtarget	xfs_dfrag.h	/^	__int64_t	sx_fdtarget;	\/* fd of target file *\/$/;"	m	struct:xfs_swapext
sx_fdtarget	xfs_ioctl32.h	/^	__int64_t		sx_fdtarget;	\/* fd of target file *\/$/;"	m	struct:compat_xfs_swapext
sx_fdtmp	xfs_dfrag.h	/^	__int64_t	sx_fdtmp;	\/* fd of tmp file *\/$/;"	m	struct:xfs_swapext
sx_fdtmp	xfs_ioctl32.h	/^	__int64_t		sx_fdtmp;	\/* fd of tmp file *\/$/;"	m	struct:compat_xfs_swapext
sx_length	xfs_dfrag.h	/^	xfs_off_t	sx_length;	\/* leng from offset *\/$/;"	m	struct:xfs_swapext
sx_length	xfs_ioctl32.h	/^	xfs_off_t		sx_length;	\/* leng from offset *\/$/;"	m	struct:compat_xfs_swapext
sx_offset	xfs_dfrag.h	/^	xfs_off_t	sx_offset;	\/* offset into file *\/$/;"	m	struct:xfs_swapext
sx_offset	xfs_ioctl32.h	/^	xfs_off_t		sx_offset;	\/* offset into file *\/$/;"	m	struct:compat_xfs_swapext
sx_pad	xfs_dfrag.h	/^	char		sx_pad[16];	\/* pad space, unused *\/$/;"	m	struct:xfs_swapext
sx_pad	xfs_ioctl32.h	/^	char			sx_pad[16];	\/* pad space, unused *\/$/;"	m	struct:compat_xfs_swapext
sx_stat	xfs_dfrag.h	/^	xfs_bstat_t	sx_stat;	\/* stat of target b4 copy *\/$/;"	m	struct:xfs_swapext
sx_stat	xfs_ioctl32.h	/^	compat_xfs_bstat_t	sx_stat;	\/* stat of target b4 copy *\/$/;"	m	struct:compat_xfs_swapext
sx_version	xfs_dfrag.h	/^	__int64_t	sx_version;	\/* version *\/$/;"	m	struct:xfs_swapext
sx_version	xfs_ioctl32.h	/^	__int64_t		sx_version;	\/* version *\/$/;"	m	struct:compat_xfs_swapext
symlink_mode	xfs_sysctl.h	/^	xfs_sysctl_val_t symlink_mode;	\/* Link creat mode affected by umask *\/$/;"	m	struct:xfs_param
syncd_timer	xfs_sysctl.h	/^	xfs_sysctl_val_t syncd_timer;	\/* Interval between xfssyncd wakeups *\/$/;"	m	struct:xfs_param
t_ag_btree_delta	xfs_trans.h	/^	int64_t			t_ag_btree_delta; \/* debugging counter *\/$/;"	m	struct:xfs_trans
t_ag_flist_delta	xfs_trans.h	/^	int64_t			t_ag_flist_delta; \/* debugging counter *\/$/;"	m	struct:xfs_trans
t_ag_freeblks_delta	xfs_trans.h	/^	int64_t			t_ag_freeblks_delta; \/* debugging counter *\/$/;"	m	struct:xfs_trans
t_agcount_delta	xfs_trans.h	/^	int64_t			t_agcount_delta;\/* superblock agcount change *\/$/;"	m	struct:xfs_trans
t_blk_res	xfs_trans.h	/^	unsigned int		t_blk_res;	\/* # of blocks resvd *\/$/;"	m	struct:xfs_trans
t_blk_res_used	xfs_trans.h	/^	unsigned int		t_blk_res_used;	\/* # of resvd blocks used *\/$/;"	m	struct:xfs_trans
t_busy	xfs_trans.h	/^	struct list_head	t_busy;		\/* list of busy extents *\/$/;"	m	struct:xfs_trans	typeref:struct:xfs_trans::list_head
t_clientid	xfs_log_priv.h	/^	char		   t_clientid;	 \/* who does this belong to;	 : 1  *\/$/;"	m	struct:xlog_ticket
t_cnt	xfs_log_priv.h	/^	char		   t_cnt;	 \/* current count		 : 1  *\/$/;"	m	struct:xlog_ticket
t_commit_lsn	xfs_trans.h	/^	xfs_lsn_t		t_commit_lsn;	\/* log seq num of end of$/;"	m	struct:xfs_trans
t_curr_res	xfs_log_priv.h	/^	int		   t_curr_res;	 \/* current reservation in bytes : 4  *\/$/;"	m	struct:xlog_ticket
t_dblocks_delta	xfs_trans.h	/^	int64_t			t_dblocks_delta;\/* superblock dblocks change *\/$/;"	m	struct:xfs_trans
t_dqinfo	xfs_trans.h	/^	struct xfs_dquot_acct   *t_dqinfo;	\/* acctg info for dquots *\/$/;"	m	struct:xfs_trans	typeref:struct:xfs_trans::xfs_dquot_acct
t_fdblocks_delta	xfs_trans.h	/^	int64_t			t_fdblocks_delta; \/* superblock fdblocks chg *\/$/;"	m	struct:xfs_trans
t_flags	xfs_log_priv.h	/^	char		   t_flags;	 \/* properties of reservation	 : 1  *\/$/;"	m	struct:xlog_ticket
t_flags	xfs_trans.h	/^	unsigned int		t_flags;	\/* misc flags *\/$/;"	m	struct:xfs_trans
t_frextents_delta	xfs_trans.h	/^	int64_t			t_frextents_delta;\/* superblock freextents chg*\/$/;"	m	struct:xfs_trans
t_header	xfs_trans.h	/^	xfs_trans_header_t	t_header;	\/* header for in-log trans *\/$/;"	m	struct:xfs_trans
t_icount_delta	xfs_trans.h	/^	int64_t			t_icount_delta;	\/* superblock icount change *\/$/;"	m	struct:xfs_trans
t_ifree_delta	xfs_trans.h	/^	int64_t			t_ifree_delta;	\/* superblock ifree change *\/$/;"	m	struct:xfs_trans
t_imaxpct_delta	xfs_trans.h	/^	int64_t			t_imaxpct_delta;\/* superblock imaxpct change *\/$/;"	m	struct:xfs_trans
t_items	xfs_trans.h	/^	struct list_head	t_items;	\/* log item descriptors *\/$/;"	m	struct:xfs_trans	typeref:struct:xfs_trans::list_head
t_log_count	xfs_trans.h	/^	unsigned int		t_log_count;	\/* count for perm log res *\/$/;"	m	struct:xfs_trans
t_log_res	xfs_trans.h	/^	unsigned int		t_log_res;	\/* amt of log space resvd *\/$/;"	m	struct:xfs_trans
t_logcb	xfs_trans.h	/^	xfs_log_callback_t	t_logcb;	\/* log callback struct *\/$/;"	m	struct:xfs_trans
t_lsn	xfs_trans.h	/^	xfs_lsn_t		t_lsn;		\/* log seq num of start of$/;"	m	struct:xfs_trans
t_magic	xfs_trans.h	/^	unsigned int		t_magic;	\/* magic number *\/$/;"	m	struct:xfs_trans
t_mountp	xfs_trans.h	/^	struct xfs_mount	*t_mountp;	\/* ptr to fs mount struct *\/$/;"	m	struct:xfs_trans	typeref:struct:xfs_trans::xfs_mount
t_nsec	xfs_dinode.h	/^	__be32		t_nsec;		\/* timestamp nanoseconds *\/$/;"	m	struct:xfs_timestamp
t_nsec	xfs_inode.h	/^	__int32_t	t_nsec;		\/* timestamp nanoseconds *\/$/;"	m	struct:xfs_ictimestamp
t_ocnt	xfs_log_priv.h	/^	char		   t_ocnt;	 \/* original count		 : 1  *\/$/;"	m	struct:xlog_ticket
t_pflags	xfs_trans.h	/^	unsigned long		t_pflags;	\/* saved process flags state *\/$/;"	m	struct:xfs_trans
t_queue	xfs_log_priv.h	/^	struct list_head   t_queue;	 \/* reserve\/write queue *\/$/;"	m	struct:xlog_ticket	typeref:struct:xlog_ticket::list_head
t_rblocks_delta	xfs_trans.h	/^	int64_t			t_rblocks_delta;\/* superblock rblocks change *\/$/;"	m	struct:xfs_trans
t_rbmblocks_delta	xfs_trans.h	/^	int64_t			t_rbmblocks_delta;\/* superblock rbmblocks chg *\/$/;"	m	struct:xfs_trans
t_ref	xfs_log_priv.h	/^	atomic_t	   t_ref;	 \/* ticket reference count       : 4  *\/$/;"	m	struct:xlog_ticket
t_res_arr	xfs_log_priv.h	/^	xlog_res_t	   t_res_arr[XLOG_TIC_LEN_MAX];  \/* array of res : 8 * 15 *\/ $/;"	m	struct:xlog_ticket
t_res_arr_sum	xfs_log_priv.h	/^	uint		   t_res_arr_sum;		 \/* array sum    : 4 *\/$/;"	m	struct:xlog_ticket
t_res_fdblocks_delta	xfs_trans.h	/^	int64_t			t_res_fdblocks_delta; \/* on-disk only chg *\/$/;"	m	struct:xfs_trans
t_res_frextents_delta	xfs_trans.h	/^	int64_t			t_res_frextents_delta; \/* on-disk only chg *\/$/;"	m	struct:xfs_trans
t_res_num	xfs_log_priv.h	/^	uint		   t_res_num;                    \/* num in array : 4 *\/$/;"	m	struct:xlog_ticket
t_res_num_ophdrs	xfs_log_priv.h	/^	uint		   t_res_num_ophdrs;		 \/* num op hdrs  : 4 *\/$/;"	m	struct:xlog_ticket
t_res_o_flow	xfs_log_priv.h	/^	uint		   t_res_o_flow;		 \/* sum overflow : 4 *\/$/;"	m	struct:xlog_ticket
t_rextents_delta	xfs_trans.h	/^	int64_t			t_rextents_delta;\/* superblocks rextents chg *\/$/;"	m	struct:xfs_trans
t_rextsize_delta	xfs_trans.h	/^	int64_t			t_rextsize_delta;\/* superblock rextsize chg *\/$/;"	m	struct:xfs_trans
t_rextslog_delta	xfs_trans.h	/^	int64_t			t_rextslog_delta;\/* superblocks rextslog chg *\/$/;"	m	struct:xfs_trans
t_rtx_res	xfs_trans.h	/^	unsigned int		t_rtx_res;	\/* # of rt extents resvd *\/$/;"	m	struct:xfs_trans
t_rtx_res_used	xfs_trans.h	/^	unsigned int		t_rtx_res_used;	\/* # of resvd rt extents used *\/$/;"	m	struct:xfs_trans
t_sec	xfs_dinode.h	/^	__be32		t_sec;		\/* timestamp seconds *\/$/;"	m	struct:xfs_timestamp
t_sec	xfs_inode.h	/^	__int32_t	t_sec;		\/* timestamp seconds *\/$/;"	m	struct:xfs_ictimestamp
t_task	xfs_log_priv.h	/^	struct task_struct *t_task;	 \/* task that owns this ticket *\/$/;"	m	struct:xlog_ticket	typeref:struct:xlog_ticket::task_struct
t_ticket	xfs_trans.h	/^	struct xlog_ticket	*t_ticket;	\/* log mgr ticket *\/$/;"	m	struct:xfs_trans	typeref:struct:xfs_trans::xlog_ticket
t_tid	xfs_log_priv.h	/^	xlog_tid_t	   t_tid;	 \/* transaction identifier	 : 4  *\/$/;"	m	struct:xlog_ticket
t_trans_type	xfs_log_priv.h	/^	uint		   t_trans_type; \/* transaction type             : 4  *\/$/;"	m	struct:xlog_ticket
t_type	xfs_trans.h	/^	unsigned int		t_type;		\/* transaction type *\/$/;"	m	struct:xfs_trans
t_unit_res	xfs_log_priv.h	/^	int		   t_unit_res;	 \/* unit reservation in bytes    : 4  *\/$/;"	m	struct:xlog_ticket
tag	xfs_dir2_format.h	/^	__be16			tag;		\/* starting offset of us *\/$/;"	m	struct:xfs_dir2_data_unused
th_magic	xfs_trans.h	/^	uint		th_magic;		\/* magic number *\/$/;"	m	struct:xfs_trans_header
th_num_items	xfs_trans.h	/^	uint		th_num_items;		\/* num items logged by trans *\/$/;"	m	struct:xfs_trans_header
th_tid	xfs_trans.h	/^	__int32_t	th_tid;			\/* transaction id (unused) *\/$/;"	m	struct:xfs_trans_header
th_type	xfs_trans.h	/^	uint		th_type;		\/* transaction type *\/$/;"	m	struct:xfs_trans_header
ticket	xfs_log_priv.h	/^	struct xlog_ticket	*ticket;	\/* chkpt ticket *\/$/;"	m	struct:xfs_cil_ctx	typeref:struct:xfs_cil_ctx::xlog_ticket
time_zero	xfs_mru_cache.h	/^	unsigned long		time_zero; \/* Time first element was added. *\/$/;"	m	struct:xfs_mru_cache
timespec_t	time.h	/^typedef struct timespec timespec_t;$/;"	t	typeref:struct:timespec
tokens	xfs_super.c	/^static const match_table_t tokens = {$/;"	v	file:
total	xfs_alloc.h	/^	xfs_extlen_t	total;		\/* total blocks needed in xaction *\/$/;"	m	struct:xfs_alloc_arg
total	xfs_bmap.h	/^	xfs_extlen_t		total;	\/* total blocks needed for xaction *\/$/;"	m	struct:xfs_bmalloca
total	xfs_da_btree.h	/^	xfs_extlen_t	total;		\/* total blocks needed, for 1st bmap *\/$/;"	m	struct:xfs_da_args
totsize	xfs_attr_sf.h	/^		__be16	totsize;	\/* total bytes in shortform list *\/$/;"	m	struct:xfs_attr_shortform::xfs_attr_sf_hdr
tp	xfs_alloc.h	/^	struct xfs_trans *tp;		\/* transaction pointer *\/$/;"	m	struct:xfs_alloc_arg	typeref:struct:xfs_alloc_arg::xfs_trans
tp	xfs_bmap.h	/^	struct xfs_trans	*tp;	\/* transaction pointer *\/$/;"	m	struct:xfs_bmalloca	typeref:struct:xfs_bmalloca::xfs_trans
tr_addafork	xfs_mount.h	/^	uint	tr_addafork;	\/* cvt inode to attributed trans *\/$/;"	m	struct:xfs_trans_reservations
tr_attrinval	xfs_mount.h	/^	uint	tr_attrinval;	\/* attr fork buffer invalidation *\/$/;"	m	struct:xfs_trans_reservations
tr_attrrm	xfs_mount.h	/^	uint	tr_attrrm;	\/* remove an attribute *\/$/;"	m	struct:xfs_trans_reservations
tr_attrset	xfs_mount.h	/^	uint	tr_attrset;	\/* set\/create an attribute *\/$/;"	m	struct:xfs_trans_reservations
tr_clearagi	xfs_mount.h	/^	uint	tr_clearagi;	\/* clear bad agi unlinked ino bucket *\/$/;"	m	struct:xfs_trans_reservations
tr_create	xfs_mount.h	/^	uint	tr_create;	\/* create trans *\/$/;"	m	struct:xfs_trans_reservations
tr_growdata	xfs_mount.h	/^	uint	tr_growdata;	\/* fs data section grow trans *\/$/;"	m	struct:xfs_trans_reservations
tr_growrtalloc	xfs_mount.h	/^	uint	tr_growrtalloc;	\/* grow realtime allocations *\/$/;"	m	struct:xfs_trans_reservations
tr_growrtfree	xfs_mount.h	/^	uint	tr_growrtfree;	\/* grow realtime freeing *\/$/;"	m	struct:xfs_trans_reservations
tr_growrtzero	xfs_mount.h	/^	uint	tr_growrtzero;	\/* grow realtime zeroing *\/$/;"	m	struct:xfs_trans_reservations
tr_ichange	xfs_mount.h	/^	uint	tr_ichange;	\/* inode update trans *\/$/;"	m	struct:xfs_trans_reservations
tr_ifree	xfs_mount.h	/^	uint	tr_ifree;	\/* inode free trans *\/$/;"	m	struct:xfs_trans_reservations
tr_itruncate	xfs_mount.h	/^	uint	tr_itruncate;	\/* truncate trans *\/$/;"	m	struct:xfs_trans_reservations
tr_link	xfs_mount.h	/^	uint	tr_link;	\/* link trans *\/$/;"	m	struct:xfs_trans_reservations
tr_mkdir	xfs_mount.h	/^	uint	tr_mkdir;	\/* mkdir trans *\/$/;"	m	struct:xfs_trans_reservations
tr_remove	xfs_mount.h	/^	uint	tr_remove;	\/* unlink trans *\/$/;"	m	struct:xfs_trans_reservations
tr_rename	xfs_mount.h	/^	uint	tr_rename;	\/* rename trans *\/$/;"	m	struct:xfs_trans_reservations
tr_swrite	xfs_mount.h	/^	uint	tr_swrite;	\/* sync write inode trans *\/$/;"	m	struct:xfs_trans_reservations
tr_symlink	xfs_mount.h	/^	uint	tr_symlink;	\/* symlink trans *\/$/;"	m	struct:xfs_trans_reservations
tr_write	xfs_mount.h	/^	uint	tr_write;	\/* extent alloc trans *\/$/;"	m	struct:xfs_trans_reservations
tr_writeid	xfs_mount.h	/^	uint	tr_writeid;	\/* write setuid\/setgid file *\/$/;"	m	struct:xfs_trans_reservations
trans	xfs_da_btree.h	/^	struct xfs_trans *trans;	\/* current trans (changes over time) *\/$/;"	m	struct:xfs_da_args	typeref:struct:xfs_da_args::xfs_trans
tv_nsec	xfs_fs.h	/^	__s32		tv_nsec;	\/* and nanoseconds	*\/$/;"	m	struct:xfs_bstime
tv_nsec	xfs_ioctl32.h	/^	__s32		tv_nsec;	\/* and nanoseconds	*\/$/;"	m	struct:compat_xfs_bstime
tv_sec	xfs_fs.h	/^	time_t		tv_sec;		\/* seconds		*\/$/;"	m	struct:xfs_bstime
tv_sec	xfs_ioctl32.h	/^	compat_time_t	tv_sec;		\/* seconds		*\/$/;"	m	struct:compat_xfs_bstime
type	xfs_alloc.h	/^	xfs_alloctype_t	type;		\/* allocation type XFS_ALLOCTYPE_... *\/$/;"	m	struct:xfs_alloc_arg
type	xfs_mount.c	/^	short type;	\/* 0 = integer$/;"	m	struct:__anon28	file:
ubuffer	xfs_fs.h	/^	void		__user *ubuffer;\/* user buffer for inode desc.	*\/$/;"	m	struct:xfs_fsop_bulkreq
ubuffer	xfs_ioctl32.h	/^	compat_uptr_t	ubuffer;	\/* user buffer for inode desc.	*\/$/;"	m	struct:compat_xfs_fsop_bulkreq
update_cursor	xfs_btree.h	/^	void	(*update_cursor)(struct xfs_btree_cur *src,$/;"	m	struct:xfs_btree_ops
update_lastrec	xfs_btree.h	/^	void	(*update_lastrec)(struct xfs_btree_cur *cur,$/;"	m	struct:xfs_btree_ops
usedbytes	xfs_attr_leaf.h	/^	__be16	usedbytes;		\/* num bytes of names\/values stored *\/$/;"	m	struct:xfs_attr_leaf_hdr
userdata	xfs_alloc.h	/^	char		userdata;	\/* set if this is user data *\/$/;"	m	struct:xfs_alloc_arg
userdata	xfs_bmap.h	/^	char			userdata;\/* set if is user data *\/$/;"	m	struct:xfs_bmalloca
uu_clockseq	uuid.c	/^	__be16	uu_clockseq;$/;"	m	struct:__anon2	file:
uu_node	uuid.c	/^	__be16	uu_node[3];$/;"	m	struct:__anon2	file:
uu_timehi	uuid.c	/^	__be16	uu_timehi;$/;"	m	struct:__anon2	file:
uu_timelow	uuid.c	/^	__be32	uu_timelow;$/;"	m	struct:__anon2	file:
uu_timemid	uuid.c	/^	__be16	uu_timemid;$/;"	m	struct:__anon2	file:
uuid	xfs_fs.h	/^	unsigned char	uuid[16];	\/* unique id of the filesystem	*\/$/;"	m	struct:xfs_fsop_geom
uuid	xfs_fs.h	/^	unsigned char	uuid[16];	\/* unique id of the filesystem	*\/$/;"	m	struct:xfs_fsop_geom_v1
uuid	xfs_ioctl32.h	/^	unsigned char	uuid[16];	\/* unique id of the filesystem	*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
uuid_equal	uuid.c	/^uuid_equal(uuid_t *uuid1, uuid_t *uuid2)$/;"	f
uuid_getnodeuniq	uuid.c	/^uuid_getnodeuniq(uuid_t *uuid, int fsid [2])$/;"	f
uuid_is_nil	uuid.c	/^uuid_is_nil(uuid_t *uuid)$/;"	f
uuid_t	uuid.h	/^} uuid_t;$/;"	t	typeref:struct:__anon3
val	xfs_fs.h	/^typedef struct { __u32 val[2]; } xfs_fsid_t; \/* file system id type *\/$/;"	m	struct:__anon21
val	xfs_sysctl.h	/^	int val;$/;"	m	struct:xfs_sysctl_val
value	xfs_da_btree.h	/^	__uint8_t	*value;		\/* set of bytes (maybe contain NULLs) *\/$/;"	m	struct:xfs_da_args
value	xfs_mru_cache.c	/^	void		*value;$/;"	m	struct:xfs_mru_cache_elem	file:
valueblk	xfs_attr_leaf.h	/^	__be32	valueblk;		\/* block number of value bytes *\/$/;"	m	struct:xfs_attr_leaf_name_remote
valueblk	xfs_attr_leaf.h	/^	xfs_dablk_t	valueblk;	\/* block number of value bytes *\/$/;"	m	struct:xfs_attr_inactive_list
valuelen	xfs_attr_leaf.h	/^	__be16	valuelen;		\/* number of bytes in value *\/$/;"	m	struct:xfs_attr_leaf_name_local
valuelen	xfs_attr_leaf.h	/^	__be32	valuelen;		\/* number of bytes in value *\/$/;"	m	struct:xfs_attr_leaf_name_remote
valuelen	xfs_attr_leaf.h	/^	int		valuelen;	\/* number of bytes in value *\/$/;"	m	struct:xfs_attr_inactive_list
valuelen	xfs_attr_sf.h	/^		__uint8_t valuelen;	\/* actual length of value (no NULL) *\/$/;"	m	struct:xfs_attr_shortform::xfs_attr_sf_entry
valuelen	xfs_attr_sf.h	/^	__uint8_t	valuelen;	\/* length of value *\/$/;"	m	struct:xfs_attr_sf_sort
valuelen	xfs_da_btree.h	/^	int		valuelen;	\/* length of value *\/$/;"	m	struct:xfs_da_args
valuelist	xfs_attr_leaf.h	/^	xfs_attr_leaf_name_remote_t valuelist;	\/* grows from bottom of buf *\/$/;"	m	struct:xfs_attr_leafblock
version	xfs_fs.h	/^	__s32		version;	\/* structure version		*\/$/;"	m	struct:xfs_fsop_geom
version	xfs_fs.h	/^	__s32		version;	\/* structure version		*\/$/;"	m	struct:xfs_fsop_geom_v1
version	xfs_ioctl32.h	/^	__s32		version;	\/* structure version		*\/$/;"	m	struct:compat_xfs_fsop_geom_v1
vfs_exitquota	xfs_super.h	27;"	d
vfs_exitquota	xfs_super.h	30;"	d
vfs_initquota	xfs_super.h	26;"	d
vfs_initquota	xfs_super.h	29;"	d
vn_active	xfs_stats.h	/^	__uint32_t		vn_active;	\/* # vnodes not on free lists *\/$/;"	m	struct:xfsstats
vn_alloc	xfs_stats.h	/^	__uint32_t		vn_alloc;	\/* # times vn_alloc called *\/$/;"	m	struct:xfsstats
vn_free	xfs_stats.h	/^	__uint32_t		vn_free;	\/* # times vn_free called *\/$/;"	m	struct:xfsstats
vn_get	xfs_stats.h	/^	__uint32_t		vn_get;		\/* # times vn_get called *\/$/;"	m	struct:xfsstats
vn_hold	xfs_stats.h	/^	__uint32_t		vn_hold;	\/* # times vn_hold called *\/$/;"	m	struct:xfsstats
vn_reclaim	xfs_stats.h	/^	__uint32_t		vn_reclaim;	\/* # times vn_reclaim called *\/$/;"	m	struct:xfsstats
vn_rele	xfs_stats.h	/^	__uint32_t		vn_rele;	\/* # times vn_rele called *\/$/;"	m	struct:xfsstats
vn_remove	xfs_stats.h	/^	__uint32_t		vn_remove;	\/* # times vn_remove called *\/$/;"	m	struct:xfsstats
waiters	xfs_log_priv.h	/^	struct list_head	waiters;$/;"	m	struct:xlog_grant_head	typeref:struct:xlog_grant_head::list_head
wasdel	xfs_alloc.h	/^	char		wasdel;		\/* set if allocation was prev delayed *\/$/;"	m	struct:xfs_alloc_arg
wasdel	xfs_bmap.h	/^	char			wasdel;	\/* replacing a delayed allocation *\/$/;"	m	struct:xfs_bmalloca
wasfromfl	xfs_alloc.h	/^	char		wasfromfl;	\/* set if allocation is from freelist *\/$/;"	m	struct:xfs_alloc_arg
whichfork	xfs_btree.h	/^			char		whichfork;	\/* data or attr fork *\/$/;"	m	struct:xfs_btree_cur::__anon11::__anon13
whichfork	xfs_da_btree.h	/^	int		whichfork;	\/* data or attribute fork *\/$/;"	m	struct:xfs_da_args
work	xfs_mru_cache.h	/^	struct delayed_work	work;      \/* Workqueue data for reaping.   *\/$/;"	m	struct:xfs_mru_cache	typeref:struct:xfs_mru_cache::delayed_work
xa_ail	xfs_trans_priv.h	/^	struct list_head	xa_ail;$/;"	m	struct:xfs_ail	typeref:struct:xfs_ail::list_head
xa_cursors	xfs_trans_priv.h	/^	struct list_head	xa_cursors;$/;"	m	struct:xfs_ail	typeref:struct:xfs_ail::list_head
xa_last_pushed_lsn	xfs_trans_priv.h	/^	xfs_lsn_t		xa_last_pushed_lsn;$/;"	m	struct:xfs_ail
xa_lock	xfs_trans_priv.h	/^	spinlock_t		xa_lock;$/;"	m	struct:xfs_ail
xa_log_flush	xfs_trans_priv.h	/^	int			xa_log_flush;$/;"	m	struct:xfs_ail
xa_mount	xfs_trans_priv.h	/^	struct xfs_mount	*xa_mount;$/;"	m	struct:xfs_ail	typeref:struct:xfs_ail::xfs_mount
xa_target	xfs_trans_priv.h	/^	xfs_lsn_t		xa_target;$/;"	m	struct:xfs_ail
xa_task	xfs_trans_priv.h	/^	struct task_struct	*xa_task;$/;"	m	struct:xfs_ail	typeref:struct:xfs_ail::task_struct
xb_busy_locked	xfs_stats.h	/^	__uint32_t		xb_busy_locked;$/;"	m	struct:xfsstats
xb_create	xfs_stats.h	/^	__uint32_t		xb_create;$/;"	m	struct:xfsstats
xb_get	xfs_stats.h	/^	__uint32_t		xb_get;$/;"	m	struct:xfsstats
xb_get_locked	xfs_stats.h	/^	__uint32_t		xb_get_locked;$/;"	m	struct:xfsstats
xb_get_locked_waited	xfs_stats.h	/^	__uint32_t		xb_get_locked_waited;$/;"	m	struct:xfsstats
xb_get_read	xfs_stats.h	/^	__uint32_t		xb_get_read;$/;"	m	struct:xfsstats
xb_miss_locked	xfs_stats.h	/^	__uint32_t		xb_miss_locked;$/;"	m	struct:xfsstats
xb_page_found	xfs_stats.h	/^	__uint32_t		xb_page_found;$/;"	m	struct:xfsstats
xb_page_retries	xfs_stats.h	/^	__uint32_t		xb_page_retries;$/;"	m	struct:xfsstats
xb_to_gfp	xfs_buf.c	61;"	d	file:
xb_to_km	xfs_buf.c	65;"	d	file:
xbf_count	xfs_bmap.h	/^	int			xbf_count;	\/* count of items on list *\/$/;"	m	struct:xfs_bmap_free
xbf_first	xfs_bmap.h	/^	xfs_bmap_free_item_t	*xbf_first;	\/* list of to-be-free extents *\/$/;"	m	struct:xfs_bmap_free
xbf_low	xfs_bmap.h	/^	int			xbf_low;	\/* alloc in low mode *\/$/;"	m	struct:xfs_bmap_free
xbfi_blockcount	xfs_bmap.h	/^	xfs_extlen_t		xbfi_blockcount;\/* number of blocks in extent *\/$/;"	m	struct:xfs_bmap_free_item
xbfi_next	xfs_bmap.h	/^	struct xfs_bmap_free_item *xbfi_next;	\/* link to next entry *\/$/;"	m	struct:xfs_bmap_free_item	typeref:struct:xfs_bmap_free_item::xfs_bmap_free_item
xbfi_startblock	xfs_bmap.h	/^	xfs_fsblock_t		xbfi_startblock;\/* starting fs block number *\/$/;"	m	struct:xfs_bmap_free_item
xc_cil	xfs_log_priv.h	/^	struct list_head	xc_cil;$/;"	m	struct:xfs_cil	typeref:struct:xfs_cil::list_head
xc_cil_lock	xfs_log_priv.h	/^	spinlock_t		xc_cil_lock;$/;"	m	struct:xfs_cil
xc_commit_wait	xfs_log_priv.h	/^	wait_queue_head_t	xc_commit_wait;$/;"	m	struct:xfs_cil
xc_committing	xfs_log_priv.h	/^	struct list_head	xc_committing;$/;"	m	struct:xfs_cil	typeref:struct:xfs_cil::list_head
xc_ctx	xfs_log_priv.h	/^	struct xfs_cil_ctx	*xc_ctx;$/;"	m	struct:xfs_cil	typeref:struct:xfs_cil::xfs_cil_ctx
xc_ctx_lock	xfs_log_priv.h	/^	struct rw_semaphore	xc_ctx_lock;$/;"	m	struct:xfs_cil	typeref:struct:xfs_cil::rw_semaphore
xc_current_sequence	xfs_log_priv.h	/^	xfs_lsn_t		xc_current_sequence;$/;"	m	struct:xfs_cil
xc_log	xfs_log_priv.h	/^	struct log		*xc_log;$/;"	m	struct:xfs_cil	typeref:struct:xfs_cil::log
xfs_Gqm	xfs_qm.c	/^struct xfs_qm	*xfs_Gqm;$/;"	v	typeref:struct:xfs_qm
xfs_Gqm_init	xfs_qm.c	/^xfs_Gqm_init(void)$/;"	f
xfs_Gqm_lock	xfs_qm.c	/^struct mutex	xfs_Gqm_lock;$/;"	v	typeref:struct:mutex
xfs_acl	xfs_acl.h	/^struct xfs_acl {$/;"	s
xfs_acl_chmod	xfs_acl.c	/^xfs_acl_chmod(struct inode *inode)$/;"	f
xfs_acl_chmod	xfs_acl.h	59;"	d
xfs_acl_entry	xfs_acl.h	/^	struct xfs_acl_entry {$/;"	s	struct:xfs_acl
xfs_acl_exists	xfs_acl.c	/^xfs_acl_exists(struct inode *inode, unsigned char *name)$/;"	f	file:
xfs_acl_from_disk	xfs_acl.c	/^xfs_acl_from_disk(struct xfs_acl *aclp)$/;"	f
xfs_acl_to_disk	xfs_acl.c	/^xfs_acl_to_disk(struct xfs_acl *aclp, const struct posix_acl *acl)$/;"	f
xfs_add_to_ioend	xfs_aops.c	/^xfs_add_to_ioend($/;"	f
xfs_address_space_operations	xfs_aops.c	/^const struct address_space_operations xfs_address_space_operations = {$/;"	v	typeref:struct:address_space_operations
xfs_aextnum_t	xfs_types.h	/^typedef __int16_t	xfs_aextnum_t;	\/* # extents in an attribute fork *\/$/;"	t
xfs_agblock_t	xfs_types.h	/^typedef __uint32_t	xfs_agblock_t;	\/* blockno in alloc. group *\/$/;"	t
xfs_agf	xfs_ag.h	/^typedef struct xfs_agf {$/;"	s
xfs_agf_t	xfs_ag.h	/^} xfs_agf_t;$/;"	t	typeref:struct:xfs_agf
xfs_agfl	xfs_ag.h	/^typedef struct xfs_agfl {$/;"	s
xfs_agfl_t	xfs_ag.h	/^} xfs_agfl_t;$/;"	t	typeref:struct:xfs_agfl
xfs_agi	xfs_ag.h	/^typedef struct xfs_agi {$/;"	s
xfs_agi_t	xfs_ag.h	/^} xfs_agi_t;$/;"	t	typeref:struct:xfs_agi
xfs_agino_t	xfs_inum.h	/^typedef	__uint32_t	xfs_agino_t;	\/* within allocation grp inode number *\/$/;"	t
xfs_agnumber_t	xfs_types.h	/^typedef	__uint32_t	xfs_agnumber_t;	\/* allocation group number *\/$/;"	t
xfs_ail	xfs_trans_priv.h	/^struct xfs_ail {$/;"	s
xfs_ail_check	xfs_trans_ail.c	/^xfs_ail_check($/;"	f
xfs_ail_check	xfs_trans_ail.c	75;"	d	file:
xfs_ail_cursor	xfs_trans_priv.h	/^struct xfs_ail_cursor {$/;"	s
xfs_ail_delete	xfs_trans_ail.c	/^xfs_ail_delete($/;"	f	file:
xfs_ail_locked	xfs_trace.h	/^DEFINE_LOG_ITEM_EVENT(xfs_ail_locked);$/;"	v
xfs_ail_max	xfs_trans_ail.c	/^xfs_ail_max($/;"	f	file:
xfs_ail_max_lsn	xfs_trans_ail.c	/^xfs_ail_max_lsn($/;"	f	file:
xfs_ail_min	xfs_trans_ail.c	/^xfs_ail_min($/;"	f	file:
xfs_ail_min_lsn	xfs_trans_ail.c	/^xfs_ail_min_lsn($/;"	f
xfs_ail_next	xfs_trans_ail.c	/^xfs_ail_next($/;"	f	file:
xfs_ail_pinned	xfs_trace.h	/^DEFINE_LOG_ITEM_EVENT(xfs_ail_pinned);$/;"	v
xfs_ail_push	xfs_trace.h	/^DEFINE_LOG_ITEM_EVENT(xfs_ail_push);$/;"	v
xfs_ail_push	xfs_trans_ail.c	/^xfs_ail_push($/;"	f
xfs_ail_push_all	xfs_trans_ail.c	/^xfs_ail_push_all($/;"	f
xfs_ail_pushbuf	xfs_trace.h	/^DEFINE_LOG_ITEM_EVENT(xfs_ail_pushbuf);$/;"	v
xfs_ail_pushbuf_pinned	xfs_trace.h	/^DEFINE_LOG_ITEM_EVENT(xfs_ail_pushbuf_pinned);$/;"	v
xfs_ail_splice	xfs_trans_ail.c	/^xfs_ail_splice($/;"	f	file:
xfs_alert_fsblock_zero	xfs_iomap.c	/^xfs_alert_fsblock_zero($/;"	f
xfs_alert_tag	xfs_message.c	/^xfs_alert_tag($/;"	f
xfs_alloc_ag_vextent	xfs_alloc.c	/^xfs_alloc_ag_vextent($/;"	f
xfs_alloc_ag_vextent_exact	xfs_alloc.c	/^xfs_alloc_ag_vextent_exact($/;"	f
xfs_alloc_ag_vextent_near	xfs_alloc.c	/^xfs_alloc_ag_vextent_near($/;"	f
xfs_alloc_ag_vextent_size	xfs_alloc.c	/^xfs_alloc_ag_vextent_size($/;"	f
xfs_alloc_ag_vextent_small	xfs_alloc.c	/^xfs_alloc_ag_vextent_small($/;"	f
xfs_alloc_arg	xfs_alloc.h	/^typedef struct xfs_alloc_arg {$/;"	s
xfs_alloc_arg_t	xfs_alloc.h	/^} xfs_alloc_arg_t;$/;"	t	typeref:struct:xfs_alloc_arg
xfs_alloc_buftarg	xfs_buf.c	/^xfs_alloc_buftarg($/;"	f
xfs_alloc_busy	xfs_trace.h	/^DEFINE_BUSY_EVENT(xfs_alloc_busy);$/;"	v
xfs_alloc_busy_clear	xfs_alloc.c	/^xfs_alloc_busy_clear($/;"	f
xfs_alloc_busy_clear	xfs_trace.h	/^DEFINE_BUSY_EVENT(xfs_alloc_busy_clear);$/;"	v
xfs_alloc_busy_clear_one	xfs_alloc.c	/^xfs_alloc_busy_clear_one($/;"	f	file:
xfs_alloc_busy_enomem	xfs_trace.h	/^DEFINE_BUSY_EVENT(xfs_alloc_busy_enomem);$/;"	v
xfs_alloc_busy_force	xfs_trace.h	/^DEFINE_BUSY_EVENT(xfs_alloc_busy_force);$/;"	v
xfs_alloc_busy_insert	xfs_alloc.c	/^xfs_alloc_busy_insert($/;"	f
xfs_alloc_busy_reuse	xfs_alloc.c	/^xfs_alloc_busy_reuse($/;"	f
xfs_alloc_busy_reuse	xfs_trace.h	/^DEFINE_BUSY_EVENT(xfs_alloc_busy_reuse);$/;"	v
xfs_alloc_busy_search	xfs_alloc.c	/^xfs_alloc_busy_search($/;"	f
xfs_alloc_busy_sort	xfs_alloc.h	/^static inline void xfs_alloc_busy_sort(struct list_head *list)$/;"	f
xfs_alloc_busy_trim	xfs_alloc.c	/^xfs_alloc_busy_trim($/;"	f
xfs_alloc_busy_update_extent	xfs_alloc.c	/^xfs_alloc_busy_update_extent($/;"	f
xfs_alloc_compute_aligned	xfs_alloc.c	/^xfs_alloc_compute_aligned($/;"	f
xfs_alloc_compute_diff	xfs_alloc.c	/^xfs_alloc_compute_diff($/;"	f
xfs_alloc_compute_maxlevels	xfs_alloc.c	/^xfs_alloc_compute_maxlevels($/;"	f
xfs_alloc_delwri_queue	xfs_buf.c	/^xfs_alloc_delwri_queue($/;"	f
xfs_alloc_exact_done	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_exact_done);$/;"	v
xfs_alloc_exact_error	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_exact_error);$/;"	v
xfs_alloc_exact_notfound	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_exact_notfound);$/;"	v
xfs_alloc_file_space	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_alloc_file_space);$/;"	v
xfs_alloc_file_space	xfs_vnodeops.c	/^xfs_alloc_file_space($/;"	f
xfs_alloc_find_best_extent	xfs_alloc.c	/^xfs_alloc_find_best_extent($/;"	f
xfs_alloc_fix_freelist	xfs_alloc.c	/^xfs_alloc_fix_freelist($/;"	f
xfs_alloc_fix_len	xfs_alloc.c	/^xfs_alloc_fix_len($/;"	f
xfs_alloc_fix_minleft	xfs_alloc.c	/^xfs_alloc_fix_minleft($/;"	f
xfs_alloc_fixup_trees	xfs_alloc.c	/^xfs_alloc_fixup_trees($/;"	f
xfs_alloc_get_freelist	xfs_alloc.c	/^xfs_alloc_get_freelist($/;"	f
xfs_alloc_get_rec	xfs_alloc.c	/^xfs_alloc_get_rec($/;"	f
xfs_alloc_ioend	xfs_aops.c	/^xfs_alloc_ioend($/;"	f
xfs_alloc_ioend_bio	xfs_aops.c	/^xfs_alloc_ioend_bio($/;"	f
xfs_alloc_key_t	xfs_alloc_btree.h	/^} xfs_alloc_rec_t, xfs_alloc_key_t;$/;"	t	typeref:struct:xfs_alloc_rec
xfs_alloc_log_agf	xfs_alloc.c	/^xfs_alloc_log_agf($/;"	f
xfs_alloc_longest_free_extent	xfs_alloc.c	/^xfs_alloc_longest_free_extent($/;"	f
xfs_alloc_lookup_eq	xfs_alloc.c	/^xfs_alloc_lookup_eq($/;"	f
xfs_alloc_lookup_ge	xfs_alloc.c	/^xfs_alloc_lookup_ge($/;"	f
xfs_alloc_lookup_le	xfs_alloc.c	/^xfs_alloc_lookup_le($/;"	f
xfs_alloc_near_busy	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_near_busy);$/;"	v
xfs_alloc_near_error	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_near_error);$/;"	v
xfs_alloc_near_first	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_near_first);$/;"	v
xfs_alloc_near_greater	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_near_greater);$/;"	v
xfs_alloc_near_lesser	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_near_lesser);$/;"	v
xfs_alloc_near_noentry	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_near_noentry);$/;"	v
xfs_alloc_near_nominleft	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_near_nominleft);$/;"	v
xfs_alloc_pagf_init	xfs_alloc.c	/^xfs_alloc_pagf_init($/;"	f
xfs_alloc_ptr_t	xfs_alloc_btree.h	/^typedef __be32 xfs_alloc_ptr_t;$/;"	t
xfs_alloc_put_freelist	xfs_alloc.c	/^xfs_alloc_put_freelist($/;"	f
xfs_alloc_read_agf	xfs_alloc.c	/^xfs_alloc_read_agf($/;"	f
xfs_alloc_read_agfl	xfs_alloc.c	/^xfs_alloc_read_agfl($/;"	f
xfs_alloc_rec	xfs_alloc_btree.h	/^typedef struct xfs_alloc_rec {$/;"	s
xfs_alloc_rec_incore	xfs_alloc_btree.h	/^typedef struct xfs_alloc_rec_incore {$/;"	s
xfs_alloc_rec_incore_t	xfs_alloc_btree.h	/^} xfs_alloc_rec_incore_t;$/;"	t	typeref:struct:xfs_alloc_rec_incore
xfs_alloc_rec_t	xfs_alloc_btree.h	/^} xfs_alloc_rec_t, xfs_alloc_key_t;$/;"	t	typeref:struct:xfs_alloc_rec
xfs_alloc_size_busy	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_size_busy);$/;"	v
xfs_alloc_size_done	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_size_done);$/;"	v
xfs_alloc_size_error	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_size_error);$/;"	v
xfs_alloc_size_neither	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_size_neither);$/;"	v
xfs_alloc_size_noentry	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_size_noentry);$/;"	v
xfs_alloc_size_nominleft	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_size_nominleft);$/;"	v
xfs_alloc_small_done	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_small_done);$/;"	v
xfs_alloc_small_error	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_small_error);$/;"	v
xfs_alloc_small_freelist	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_small_freelist);$/;"	v
xfs_alloc_small_notenough	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_small_notenough);$/;"	v
xfs_alloc_update	xfs_alloc.c	/^xfs_alloc_update($/;"	f
xfs_alloc_update_counters	xfs_alloc.c	/^xfs_alloc_update_counters($/;"	f
xfs_alloc_vextent	xfs_alloc.c	/^xfs_alloc_vextent($/;"	f
xfs_alloc_vextent_allfailed	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_vextent_allfailed);$/;"	v
xfs_alloc_vextent_badargs	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_vextent_badargs);$/;"	v
xfs_alloc_vextent_loopfailed	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_vextent_loopfailed);$/;"	v
xfs_alloc_vextent_noagbp	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_vextent_noagbp);$/;"	v
xfs_alloc_vextent_nofix	xfs_trace.h	/^DEFINE_ALLOC_EVENT(xfs_alloc_vextent_nofix);$/;"	v
xfs_allocbt_alloc_block	xfs_alloc_btree.c	/^xfs_allocbt_alloc_block($/;"	f
xfs_allocbt_dup_cursor	xfs_alloc_btree.c	/^xfs_allocbt_dup_cursor($/;"	f
xfs_allocbt_free_block	xfs_alloc_btree.c	/^xfs_allocbt_free_block($/;"	f
xfs_allocbt_get_maxrecs	xfs_alloc_btree.c	/^xfs_allocbt_get_maxrecs($/;"	f
xfs_allocbt_get_minrecs	xfs_alloc_btree.c	/^xfs_allocbt_get_minrecs($/;"	f
xfs_allocbt_init_cursor	xfs_alloc_btree.c	/^xfs_allocbt_init_cursor($/;"	f
xfs_allocbt_init_key_from_rec	xfs_alloc_btree.c	/^xfs_allocbt_init_key_from_rec($/;"	f
xfs_allocbt_init_ptr_from_cur	xfs_alloc_btree.c	/^xfs_allocbt_init_ptr_from_cur($/;"	f
xfs_allocbt_init_rec_from_cur	xfs_alloc_btree.c	/^xfs_allocbt_init_rec_from_cur($/;"	f
xfs_allocbt_init_rec_from_key	xfs_alloc_btree.c	/^xfs_allocbt_init_rec_from_key($/;"	f
xfs_allocbt_key_diff	xfs_alloc_btree.c	/^xfs_allocbt_key_diff($/;"	f
xfs_allocbt_keys_inorder	xfs_alloc_btree.c	/^xfs_allocbt_keys_inorder($/;"	f
xfs_allocbt_maxrecs	xfs_alloc_btree.c	/^xfs_allocbt_maxrecs($/;"	f
xfs_allocbt_ops	xfs_alloc_btree.c	/^static const struct xfs_btree_ops xfs_allocbt_ops = {$/;"	v	typeref:struct:xfs_btree_ops	file:
xfs_allocbt_recs_inorder	xfs_alloc_btree.c	/^xfs_allocbt_recs_inorder($/;"	f
xfs_allocbt_set_root	xfs_alloc_btree.c	/^xfs_allocbt_set_root($/;"	f
xfs_allocbt_update_lastrec	xfs_alloc_btree.c	/^xfs_allocbt_update_lastrec($/;"	f
xfs_alloctype_t	xfs_alloc.h	/^typedef unsigned int xfs_alloctype_t;$/;"	t
xfs_aops_discard_page	xfs_aops.c	/^xfs_aops_discard_page($/;"	f
xfs_ascii_ci_compname	xfs_dir2.c	/^xfs_ascii_ci_compname($/;"	f
xfs_ascii_ci_hashname	xfs_dir2.c	/^xfs_ascii_ci_hashname($/;"	f
xfs_ascii_ci_nameops	xfs_dir2.c	/^static struct xfs_nameops xfs_ascii_ci_nameops = {$/;"	v	typeref:struct:xfs_nameops	file:
xfs_attr_calc_size	xfs_attr.c	/^xfs_attr_calc_size($/;"	f
xfs_attr_fillstate	xfs_attr.c	/^xfs_attr_fillstate(xfs_da_state_t *state)$/;"	f
xfs_attr_fork_reset	xfs_attr_leaf.c	/^xfs_attr_fork_reset($/;"	f
xfs_attr_get	xfs_attr.c	/^xfs_attr_get($/;"	f
xfs_attr_get_int	xfs_attr.c	/^xfs_attr_get_int($/;"	f
xfs_attr_inactive	xfs_attr.c	/^xfs_attr_inactive(xfs_inode_t *dp)$/;"	f
xfs_attr_inactive_list	xfs_attr_leaf.h	/^typedef struct xfs_attr_inactive_list {$/;"	s
xfs_attr_inactive_list_t	xfs_attr_leaf.h	/^} xfs_attr_inactive_list_t;$/;"	t	typeref:struct:xfs_attr_inactive_list
xfs_attr_leaf_add	xfs_attr_leaf.c	/^xfs_attr_leaf_add(xfs_dabuf_t *bp, xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_add_work	xfs_attr_leaf.c	/^xfs_attr_leaf_add_work(xfs_dabuf_t *bp, xfs_da_args_t *args, int mapindex)$/;"	f
xfs_attr_leaf_addname	xfs_attr.c	/^xfs_attr_leaf_addname(xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_clearflag	xfs_attr_leaf.c	/^xfs_attr_leaf_clearflag(xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_compact	xfs_attr_leaf.c	/^xfs_attr_leaf_compact(xfs_trans_t *trans, xfs_dabuf_t *bp)$/;"	f
xfs_attr_leaf_create	xfs_attr_leaf.c	/^xfs_attr_leaf_create(xfs_da_args_t *args, xfs_dablk_t blkno, xfs_dabuf_t **bpp)$/;"	f
xfs_attr_leaf_entry	xfs_attr_leaf.h	/^typedef struct xfs_attr_leaf_entry {	\/* sorted on key, not name *\/$/;"	s
xfs_attr_leaf_entry_t	xfs_attr_leaf.h	/^} xfs_attr_leaf_entry_t;$/;"	t	typeref:struct:xfs_attr_leaf_entry
xfs_attr_leaf_entsize	xfs_attr_leaf.c	/^xfs_attr_leaf_entsize(xfs_attr_leafblock_t *leaf, int index)$/;"	f
xfs_attr_leaf_entsize_local	xfs_attr_leaf.h	/^static inline int xfs_attr_leaf_entsize_local(int nlen, int vlen)$/;"	f
xfs_attr_leaf_entsize_local_max	xfs_attr_leaf.h	/^static inline int xfs_attr_leaf_entsize_local_max(int bsize)$/;"	f
xfs_attr_leaf_entsize_remote	xfs_attr_leaf.h	/^static inline int xfs_attr_leaf_entsize_remote(int nlen)$/;"	f
xfs_attr_leaf_figure_balance	xfs_attr_leaf.c	/^xfs_attr_leaf_figure_balance(xfs_da_state_t *state,$/;"	f
xfs_attr_leaf_flipflags	xfs_attr_leaf.c	/^xfs_attr_leaf_flipflags(xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_freextent	xfs_attr_leaf.c	/^xfs_attr_leaf_freextent(xfs_trans_t **trans, xfs_inode_t *dp,$/;"	f
xfs_attr_leaf_get	xfs_attr.c	/^xfs_attr_leaf_get(xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_getvalue	xfs_attr_leaf.c	/^xfs_attr_leaf_getvalue(xfs_dabuf_t *bp, xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_hdr	xfs_attr_leaf.h	/^typedef struct xfs_attr_leaf_hdr {	\/* constant-structure header block *\/$/;"	s
xfs_attr_leaf_hdr_t	xfs_attr_leaf.h	/^} xfs_attr_leaf_hdr_t;$/;"	t	typeref:struct:xfs_attr_leaf_hdr
xfs_attr_leaf_inactive	xfs_attr_leaf.c	/^xfs_attr_leaf_inactive(xfs_trans_t **trans, xfs_inode_t *dp, xfs_dabuf_t *bp)$/;"	f
xfs_attr_leaf_lasthash	xfs_attr_leaf.c	/^xfs_attr_leaf_lasthash(xfs_dabuf_t *bp, int *count)$/;"	f
xfs_attr_leaf_list	xfs_attr.c	/^xfs_attr_leaf_list(xfs_attr_list_context_t *context)$/;"	f
xfs_attr_leaf_list_int	xfs_attr_leaf.c	/^xfs_attr_leaf_list_int(xfs_dabuf_t *bp, xfs_attr_list_context_t *context)$/;"	f
xfs_attr_leaf_lookup_int	xfs_attr_leaf.c	/^xfs_attr_leaf_lookup_int(xfs_dabuf_t *bp, xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_map	xfs_attr_leaf.h	/^typedef struct xfs_attr_leaf_map {	\/* RLE map of free bytes *\/$/;"	s
xfs_attr_leaf_map_t	xfs_attr_leaf.h	/^} xfs_attr_leaf_map_t;$/;"	t	typeref:struct:xfs_attr_leaf_map
xfs_attr_leaf_moveents	xfs_attr_leaf.c	/^xfs_attr_leaf_moveents(xfs_attr_leafblock_t *leaf_s, int start_s,$/;"	f
xfs_attr_leaf_name	xfs_attr_leaf.h	/^static inline char *xfs_attr_leaf_name(xfs_attr_leafblock_t *leafp, int idx)$/;"	f
xfs_attr_leaf_name_local	xfs_attr_leaf.h	/^typedef struct xfs_attr_leaf_name_local {$/;"	s
xfs_attr_leaf_name_local	xfs_attr_leaf.h	/^xfs_attr_leaf_name_local(xfs_attr_leafblock_t *leafp, int idx)$/;"	f
xfs_attr_leaf_name_local_t	xfs_attr_leaf.h	/^} xfs_attr_leaf_name_local_t;$/;"	t	typeref:struct:xfs_attr_leaf_name_local
xfs_attr_leaf_name_remote	xfs_attr_leaf.h	/^typedef struct xfs_attr_leaf_name_remote {$/;"	s
xfs_attr_leaf_name_remote	xfs_attr_leaf.h	/^xfs_attr_leaf_name_remote(xfs_attr_leafblock_t *leafp, int idx)$/;"	f
xfs_attr_leaf_name_remote_t	xfs_attr_leaf.h	/^} xfs_attr_leaf_name_remote_t;$/;"	t	typeref:struct:xfs_attr_leaf_name_remote
xfs_attr_leaf_newentsize	xfs_attr_leaf.c	/^xfs_attr_leaf_newentsize(int namelen, int valuelen, int blocksize, int *local)$/;"	f
xfs_attr_leaf_order	xfs_attr_leaf.c	/^xfs_attr_leaf_order(xfs_dabuf_t *leaf1_bp, xfs_dabuf_t *leaf2_bp)$/;"	f
xfs_attr_leaf_rebalance	xfs_attr_leaf.c	/^xfs_attr_leaf_rebalance(xfs_da_state_t *state, xfs_da_state_blk_t *blk1,$/;"	f
xfs_attr_leaf_remove	xfs_attr_leaf.c	/^xfs_attr_leaf_remove(xfs_dabuf_t *bp, xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_removename	xfs_attr.c	/^xfs_attr_leaf_removename(xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_setflag	xfs_attr_leaf.c	/^xfs_attr_leaf_setflag(xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_split	xfs_attr_leaf.c	/^xfs_attr_leaf_split(xfs_da_state_t *state, xfs_da_state_blk_t *oldblk,$/;"	f
xfs_attr_leaf_to_node	xfs_attr_leaf.c	/^xfs_attr_leaf_to_node(xfs_da_args_t *args)$/;"	f
xfs_attr_leaf_to_shortform	xfs_attr_leaf.c	/^xfs_attr_leaf_to_shortform(xfs_dabuf_t *bp, xfs_da_args_t *args, int forkoff)$/;"	f
xfs_attr_leaf_toosmall	xfs_attr_leaf.c	/^xfs_attr_leaf_toosmall(xfs_da_state_t *state, int *action)$/;"	f
xfs_attr_leaf_unbalance	xfs_attr_leaf.c	/^xfs_attr_leaf_unbalance(xfs_da_state_t *state, xfs_da_state_blk_t *drop_blk,$/;"	f
xfs_attr_leafblock	xfs_attr_leaf.h	/^typedef struct xfs_attr_leafblock {$/;"	s
xfs_attr_leafblock_t	xfs_attr_leaf.h	/^} xfs_attr_leafblock_t;$/;"	t	typeref:struct:xfs_attr_leafblock
xfs_attr_list	xfs_attr.c	/^xfs_attr_list($/;"	f
xfs_attr_list_add	xfs_trace.h	/^DEFINE_ATTR_LIST_EVENT(xfs_attr_list_add);$/;"	v
xfs_attr_list_context	xfs_attr.h	/^typedef struct xfs_attr_list_context {$/;"	s
xfs_attr_list_context_t	xfs_attr.h	/^} xfs_attr_list_context_t;$/;"	t	typeref:struct:xfs_attr_list_context
xfs_attr_list_full	xfs_trace.h	/^DEFINE_ATTR_LIST_EVENT(xfs_attr_list_full);$/;"	v
xfs_attr_list_int	xfs_attr.c	/^xfs_attr_list_int(xfs_attr_list_context_t *context)$/;"	f
xfs_attr_list_leaf	xfs_trace.h	/^DEFINE_ATTR_LIST_EVENT(xfs_attr_list_leaf);$/;"	v
xfs_attr_list_leaf_end	xfs_trace.h	/^DEFINE_ATTR_LIST_EVENT(xfs_attr_list_leaf_end);$/;"	v
xfs_attr_list_notfound	xfs_trace.h	/^DEFINE_ATTR_LIST_EVENT(xfs_attr_list_notfound);$/;"	v
xfs_attr_list_sf	xfs_trace.h	/^DEFINE_ATTR_LIST_EVENT(xfs_attr_list_sf);$/;"	v
xfs_attr_list_sf_all	xfs_trace.h	/^DEFINE_ATTR_LIST_EVENT(xfs_attr_list_sf_all);$/;"	v
xfs_attr_list_wrong_blk	xfs_trace.h	/^DEFINE_ATTR_LIST_EVENT(xfs_attr_list_wrong_blk);$/;"	v
xfs_attr_multiop	xfs_fs.h	/^typedef struct xfs_attr_multiop {$/;"	s
xfs_attr_multiop_t	xfs_fs.h	/^} xfs_attr_multiop_t;$/;"	t	typeref:struct:xfs_attr_multiop
xfs_attr_name_to_xname	xfs_attr.c	/^xfs_attr_name_to_xname($/;"	f
xfs_attr_namesp_match	xfs_attr_leaf.c	/^xfs_attr_namesp_match(int arg_flags, int ondisk_flags)$/;"	f
xfs_attr_node_addname	xfs_attr.c	/^xfs_attr_node_addname(xfs_da_args_t *args)$/;"	f
xfs_attr_node_get	xfs_attr.c	/^xfs_attr_node_get(xfs_da_args_t *args)$/;"	f
xfs_attr_node_inactive	xfs_attr_leaf.c	/^xfs_attr_node_inactive(xfs_trans_t **trans, xfs_inode_t *dp, xfs_dabuf_t *bp,$/;"	f
xfs_attr_node_list	xfs_attr.c	/^xfs_attr_node_list(xfs_attr_list_context_t *context)$/;"	f
xfs_attr_node_removename	xfs_attr.c	/^xfs_attr_node_removename(xfs_da_args_t *args)$/;"	f
xfs_attr_put_listent	xfs_attr.c	/^xfs_attr_put_listent($/;"	f
xfs_attr_refillstate	xfs_attr.c	/^xfs_attr_refillstate(xfs_da_state_t *state)$/;"	f
xfs_attr_remove	xfs_attr.c	/^xfs_attr_remove($/;"	f
xfs_attr_remove_int	xfs_attr.c	/^xfs_attr_remove_int(xfs_inode_t *dp, struct xfs_name *name, int flags)$/;"	f
xfs_attr_rmtval_get	xfs_attr.c	/^xfs_attr_rmtval_get(xfs_da_args_t *args)$/;"	f
xfs_attr_rmtval_remove	xfs_attr.c	/^xfs_attr_rmtval_remove(xfs_da_args_t *args)$/;"	f
xfs_attr_rmtval_set	xfs_attr.c	/^xfs_attr_rmtval_set(xfs_da_args_t *args)$/;"	f
xfs_attr_root_inactive	xfs_attr_leaf.c	/^xfs_attr_root_inactive(xfs_trans_t **trans, xfs_inode_t *dp)$/;"	f
xfs_attr_set	xfs_attr.c	/^xfs_attr_set($/;"	f
xfs_attr_set_int	xfs_attr.c	/^xfs_attr_set_int($/;"	f
xfs_attr_sf_entry	xfs_attr_sf.h	/^	struct xfs_attr_sf_entry {$/;"	s	struct:xfs_attr_shortform
xfs_attr_sf_entry_t	xfs_attr_sf.h	/^typedef struct xfs_attr_sf_entry xfs_attr_sf_entry_t;$/;"	t	typeref:struct:xfs_attr_sf_entry
xfs_attr_sf_hdr	xfs_attr_sf.h	/^	struct xfs_attr_sf_hdr {	\/* constant-structure header block *\/$/;"	s	struct:xfs_attr_shortform
xfs_attr_sf_hdr_t	xfs_attr_sf.h	/^typedef struct xfs_attr_sf_hdr xfs_attr_sf_hdr_t;$/;"	t	typeref:struct:xfs_attr_sf_hdr
xfs_attr_sf_sort	xfs_attr_sf.h	/^typedef struct xfs_attr_sf_sort {$/;"	s
xfs_attr_sf_sort_t	xfs_attr_sf.h	/^} xfs_attr_sf_sort_t;$/;"	t	typeref:struct:xfs_attr_sf_sort
xfs_attr_shortform	xfs_attr_sf.h	/^typedef struct xfs_attr_shortform {$/;"	s
xfs_attr_shortform_add	xfs_attr_leaf.c	/^xfs_attr_shortform_add(xfs_da_args_t *args, int forkoff)$/;"	f
xfs_attr_shortform_addname	xfs_attr.c	/^xfs_attr_shortform_addname(xfs_da_args_t *args)$/;"	f
xfs_attr_shortform_allfit	xfs_attr_leaf.c	/^xfs_attr_shortform_allfit(xfs_dabuf_t *bp, xfs_inode_t *dp)$/;"	f
xfs_attr_shortform_bytesfit	xfs_attr_leaf.c	/^xfs_attr_shortform_bytesfit(xfs_inode_t *dp, int bytes)$/;"	f
xfs_attr_shortform_compare	xfs_attr_leaf.c	/^xfs_attr_shortform_compare(const void *a, const void *b)$/;"	f
xfs_attr_shortform_create	xfs_attr_leaf.c	/^xfs_attr_shortform_create(xfs_da_args_t *args)$/;"	f
xfs_attr_shortform_getvalue	xfs_attr_leaf.c	/^xfs_attr_shortform_getvalue(xfs_da_args_t *args)$/;"	f
xfs_attr_shortform_list	xfs_attr_leaf.c	/^xfs_attr_shortform_list(xfs_attr_list_context_t *context)$/;"	f
xfs_attr_shortform_lookup	xfs_attr_leaf.c	/^xfs_attr_shortform_lookup(xfs_da_args_t *args)$/;"	f
xfs_attr_shortform_remove	xfs_attr_leaf.c	/^xfs_attr_shortform_remove(xfs_da_args_t *args)$/;"	f
xfs_attr_shortform_t	xfs_attr_sf.h	/^} xfs_attr_shortform_t;$/;"	t	typeref:struct:xfs_attr_shortform
xfs_attr_shortform_to_leaf	xfs_attr_leaf.c	/^xfs_attr_shortform_to_leaf(xfs_da_args_t *args)$/;"	f
xfs_attrlist_by_handle	xfs_ioctl.c	/^xfs_attrlist_by_handle($/;"	f
xfs_attrlist_cursor	xfs_fs.h	/^typedef struct xfs_attrlist_cursor {$/;"	s
xfs_attrlist_cursor_t	xfs_fs.h	/^} xfs_attrlist_cursor_t;$/;"	t	typeref:struct:xfs_attrlist_cursor
xfs_attrmulti_attr_get	xfs_ioctl.c	/^xfs_attrmulti_attr_get($/;"	f
xfs_attrmulti_attr_remove	xfs_ioctl.c	/^xfs_attrmulti_attr_remove($/;"	f
xfs_attrmulti_attr_set	xfs_ioctl.c	/^xfs_attrmulti_attr_set($/;"	f
xfs_attrmulti_by_handle	xfs_ioctl.c	/^xfs_attrmulti_by_handle($/;"	f
xfs_bdstrat_cb	xfs_buf.c	/^xfs_bdstrat_cb($/;"	f
xfs_bdstrat_shut	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_bdstrat_shut);$/;"	v
xfs_bioerror	xfs_buf.c	/^xfs_bioerror($/;"	f
xfs_bioerror_relse	xfs_buf.c	/^xfs_bioerror_relse($/;"	f
xfs_bitmap_empty	xfs_bit.c	/^xfs_bitmap_empty(uint *map, uint size)$/;"	f
xfs_blkdev_get	xfs_super.c	/^xfs_blkdev_get($/;"	f
xfs_blkdev_issue_flush	xfs_super.c	/^xfs_blkdev_issue_flush($/;"	f
xfs_blkdev_put	xfs_super.c	/^xfs_blkdev_put($/;"	f
xfs_bmalloca	xfs_bmap.h	/^typedef struct xfs_bmalloca {$/;"	s
xfs_bmalloca_t	xfs_bmap.h	/^} xfs_bmalloca_t;$/;"	t	typeref:struct:xfs_bmalloca
xfs_bmap_add_attrfork	xfs_bmap.c	/^xfs_bmap_add_attrfork($/;"	f
xfs_bmap_add_attrfork_btree	xfs_bmap.c	/^xfs_bmap_add_attrfork_btree($/;"	f
xfs_bmap_add_attrfork_extents	xfs_bmap.c	/^xfs_bmap_add_attrfork_extents($/;"	f
xfs_bmap_add_attrfork_local	xfs_bmap.c	/^xfs_bmap_add_attrfork_local($/;"	f
xfs_bmap_add_extent_delay_real	xfs_bmap.c	/^xfs_bmap_add_extent_delay_real($/;"	f
xfs_bmap_add_extent_hole_delay	xfs_bmap.c	/^xfs_bmap_add_extent_hole_delay($/;"	f
xfs_bmap_add_extent_hole_real	xfs_bmap.c	/^xfs_bmap_add_extent_hole_real($/;"	f
xfs_bmap_add_extent_unwritten_real	xfs_bmap.c	/^xfs_bmap_add_extent_unwritten_real($/;"	f
xfs_bmap_add_free	xfs_bmap.c	/^xfs_bmap_add_free($/;"	f
xfs_bmap_adjacent	xfs_bmap.c	/^xfs_bmap_adjacent($/;"	f
xfs_bmap_alloc	xfs_bmap.c	/^xfs_bmap_alloc($/;"	f
xfs_bmap_btalloc	xfs_bmap.c	/^xfs_bmap_btalloc($/;"	f
xfs_bmap_btalloc_nullfb	xfs_bmap.c	/^xfs_bmap_btalloc_nullfb($/;"	f
xfs_bmap_btree_to_extents	xfs_bmap.c	/^xfs_bmap_btree_to_extents($/;"	f
xfs_bmap_cancel	xfs_bmap.c	/^xfs_bmap_cancel($/;"	f
xfs_bmap_check_leaf_extents	xfs_bmap.c	/^xfs_bmap_check_leaf_extents($/;"	f
xfs_bmap_check_leaf_extents	xfs_bmap.c	66;"	d	file:
xfs_bmap_compute_maxlevels	xfs_bmap.c	/^xfs_bmap_compute_maxlevels($/;"	f
xfs_bmap_count_blocks	xfs_bmap.c	/^xfs_bmap_count_blocks($/;"	f
xfs_bmap_count_leaves	xfs_bmap.c	/^xfs_bmap_count_leaves($/;"	f
xfs_bmap_count_tree	xfs_bmap.c	/^xfs_bmap_count_tree($/;"	f
xfs_bmap_del_extent	xfs_bmap.c	/^xfs_bmap_del_extent($/;"	f
xfs_bmap_del_free	xfs_bmap.c	/^xfs_bmap_del_free($/;"	f
xfs_bmap_disk_count_leaves	xfs_bmap.c	/^xfs_bmap_disk_count_leaves($/;"	f
xfs_bmap_eof	xfs_bmap.c	/^xfs_bmap_eof($/;"	f
xfs_bmap_extents_to_btree	xfs_bmap.c	/^xfs_bmap_extents_to_btree($/;"	f
xfs_bmap_extsize_align	xfs_bmap.c	/^xfs_bmap_extsize_align($/;"	f
xfs_bmap_finish	xfs_bmap.c	/^xfs_bmap_finish($/;"	f
xfs_bmap_first_unused	xfs_bmap.c	/^xfs_bmap_first_unused($/;"	f
xfs_bmap_forkoff_reset	xfs_bmap.c	/^xfs_bmap_forkoff_reset($/;"	f
xfs_bmap_format_t	xfs_bmap.h	/^typedef int (*xfs_bmap_format_t)(void **, struct getbmapx *, int *);$/;"	t
xfs_bmap_free	xfs_bmap.h	/^typedef	struct xfs_bmap_free$/;"	s
xfs_bmap_free_item	xfs_bmap.h	/^typedef struct xfs_bmap_free_item$/;"	s
xfs_bmap_free_item_t	xfs_bmap.h	/^} xfs_bmap_free_item_t;$/;"	t	typeref:struct:xfs_bmap_free_item
xfs_bmap_free_item_zone	xfs_bmap.c	/^kmem_zone_t		*xfs_bmap_free_item_zone;$/;"	v
xfs_bmap_free_t	xfs_bmap.h	/^} xfs_bmap_free_t;$/;"	t	typeref:struct:xfs_bmap_free
xfs_bmap_get_bp	xfs_bmap.c	/^xfs_bmap_get_bp($/;"	f
xfs_bmap_init	xfs_bmap.h	/^static inline void xfs_bmap_init(xfs_bmap_free_t *flp, xfs_fsblock_t *fbp)$/;"	f
xfs_bmap_isaeof	xfs_bmap.c	/^xfs_bmap_isaeof($/;"	f
xfs_bmap_last_before	xfs_bmap.c	/^xfs_bmap_last_before($/;"	f
xfs_bmap_last_extent	xfs_bmap.c	/^xfs_bmap_last_extent($/;"	f
xfs_bmap_last_offset	xfs_bmap.c	/^xfs_bmap_last_offset($/;"	f
xfs_bmap_local_to_extents	xfs_bmap.c	/^xfs_bmap_local_to_extents($/;"	f
xfs_bmap_needs_btree	xfs_bmap.c	/^static inline bool xfs_bmap_needs_btree(struct xfs_inode *ip, int whichfork)$/;"	f	file:
xfs_bmap_one_block	xfs_bmap.c	/^xfs_bmap_one_block($/;"	f
xfs_bmap_post_update	xfs_trace.h	/^DEFINE_BMAP_EVENT(xfs_bmap_post_update);$/;"	v
xfs_bmap_pre_update	xfs_trace.h	/^DEFINE_BMAP_EVENT(xfs_bmap_pre_update);$/;"	v
xfs_bmap_punch_delalloc_range	xfs_bmap.c	/^xfs_bmap_punch_delalloc_range($/;"	f
xfs_bmap_read_extents	xfs_bmap.c	/^xfs_bmap_read_extents($/;"	f
xfs_bmap_rtalloc	xfs_bmap.c	/^xfs_bmap_rtalloc($/;"	f
xfs_bmap_sanity_check	xfs_bmap.c	/^xfs_bmap_sanity_check($/;"	f
xfs_bmap_search_extents	xfs_bmap.c	/^xfs_bmap_search_extents($/;"	f
xfs_bmap_search_multi_extents	xfs_bmap.c	/^xfs_bmap_search_multi_extents($/;"	f
xfs_bmap_trace_exlist	xfs_bmap.c	/^xfs_bmap_trace_exlist($/;"	f
xfs_bmap_validate_ret	xfs_bmap.c	/^xfs_bmap_validate_ret($/;"	f
xfs_bmap_validate_ret	xfs_bmap.c	193;"	d	file:
xfs_bmap_wants_extents	xfs_bmap.c	/^static inline bool xfs_bmap_wants_extents(struct xfs_inode *ip, int whichfork)$/;"	f	file:
xfs_bmap_worst_indlen	xfs_bmap.c	/^xfs_bmap_worst_indlen($/;"	f
xfs_bmapi_aflag	xfs_bmap.h	/^static inline int xfs_bmapi_aflag(int w)$/;"	f
xfs_bmapi_allocate	xfs_bmap.c	/^xfs_bmapi_allocate($/;"	f
xfs_bmapi_convert_unwritten	xfs_bmap.c	/^xfs_bmapi_convert_unwritten($/;"	f
xfs_bmapi_delay	xfs_bmap.c	/^xfs_bmapi_delay($/;"	f
xfs_bmapi_read	xfs_bmap.c	/^xfs_bmapi_read($/;"	f
xfs_bmapi_reserve_delalloc	xfs_bmap.c	/^xfs_bmapi_reserve_delalloc($/;"	f
xfs_bmapi_trim_map	xfs_bmap.c	/^xfs_bmapi_trim_map($/;"	f
xfs_bmapi_update_map	xfs_bmap.c	/^xfs_bmapi_update_map($/;"	f
xfs_bmapi_write	xfs_bmap.c	/^xfs_bmapi_write($/;"	f
xfs_bmbt_alloc_block	xfs_bmap_btree.c	/^xfs_bmbt_alloc_block($/;"	f
xfs_bmbt_disk_get_blockcount	xfs_bmap_btree.c	/^xfs_bmbt_disk_get_blockcount($/;"	f
xfs_bmbt_disk_get_startoff	xfs_bmap_btree.c	/^xfs_bmbt_disk_get_startoff($/;"	f
xfs_bmbt_disk_set_all	xfs_bmap_btree.c	/^xfs_bmbt_disk_set_all($/;"	f
xfs_bmbt_disk_set_allf	xfs_bmap_btree.c	/^xfs_bmbt_disk_set_allf($/;"	f
xfs_bmbt_dup_cursor	xfs_bmap_btree.c	/^xfs_bmbt_dup_cursor($/;"	f
xfs_bmbt_free_block	xfs_bmap_btree.c	/^xfs_bmbt_free_block($/;"	f
xfs_bmbt_get_all	xfs_bmap_btree.c	/^xfs_bmbt_get_all($/;"	f
xfs_bmbt_get_blockcount	xfs_bmap_btree.c	/^xfs_bmbt_get_blockcount($/;"	f
xfs_bmbt_get_dmaxrecs	xfs_bmap_btree.c	/^xfs_bmbt_get_dmaxrecs($/;"	f
xfs_bmbt_get_maxrecs	xfs_bmap_btree.c	/^xfs_bmbt_get_maxrecs($/;"	f
xfs_bmbt_get_minrecs	xfs_bmap_btree.c	/^xfs_bmbt_get_minrecs($/;"	f
xfs_bmbt_get_startblock	xfs_bmap_btree.c	/^xfs_bmbt_get_startblock($/;"	f
xfs_bmbt_get_startoff	xfs_bmap_btree.c	/^xfs_bmbt_get_startoff($/;"	f
xfs_bmbt_get_state	xfs_bmap_btree.c	/^xfs_bmbt_get_state($/;"	f
xfs_bmbt_init_cursor	xfs_bmap_btree.c	/^xfs_bmbt_init_cursor($/;"	f
xfs_bmbt_init_key_from_rec	xfs_bmap_btree.c	/^xfs_bmbt_init_key_from_rec($/;"	f
xfs_bmbt_init_ptr_from_cur	xfs_bmap_btree.c	/^xfs_bmbt_init_ptr_from_cur($/;"	f
xfs_bmbt_init_rec_from_cur	xfs_bmap_btree.c	/^xfs_bmbt_init_rec_from_cur($/;"	f
xfs_bmbt_init_rec_from_key	xfs_bmap_btree.c	/^xfs_bmbt_init_rec_from_key($/;"	f
xfs_bmbt_irec	xfs_bmap_btree.h	/^typedef struct xfs_bmbt_irec$/;"	s
xfs_bmbt_irec_t	xfs_bmap_btree.h	/^} xfs_bmbt_irec_t;$/;"	t	typeref:struct:xfs_bmbt_irec
xfs_bmbt_key	xfs_bmap_btree.h	/^typedef struct xfs_bmbt_key {$/;"	s
xfs_bmbt_key_diff	xfs_bmap_btree.c	/^xfs_bmbt_key_diff($/;"	f
xfs_bmbt_key_t	xfs_bmap_btree.h	/^} xfs_bmbt_key_t, xfs_bmdr_key_t;$/;"	t	typeref:struct:xfs_bmbt_key
xfs_bmbt_keys_inorder	xfs_bmap_btree.c	/^xfs_bmbt_keys_inorder($/;"	f
xfs_bmbt_lookup_eq	xfs_bmap.c	/^xfs_bmbt_lookup_eq($/;"	f
xfs_bmbt_lookup_ge	xfs_bmap.c	/^xfs_bmbt_lookup_ge($/;"	f
xfs_bmbt_maxrecs	xfs_bmap_btree.c	/^xfs_bmbt_maxrecs($/;"	f
xfs_bmbt_ops	xfs_bmap_btree.c	/^static const struct xfs_btree_ops xfs_bmbt_ops = {$/;"	v	typeref:struct:xfs_btree_ops	file:
xfs_bmbt_ptr_t	xfs_bmap_btree.h	/^typedef __be64 xfs_bmbt_ptr_t, xfs_bmdr_ptr_t;$/;"	t
xfs_bmbt_rec	xfs_bmap_btree.h	/^typedef struct xfs_bmbt_rec {$/;"	s
xfs_bmbt_rec_base_t	xfs_bmap_btree.h	/^typedef __uint64_t	xfs_bmbt_rec_base_t;	\/* use this for casts *\/$/;"	t
xfs_bmbt_rec_host	xfs_bmap_btree.h	/^typedef struct xfs_bmbt_rec_host {$/;"	s
xfs_bmbt_rec_host_t	xfs_bmap_btree.h	/^} xfs_bmbt_rec_host_t;$/;"	t	typeref:struct:xfs_bmbt_rec_host
xfs_bmbt_rec_t	xfs_bmap_btree.h	/^} xfs_bmbt_rec_t;$/;"	t	typeref:struct:xfs_bmbt_rec
xfs_bmbt_recs_inorder	xfs_bmap_btree.c	/^xfs_bmbt_recs_inorder($/;"	f
xfs_bmbt_set_all	xfs_bmap_btree.c	/^xfs_bmbt_set_all($/;"	f
xfs_bmbt_set_allf	xfs_bmap_btree.c	/^xfs_bmbt_set_allf($/;"	f
xfs_bmbt_set_blockcount	xfs_bmap_btree.c	/^xfs_bmbt_set_blockcount($/;"	f
xfs_bmbt_set_startblock	xfs_bmap_btree.c	/^xfs_bmbt_set_startblock($/;"	f
xfs_bmbt_set_startoff	xfs_bmap_btree.c	/^xfs_bmbt_set_startoff($/;"	f
xfs_bmbt_set_state	xfs_bmap_btree.c	/^xfs_bmbt_set_state($/;"	f
xfs_bmbt_to_bmdr	xfs_bmap_btree.c	/^xfs_bmbt_to_bmdr($/;"	f
xfs_bmbt_update	xfs_bmap.c	/^xfs_bmbt_update($/;"	f
xfs_bmbt_update_cursor	xfs_bmap_btree.c	/^xfs_bmbt_update_cursor($/;"	f
xfs_bmdr_block	xfs_bmap_btree.h	/^typedef struct xfs_bmdr_block {$/;"	s
xfs_bmdr_block_t	xfs_bmap_btree.h	/^} xfs_bmdr_block_t;$/;"	t	typeref:struct:xfs_bmdr_block
xfs_bmdr_key_t	xfs_bmap_btree.h	/^} xfs_bmbt_key_t, xfs_bmdr_key_t;$/;"	t	typeref:struct:xfs_bmbt_key
xfs_bmdr_maxrecs	xfs_bmap_btree.c	/^xfs_bmdr_maxrecs($/;"	f
xfs_bmdr_ptr_t	xfs_bmap_btree.h	/^typedef __be64 xfs_bmbt_ptr_t, xfs_bmdr_ptr_t;$/;"	t
xfs_bmdr_rec_t	xfs_bmap_btree.h	/^typedef xfs_bmbt_rec_t xfs_bmdr_rec_t;$/;"	t
xfs_bmdr_to_bmbt	xfs_bmap_btree.c	/^xfs_bmdr_to_bmbt($/;"	f
xfs_bstat	xfs_fs.h	/^typedef struct xfs_bstat {$/;"	s
xfs_bstat_t	xfs_fs.h	/^} xfs_bstat_t;$/;"	t	typeref:struct:xfs_bstat
xfs_bstime	xfs_fs.h	/^typedef struct xfs_bstime {$/;"	s
xfs_bstime_store_compat	xfs_ioctl32.c	/^xfs_bstime_store_compat($/;"	f
xfs_bstime_t	xfs_fs.h	/^} xfs_bstime_t;$/;"	t	typeref:struct:xfs_bstime
xfs_btnum_t	xfs_types.h	/^} xfs_btnum_t;$/;"	t	typeref:enum:__anon35
xfs_btree_block	xfs_btree.h	/^struct xfs_btree_block {$/;"	s
xfs_btree_block_len	xfs_btree.c	/^static inline size_t xfs_btree_block_len(struct xfs_btree_cur *cur)$/;"	f	file:
xfs_btree_buf_to_ptr	xfs_btree.c	/^xfs_btree_buf_to_ptr($/;"	f
xfs_btree_check_block	xfs_btree.c	/^xfs_btree_check_block($/;"	f
xfs_btree_check_lblock	xfs_btree.c	/^xfs_btree_check_lblock($/;"	f
xfs_btree_check_lptr	xfs_btree.c	/^xfs_btree_check_lptr($/;"	f
xfs_btree_check_ptr	xfs_btree.c	/^xfs_btree_check_ptr($/;"	f
xfs_btree_check_sblock	xfs_btree.c	/^xfs_btree_check_sblock($/;"	f
xfs_btree_check_sptr	xfs_btree.c	/^xfs_btree_check_sptr($/;"	f
xfs_btree_copy_keys	xfs_btree.c	/^xfs_btree_copy_keys($/;"	f
xfs_btree_copy_ptrs	xfs_btree.c	/^xfs_btree_copy_ptrs($/;"	f
xfs_btree_copy_recs	xfs_btree.c	/^xfs_btree_copy_recs($/;"	f
xfs_btree_corrupt	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_btree_corrupt);$/;"	v
xfs_btree_cur	xfs_btree.h	/^typedef struct xfs_btree_cur$/;"	s
xfs_btree_cur_t	xfs_btree.h	/^} xfs_btree_cur_t;$/;"	t	typeref:struct:xfs_btree_cur
xfs_btree_cur_zone	xfs_btree.c	/^kmem_zone_t	*xfs_btree_cur_zone;$/;"	v
xfs_btree_dec_cursor	xfs_btree.c	/^xfs_btree_dec_cursor($/;"	f
xfs_btree_decrement	xfs_btree.c	/^xfs_btree_decrement($/;"	f
xfs_btree_del_cursor	xfs_btree.c	/^xfs_btree_del_cursor($/;"	f
xfs_btree_delete	xfs_btree.c	/^xfs_btree_delete($/;"	f
xfs_btree_delrec	xfs_btree.c	/^xfs_btree_delrec($/;"	f
xfs_btree_dup_cursor	xfs_btree.c	/^xfs_btree_dup_cursor($/;"	f
xfs_btree_firstrec	xfs_btree.c	/^xfs_btree_firstrec($/;"	f
xfs_btree_get_block	xfs_btree.c	/^xfs_btree_get_block($/;"	f
xfs_btree_get_buf_block	xfs_btree.c	/^xfs_btree_get_buf_block($/;"	f
xfs_btree_get_bufl	xfs_btree.c	/^xfs_btree_get_bufl($/;"	f
xfs_btree_get_bufs	xfs_btree.c	/^xfs_btree_get_bufs($/;"	f
xfs_btree_get_iroot	xfs_btree.c	/^xfs_btree_get_iroot($/;"	f
xfs_btree_get_level	xfs_btree.h	/^static inline int xfs_btree_get_level(struct xfs_btree_block *block)$/;"	f
xfs_btree_get_numrecs	xfs_btree.h	/^static inline int xfs_btree_get_numrecs(struct xfs_btree_block *block)$/;"	f
xfs_btree_get_rec	xfs_btree.c	/^xfs_btree_get_rec($/;"	f
xfs_btree_get_sibling	xfs_btree.c	/^xfs_btree_get_sibling($/;"	f
xfs_btree_increment	xfs_btree.c	/^xfs_btree_increment($/;"	f
xfs_btree_init_block	xfs_btree.c	/^xfs_btree_init_block($/;"	f
xfs_btree_insert	xfs_btree.c	/^xfs_btree_insert($/;"	f
xfs_btree_insrec	xfs_btree.c	/^xfs_btree_insrec($/;"	f
xfs_btree_is_lastrec	xfs_btree.c	/^xfs_btree_is_lastrec($/;"	f
xfs_btree_islastblock	xfs_btree.c	/^xfs_btree_islastblock($/;"	f
xfs_btree_key	xfs_btree.h	/^union xfs_btree_key {$/;"	u
xfs_btree_key_addr	xfs_btree.c	/^xfs_btree_key_addr($/;"	f
xfs_btree_key_offset	xfs_btree.c	/^xfs_btree_key_offset($/;"	f
xfs_btree_kill_iroot	xfs_btree.c	/^xfs_btree_kill_iroot($/;"	f
xfs_btree_kill_root	xfs_btree.c	/^xfs_btree_kill_root($/;"	f
xfs_btree_lastrec	xfs_btree.c	/^xfs_btree_lastrec($/;"	f
xfs_btree_log_block	xfs_btree.c	/^xfs_btree_log_block($/;"	f
xfs_btree_log_keys	xfs_btree.c	/^xfs_btree_log_keys($/;"	f
xfs_btree_log_ptrs	xfs_btree.c	/^xfs_btree_log_ptrs($/;"	f
xfs_btree_log_recs	xfs_btree.c	/^xfs_btree_log_recs($/;"	f
xfs_btree_lookup	xfs_btree.c	/^xfs_btree_lookup($/;"	f
xfs_btree_lookup_get_block	xfs_btree.c	/^xfs_btree_lookup_get_block($/;"	f
xfs_btree_lshift	xfs_btree.c	/^xfs_btree_lshift($/;"	f
xfs_btree_make_block_unfull	xfs_btree.c	/^xfs_btree_make_block_unfull($/;"	f
xfs_btree_new_iroot	xfs_btree.c	/^xfs_btree_new_iroot($/;"	f
xfs_btree_new_root	xfs_btree.c	/^xfs_btree_new_root($/;"	f
xfs_btree_offsets	xfs_btree.c	/^xfs_btree_offsets($/;"	f
xfs_btree_ops	xfs_btree.h	/^struct xfs_btree_ops {$/;"	s
xfs_btree_ptr	xfs_btree.h	/^union xfs_btree_ptr {$/;"	u
xfs_btree_ptr_addr	xfs_btree.c	/^xfs_btree_ptr_addr($/;"	f
xfs_btree_ptr_is_null	xfs_btree.c	/^xfs_btree_ptr_is_null($/;"	f
xfs_btree_ptr_len	xfs_btree.c	/^static inline size_t xfs_btree_ptr_len(struct xfs_btree_cur *cur)$/;"	f	file:
xfs_btree_ptr_offset	xfs_btree.c	/^xfs_btree_ptr_offset($/;"	f
xfs_btree_ptr_to_daddr	xfs_btree.c	/^xfs_btree_ptr_to_daddr($/;"	f
xfs_btree_read_buf_block	xfs_btree.c	/^xfs_btree_read_buf_block($/;"	f
xfs_btree_read_bufl	xfs_btree.c	/^xfs_btree_read_bufl($/;"	f
xfs_btree_reada_bufl	xfs_btree.c	/^xfs_btree_reada_bufl($/;"	f
xfs_btree_reada_bufs	xfs_btree.c	/^xfs_btree_reada_bufs($/;"	f
xfs_btree_readahead	xfs_btree.c	/^xfs_btree_readahead($/;"	f
xfs_btree_readahead_lblock	xfs_btree.c	/^xfs_btree_readahead_lblock($/;"	f
xfs_btree_readahead_sblock	xfs_btree.c	/^xfs_btree_readahead_sblock($/;"	f
xfs_btree_rec	xfs_btree.h	/^union xfs_btree_rec {$/;"	u
xfs_btree_rec_addr	xfs_btree.c	/^xfs_btree_rec_addr($/;"	f
xfs_btree_rec_offset	xfs_btree.c	/^xfs_btree_rec_offset($/;"	f
xfs_btree_rshift	xfs_btree.c	/^xfs_btree_rshift($/;"	f
xfs_btree_set_numrecs	xfs_btree.h	/^static inline void xfs_btree_set_numrecs(struct xfs_btree_block *block,$/;"	f
xfs_btree_set_ptr_null	xfs_btree.c	/^xfs_btree_set_ptr_null($/;"	f
xfs_btree_set_refs	xfs_btree.c	/^xfs_btree_set_refs($/;"	f
xfs_btree_set_sibling	xfs_btree.c	/^xfs_btree_set_sibling($/;"	f
xfs_btree_setbuf	xfs_btree.c	/^xfs_btree_setbuf($/;"	f
xfs_btree_shift_keys	xfs_btree.c	/^xfs_btree_shift_keys($/;"	f
xfs_btree_shift_ptrs	xfs_btree.c	/^xfs_btree_shift_ptrs($/;"	f
xfs_btree_shift_recs	xfs_btree.c	/^xfs_btree_shift_recs($/;"	f
xfs_btree_split	xfs_btree.c	/^xfs_btree_split($/;"	f
xfs_btree_update	xfs_btree.c	/^xfs_btree_update($/;"	f
xfs_btree_updkey	xfs_btree.c	/^xfs_btree_updkey($/;"	f
xfs_buf	xfs_buf.h	/^typedef struct xfs_buf {$/;"	s
xfs_buf_age	xfs_sysctl.h	/^	xfs_sysctl_val_t xfs_buf_age;	\/* Metadata buffer age before flush. *\/$/;"	m	struct:xfs_param
xfs_buf_age_centisecs	xfs_linux.h	116;"	d
xfs_buf_alloc	xfs_buf.c	/^xfs_buf_alloc($/;"	f
xfs_buf_allocate_memory	xfs_buf.c	/^xfs_buf_allocate_memory($/;"	f
xfs_buf_associate_memory	xfs_buf.c	/^xfs_buf_associate_memory($/;"	f
xfs_buf_attach_iodone	xfs_buf_item.c	/^xfs_buf_attach_iodone($/;"	f
xfs_buf_bawrite	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_bawrite);$/;"	v
xfs_buf_bio_end_io	xfs_buf.c	/^xfs_buf_bio_end_io($/;"	f
xfs_buf_btoc	xfs_buf.h	37;"	d
xfs_buf_btoct	xfs_buf.h	38;"	d
xfs_buf_cancel	xfs_log_recover.c	/^struct xfs_buf_cancel {$/;"	s	file:
xfs_buf_cmp	xfs_buf.c	/^xfs_buf_cmp($/;"	f	file:
xfs_buf_ctob	xfs_buf.h	36;"	d
xfs_buf_delwri_dequeue	xfs_buf.c	/^xfs_buf_delwri_dequeue($/;"	f
xfs_buf_delwri_dequeue	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_delwri_dequeue);$/;"	v
xfs_buf_delwri_promote	xfs_buf.c	/^xfs_buf_delwri_promote($/;"	f
xfs_buf_delwri_queue	xfs_buf.c	/^xfs_buf_delwri_queue($/;"	f
xfs_buf_delwri_queue	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_delwri_queue);$/;"	v
xfs_buf_delwri_split	xfs_buf.c	/^xfs_buf_delwri_split($/;"	f
xfs_buf_delwri_split	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_delwri_split);$/;"	v
xfs_buf_do_callbacks	xfs_buf_item.c	/^xfs_buf_do_callbacks($/;"	f
xfs_buf_error_relse	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_error_relse);$/;"	v
xfs_buf_find	xfs_trace.h	/^DEFINE_BUF_FLAGS_EVENT(xfs_buf_find);$/;"	v
xfs_buf_flags_t	xfs_buf.h	/^typedef unsigned int xfs_buf_flags_t;$/;"	t
xfs_buf_free	xfs_buf.c	/^xfs_buf_free($/;"	f
xfs_buf_free	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_free);$/;"	v
xfs_buf_get	xfs_buf.c	/^xfs_buf_get($/;"	f
xfs_buf_get	xfs_trace.h	/^DEFINE_BUF_FLAGS_EVENT(xfs_buf_get);$/;"	v
xfs_buf_get_uncached	xfs_buf.c	/^xfs_buf_get_uncached($/;"	f
xfs_buf_get_uncached	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_get_uncached);$/;"	v
xfs_buf_geterror	xfs_buf.h	/^static inline int xfs_buf_geterror(xfs_buf_t *bp)$/;"	f
xfs_buf_hold	xfs_buf.c	/^xfs_buf_hold($/;"	f
xfs_buf_hold	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_hold);$/;"	v
xfs_buf_init	xfs_buf.c	/^xfs_buf_init(void)$/;"	f
xfs_buf_init	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_init);$/;"	v
xfs_buf_iodone	xfs_buf_item.c	/^xfs_buf_iodone($/;"	f
xfs_buf_iodone	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_iodone);$/;"	v
xfs_buf_iodone_callbacks	xfs_buf_item.c	/^xfs_buf_iodone_callbacks($/;"	f
xfs_buf_iodone_t	xfs_buf.h	/^typedef void (*xfs_buf_iodone_t)(struct xfs_buf *);$/;"	t
xfs_buf_iodone_work	xfs_buf.c	/^xfs_buf_iodone_work($/;"	f
xfs_buf_ioend	xfs_buf.c	/^xfs_buf_ioend($/;"	f
xfs_buf_ioerror	xfs_buf.c	/^xfs_buf_ioerror($/;"	f
xfs_buf_ioerror_alert	xfs_buf.c	/^xfs_buf_ioerror_alert($/;"	f
xfs_buf_iomove	xfs_buf.c	/^xfs_buf_iomove($/;"	f
xfs_buf_iorequest	xfs_buf.c	/^xfs_buf_iorequest($/;"	f
xfs_buf_iorequest	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_iorequest);$/;"	v
xfs_buf_iowait	xfs_buf.c	/^xfs_buf_iowait($/;"	f
xfs_buf_iowait	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_iowait);$/;"	v
xfs_buf_iowait_done	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_iowait_done);$/;"	v
xfs_buf_is_vmapped	xfs_buf.c	/^xfs_buf_is_vmapped($/;"	f	file:
xfs_buf_islocked	xfs_buf.h	196;"	d
xfs_buf_ispinned	xfs_buf.h	/^static inline int xfs_buf_ispinned(struct xfs_buf *bp)$/;"	f
xfs_buf_item_committed	xfs_buf_item.c	/^xfs_buf_item_committed($/;"	f
xfs_buf_item_committed	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_committed);$/;"	v
xfs_buf_item_committing	xfs_buf_item.c	/^xfs_buf_item_committing($/;"	f
xfs_buf_item_dirty	xfs_buf_item.c	/^xfs_buf_item_dirty($/;"	f
xfs_buf_item_flush_log_debug	xfs_buf_item.c	/^xfs_buf_item_flush_log_debug($/;"	f
xfs_buf_item_flush_log_debug	xfs_buf_item.h	125;"	d
xfs_buf_item_format	xfs_buf_item.c	/^xfs_buf_item_format($/;"	f
xfs_buf_item_format	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_format);$/;"	v
xfs_buf_item_format_stale	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_format_stale);$/;"	v
xfs_buf_item_free	xfs_buf_item.c	/^xfs_buf_item_free($/;"	f
xfs_buf_item_init	xfs_buf_item.c	/^xfs_buf_item_init($/;"	f
xfs_buf_item_iodone	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_item_iodone);$/;"	v
xfs_buf_item_iodone_async	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_item_iodone_async);$/;"	v
xfs_buf_item_log	xfs_buf_item.c	/^xfs_buf_item_log($/;"	f
xfs_buf_item_log_check	xfs_buf_item.c	/^xfs_buf_item_log_check($/;"	f
xfs_buf_item_log_check	xfs_buf_item.c	141;"	d	file:
xfs_buf_item_log_debug	xfs_buf_item.c	/^xfs_buf_item_log_debug($/;"	f
xfs_buf_item_log_debug	xfs_buf_item.c	140;"	d	file:
xfs_buf_item_ops	xfs_buf_item.c	/^static const struct xfs_item_ops xfs_buf_item_ops = {$/;"	v	typeref:struct:xfs_item_ops	file:
xfs_buf_item_pin	xfs_buf_item.c	/^xfs_buf_item_pin($/;"	f
xfs_buf_item_pin	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_pin);$/;"	v
xfs_buf_item_push	xfs_buf_item.c	/^xfs_buf_item_push($/;"	f
xfs_buf_item_push	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_push);$/;"	v
xfs_buf_item_pushbuf	xfs_buf_item.c	/^xfs_buf_item_pushbuf($/;"	f
xfs_buf_item_pushbuf	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_pushbuf);$/;"	v
xfs_buf_item_relse	xfs_buf_item.c	/^xfs_buf_item_relse($/;"	f
xfs_buf_item_relse	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_item_relse);$/;"	v
xfs_buf_item_size	xfs_buf_item.c	/^xfs_buf_item_size($/;"	f
xfs_buf_item_size	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_size);$/;"	v
xfs_buf_item_size_stale	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_size_stale);$/;"	v
xfs_buf_item_trylock	xfs_buf_item.c	/^xfs_buf_item_trylock($/;"	f
xfs_buf_item_trylock	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_trylock);$/;"	v
xfs_buf_item_unlock	xfs_buf_item.c	/^xfs_buf_item_unlock($/;"	f
xfs_buf_item_unlock	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_unlock);$/;"	v
xfs_buf_item_unlock_stale	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_unlock_stale);$/;"	v
xfs_buf_item_unpin	xfs_buf_item.c	/^xfs_buf_item_unpin($/;"	f
xfs_buf_item_unpin	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_unpin);$/;"	v
xfs_buf_item_unpin_stale	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_buf_item_unpin_stale);$/;"	v
xfs_buf_item_zone	xfs_buf_item.c	/^kmem_zone_t	*xfs_buf_item_zone;$/;"	v
xfs_buf_lock	xfs_buf.c	/^xfs_buf_lock($/;"	f
xfs_buf_lock	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_lock);$/;"	v
xfs_buf_lock_done	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_lock_done);$/;"	v
xfs_buf_log_format	xfs_buf_item.h	/^typedef struct xfs_buf_log_format {$/;"	s
xfs_buf_log_format_t	xfs_buf_item.h	/^} xfs_buf_log_format_t;$/;"	t	typeref:struct:xfs_buf_log_format
xfs_buf_log_item	xfs_buf_item.h	/^typedef struct xfs_buf_log_item {$/;"	s
xfs_buf_log_item_t	xfs_buf_item.h	/^} xfs_buf_log_item_t;$/;"	t	typeref:struct:xfs_buf_log_item
xfs_buf_lru_add	xfs_buf.c	/^xfs_buf_lru_add($/;"	f
xfs_buf_lru_del	xfs_buf.c	/^xfs_buf_lru_del($/;"	f
xfs_buf_offset	xfs_buf.c	/^xfs_buf_offset($/;"	f
xfs_buf_poff	xfs_buf.h	39;"	d
xfs_buf_read	xfs_buf.c	/^xfs_buf_read($/;"	f
xfs_buf_read	xfs_trace.h	/^DEFINE_BUF_FLAGS_EVENT(xfs_buf_read);$/;"	v
xfs_buf_read_uncached	xfs_buf.c	/^xfs_buf_read_uncached($/;"	f
xfs_buf_readahead	xfs_buf.c	/^xfs_buf_readahead($/;"	f
xfs_buf_rele	xfs_buf.c	/^xfs_buf_rele($/;"	f
xfs_buf_rele	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_rele);$/;"	v
xfs_buf_relse	xfs_buf.h	/^static inline void xfs_buf_relse(xfs_buf_t *bp)$/;"	f
xfs_buf_rw_t	xfs_buf.h	/^} xfs_buf_rw_t;$/;"	t	typeref:enum:__anon14
xfs_buf_set_empty	xfs_buf.c	/^xfs_buf_set_empty($/;"	f
xfs_buf_set_ref	xfs_buf.h	/^static inline void xfs_buf_set_ref(struct xfs_buf *bp, int lru_ref)$/;"	f
xfs_buf_stale	xfs_buf.c	/^xfs_buf_stale($/;"	f
xfs_buf_t	xfs_buf.h	/^} xfs_buf_t;$/;"	t	typeref:struct:xfs_buf
xfs_buf_terminate	xfs_buf.c	/^xfs_buf_terminate(void)$/;"	f
xfs_buf_timer	xfs_sysctl.h	/^	xfs_sysctl_val_t xfs_buf_timer;	\/* Interval between xfsbufd wakeups. *\/$/;"	m	struct:xfs_param
xfs_buf_timer_centisecs	xfs_linux.h	115;"	d
xfs_buf_trylock	xfs_buf.c	/^xfs_buf_trylock($/;"	f
xfs_buf_trylock	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_trylock);$/;"	v
xfs_buf_unlock	xfs_buf.c	/^xfs_buf_unlock($/;"	f
xfs_buf_unlock	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_buf_unlock);$/;"	v
xfs_buf_vmap_len	xfs_buf.c	/^xfs_buf_vmap_len($/;"	f	file:
xfs_buf_wait_unpin	xfs_buf.c	/^xfs_buf_wait_unpin($/;"	f
xfs_buf_zero	xfs_buf.h	212;"	d
xfs_buf_zone	xfs_buf.c	/^static kmem_zone_t *xfs_buf_zone;$/;"	v	file:
xfs_buftarg	xfs_buf.h	/^typedef struct xfs_buftarg {$/;"	s
xfs_buftarg_flags_t	xfs_buf.h	/^} xfs_buftarg_flags_t;$/;"	t	typeref:enum:__anon15
xfs_buftarg_shrink	xfs_buf.c	/^xfs_buftarg_shrink($/;"	f
xfs_buftarg_t	xfs_buf.h	/^} xfs_buftarg_t;$/;"	t	typeref:struct:xfs_buftarg
xfs_bulkstat	xfs_itable.c	/^xfs_bulkstat($/;"	f
xfs_bulkstat_one	xfs_itable.c	/^xfs_bulkstat_one($/;"	f
xfs_bulkstat_one_compat	xfs_ioctl32.c	/^xfs_bulkstat_one_compat($/;"	f
xfs_bulkstat_one_fmt	xfs_itable.c	/^xfs_bulkstat_one_fmt($/;"	f
xfs_bulkstat_one_fmt_compat	xfs_ioctl32.c	/^xfs_bulkstat_one_fmt_compat($/;"	f
xfs_bulkstat_one_int	xfs_itable.c	/^xfs_bulkstat_one_int($/;"	f
xfs_bulkstat_single	xfs_itable.c	/^xfs_bulkstat_single($/;"	f
xfs_bump_ino_vers2	xfs_utils.c	/^xfs_bump_ino_vers2($/;"	f
xfs_bumplink	xfs_utils.c	/^xfs_bumplink($/;"	f
xfs_bunmapi	xfs_bmap.c	/^xfs_bunmapi($/;"	f
xfs_busy_extent	xfs_ag.h	/^struct xfs_busy_extent {$/;"	s
xfs_busy_extent_ag_cmp	xfs_alloc.c	/^xfs_busy_extent_ag_cmp($/;"	f
xfs_bwrite	xfs_buf.c	/^xfs_bwrite($/;"	f
xfs_caddr_t	xfs_types.h	/^typedef char *			xfs_caddr_t;	\/* <core address> type *\/$/;"	t
xfs_calc_addafork_reservation	xfs_trans.c	/^xfs_calc_addafork_reservation($/;"	f
xfs_calc_attrinval_reservation	xfs_trans.c	/^xfs_calc_attrinval_reservation($/;"	f
xfs_calc_attrrm_reservation	xfs_trans.c	/^xfs_calc_attrrm_reservation($/;"	f
xfs_calc_attrset_reservation	xfs_trans.c	/^xfs_calc_attrset_reservation($/;"	f
xfs_calc_clear_agi_bucket_reservation	xfs_trans.c	/^xfs_calc_clear_agi_bucket_reservation($/;"	f
xfs_calc_create_reservation	xfs_trans.c	/^xfs_calc_create_reservation($/;"	f
xfs_calc_growdata_reservation	xfs_trans.c	/^xfs_calc_growdata_reservation($/;"	f
xfs_calc_growrtalloc_reservation	xfs_trans.c	/^xfs_calc_growrtalloc_reservation($/;"	f
xfs_calc_growrtfree_reservation	xfs_trans.c	/^xfs_calc_growrtfree_reservation($/;"	f
xfs_calc_growrtzero_reservation	xfs_trans.c	/^xfs_calc_growrtzero_reservation($/;"	f
xfs_calc_ichange_reservation	xfs_trans.c	/^xfs_calc_ichange_reservation($/;"	f
xfs_calc_ifree_reservation	xfs_trans.c	/^xfs_calc_ifree_reservation($/;"	f
xfs_calc_itruncate_reservation	xfs_trans.c	/^xfs_calc_itruncate_reservation($/;"	f
xfs_calc_link_reservation	xfs_trans.c	/^xfs_calc_link_reservation($/;"	f
xfs_calc_mkdir_reservation	xfs_trans.c	/^xfs_calc_mkdir_reservation($/;"	f
xfs_calc_remove_reservation	xfs_trans.c	/^xfs_calc_remove_reservation($/;"	f
xfs_calc_rename_reservation	xfs_trans.c	/^xfs_calc_rename_reservation($/;"	f
xfs_calc_swrite_reservation	xfs_trans.c	/^xfs_calc_swrite_reservation($/;"	f
xfs_calc_symlink_reservation	xfs_trans.c	/^xfs_calc_symlink_reservation($/;"	f
xfs_calc_write_reservation	xfs_trans.c	/^xfs_calc_write_reservation($/;"	f
xfs_calc_writeid_reservation	xfs_trans.c	/^xfs_calc_writeid_reservation(xfs_mount_t *mp)$/;"	f
xfs_cancel_ioend	xfs_aops.c	/^xfs_cancel_ioend($/;"	f
xfs_change_file_space	xfs_vnodeops.c	/^xfs_change_file_space($/;"	f
xfs_check_agi_freecount	xfs_ialloc.c	/^xfs_check_agi_freecount($/;"	f
xfs_check_agi_freecount	xfs_ialloc.c	147;"	d	file:
xfs_check_agi_unlinked	xfs_ialloc.c	/^xfs_check_agi_unlinked($/;"	f
xfs_check_agi_unlinked	xfs_ialloc.c	1466;"	d	file:
xfs_check_block	xfs_bmap.c	/^xfs_check_block($/;"	f
xfs_check_nostate_extents	xfs_bmap_btree.c	/^xfs_check_nostate_extents($/;"	f
xfs_check_sizes	xfs_mount.c	/^xfs_check_sizes(xfs_mount_t *mp)$/;"	f
xfs_cil	xfs_log_priv.h	/^struct xfs_cil {$/;"	s
xfs_cil_ctx	xfs_log_priv.h	/^struct xfs_cil_ctx {$/;"	s
xfs_cil_prepare_item	xfs_log_cil.c	/^xfs_cil_prepare_item($/;"	f
xfs_cleanup_inode	xfs_iops.c	/^xfs_cleanup_inode($/;"	f
xfs_cleanup_procfs	xfs_stats.c	/^xfs_cleanup_procfs(void)$/;"	f
xfs_cleanup_procfs	xfs_stats.h	/^static inline void xfs_cleanup_procfs(void)$/;"	f
xfs_close_devices	xfs_super.c	/^xfs_close_devices($/;"	f
xfs_cluster_write	xfs_aops.c	/^xfs_cluster_write($/;"	f
xfs_compat_attrlist_by_handle	xfs_ioctl32.c	/^xfs_compat_attrlist_by_handle($/;"	f
xfs_compat_attrmulti_by_handle	xfs_ioctl32.c	/^xfs_compat_attrmulti_by_handle($/;"	f
xfs_compat_flock64_copyin	xfs_ioctl32.c	/^xfs_compat_flock64_copyin($/;"	f
xfs_compat_fssetdm_by_handle	xfs_ioctl32.c	/^xfs_compat_fssetdm_by_handle($/;"	f
xfs_compat_growfs_data_copyin	xfs_ioctl32.c	/^xfs_compat_growfs_data_copyin($/;"	f
xfs_compat_growfs_rt_copyin	xfs_ioctl32.c	/^xfs_compat_growfs_rt_copyin($/;"	f
xfs_compat_handlereq_copyin	xfs_ioctl32.c	/^xfs_compat_handlereq_copyin($/;"	f
xfs_compat_handlereq_to_dentry	xfs_ioctl32.c	/^xfs_compat_handlereq_to_dentry($/;"	f
xfs_compat_ioc_bulkstat	xfs_ioctl32.c	/^xfs_compat_ioc_bulkstat($/;"	f
xfs_compat_ioc_fsgeometry_v1	xfs_ioctl32.c	/^xfs_compat_ioc_fsgeometry_v1($/;"	f
xfs_contig_bits	xfs_bit.c	/^xfs_contig_bits(uint *map, uint	size, uint start_bit)$/;"	f
xfs_convert_page	xfs_aops.c	/^xfs_convert_page($/;"	f
xfs_corruption_error	xfs_error.c	/^xfs_corruption_error($/;"	f
xfs_count_page_state	xfs_aops.c	/^xfs_count_page_state($/;"	f
xfs_create	xfs_trace.h	/^DEFINE_NAMESPACE_EVENT(xfs_create);$/;"	v
xfs_create	xfs_vnodeops.c	/^xfs_create($/;"	f
xfs_da_args	xfs_da_btree.h	/^typedef struct xfs_da_args {$/;"	s
xfs_da_args_t	xfs_da_btree.h	/^} xfs_da_args_t;$/;"	t	typeref:struct:xfs_da_args
xfs_da_binval	xfs_da_btree.c	/^xfs_da_binval(xfs_trans_t *tp, xfs_dabuf_t *dabuf)$/;"	f
xfs_da_blk_link	xfs_da_btree.c	/^xfs_da_blk_link(xfs_da_state_t *state, xfs_da_state_blk_t *old_blk,$/;"	f
xfs_da_blk_unlink	xfs_da_btree.c	/^xfs_da_blk_unlink(xfs_da_state_t *state, xfs_da_state_blk_t *drop_blk,$/;"	f
xfs_da_blkinfo	xfs_da_btree.h	/^typedef struct xfs_da_blkinfo {$/;"	s
xfs_da_blkinfo_onlychild_validate	xfs_da_btree.c	/^xfs_da_blkinfo_onlychild_validate(struct xfs_da_blkinfo *blkinfo, __u16 level)$/;"	f	file:
xfs_da_blkinfo_onlychild_validate	xfs_da_btree.c	710;"	d	file:
xfs_da_blkinfo_t	xfs_da_btree.h	/^} xfs_da_blkinfo_t;$/;"	t	typeref:struct:xfs_da_blkinfo
xfs_da_blkno	xfs_da_btree.c	/^xfs_da_blkno(xfs_dabuf_t *dabuf)$/;"	f
xfs_da_brelse	xfs_da_btree.c	/^xfs_da_brelse(xfs_trans_t *tp, xfs_dabuf_t *dabuf)$/;"	f
xfs_da_btree_corrupt	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_da_btree_corrupt);$/;"	v
xfs_da_buf_clean	xfs_da_btree.c	/^xfs_da_buf_clean(xfs_dabuf_t *dabuf)$/;"	f
xfs_da_buf_done	xfs_da_btree.c	/^xfs_da_buf_done(xfs_dabuf_t *dabuf)$/;"	f
xfs_da_buf_make	xfs_da_btree.c	/^xfs_da_buf_make(int nbuf, xfs_buf_t **bps)$/;"	f
xfs_da_compname	xfs_da_btree.c	/^xfs_da_compname($/;"	f
xfs_da_do_buf	xfs_da_btree.c	/^xfs_da_do_buf($/;"	f
xfs_da_fixhashpath	xfs_da_btree.c	/^xfs_da_fixhashpath(xfs_da_state_t *state, xfs_da_state_path_t *path)$/;"	f
xfs_da_get_buf	xfs_da_btree.c	/^xfs_da_get_buf($/;"	f
xfs_da_grow_inode	xfs_da_btree.c	/^xfs_da_grow_inode($/;"	f
xfs_da_grow_inode_int	xfs_da_btree.c	/^xfs_da_grow_inode_int($/;"	f
xfs_da_hashname	xfs_da_btree.c	/^xfs_da_hashname(const __uint8_t *name, int namelen)$/;"	f
xfs_da_intnode	xfs_da_btree.h	/^typedef struct xfs_da_intnode {$/;"	s
xfs_da_intnode_t	xfs_da_btree.h	/^} xfs_da_intnode_t;$/;"	t	typeref:struct:xfs_da_intnode
xfs_da_join	xfs_da_btree.c	/^xfs_da_join(xfs_da_state_t *state)$/;"	f
xfs_da_log_buf	xfs_da_btree.c	/^xfs_da_log_buf(xfs_trans_t *tp, xfs_dabuf_t *dabuf, uint first, uint last)$/;"	f
xfs_da_map_covers_blocks	xfs_da_btree.c	/^xfs_da_map_covers_blocks($/;"	f
xfs_da_node_add	xfs_da_btree.c	/^xfs_da_node_add(xfs_da_state_t *state, xfs_da_state_blk_t *oldblk,$/;"	f
xfs_da_node_create	xfs_da_btree.c	/^xfs_da_node_create(xfs_da_args_t *args, xfs_dablk_t blkno, int level,$/;"	f
xfs_da_node_entry	xfs_da_btree.h	/^	struct xfs_da_node_entry {$/;"	s	struct:xfs_da_intnode
xfs_da_node_entry_t	xfs_da_btree.h	/^typedef struct xfs_da_node_entry xfs_da_node_entry_t;$/;"	t	typeref:struct:xfs_da_node_entry
xfs_da_node_hdr	xfs_da_btree.h	/^	struct xfs_da_node_hdr {	\/* constant-structure header block *\/$/;"	s	struct:xfs_da_intnode
xfs_da_node_hdr_t	xfs_da_btree.h	/^typedef struct xfs_da_node_hdr xfs_da_node_hdr_t;$/;"	t	typeref:struct:xfs_da_node_hdr
xfs_da_node_lasthash	xfs_da_btree.c	/^xfs_da_node_lasthash(xfs_dabuf_t *bp, int *count)$/;"	f
xfs_da_node_lookup_int	xfs_da_btree.c	/^xfs_da_node_lookup_int(xfs_da_state_t *state, int *result)$/;"	f
xfs_da_node_order	xfs_da_btree.c	/^xfs_da_node_order(xfs_dabuf_t *node1_bp, xfs_dabuf_t *node2_bp)$/;"	f
xfs_da_node_rebalance	xfs_da_btree.c	/^xfs_da_node_rebalance(xfs_da_state_t *state, xfs_da_state_blk_t *blk1,$/;"	f
xfs_da_node_remove	xfs_da_btree.c	/^xfs_da_node_remove(xfs_da_state_t *state, xfs_da_state_blk_t *drop_blk)$/;"	f
xfs_da_node_split	xfs_da_btree.c	/^xfs_da_node_split(xfs_da_state_t *state, xfs_da_state_blk_t *oldblk,$/;"	f
xfs_da_node_toosmall	xfs_da_btree.c	/^xfs_da_node_toosmall(xfs_da_state_t *state, int *action)$/;"	f
xfs_da_node_unbalance	xfs_da_btree.c	/^xfs_da_node_unbalance(xfs_da_state_t *state, xfs_da_state_blk_t *drop_blk,$/;"	f
xfs_da_path_shift	xfs_da_btree.c	/^xfs_da_path_shift(xfs_da_state_t *state, xfs_da_state_path_t *path,$/;"	f
xfs_da_read_buf	xfs_da_btree.c	/^xfs_da_read_buf($/;"	f
xfs_da_reada_buf	xfs_da_btree.c	/^xfs_da_reada_buf($/;"	f
xfs_da_root_join	xfs_da_btree.c	/^xfs_da_root_join(xfs_da_state_t *state, xfs_da_state_blk_t *root_blk)$/;"	f
xfs_da_root_split	xfs_da_btree.c	/^xfs_da_root_split(xfs_da_state_t *state, xfs_da_state_blk_t *blk1,$/;"	f
xfs_da_shrink_inode	xfs_da_btree.c	/^xfs_da_shrink_inode(xfs_da_args_t *args, xfs_dablk_t dead_blkno,$/;"	f
xfs_da_split	xfs_da_btree.c	/^xfs_da_split(xfs_da_state_t *state)$/;"	f
xfs_da_state	xfs_da_btree.h	/^typedef struct xfs_da_state {$/;"	s
xfs_da_state_alloc	xfs_da_btree.c	/^xfs_da_state_alloc(void)$/;"	f
xfs_da_state_blk	xfs_da_btree.h	/^typedef struct xfs_da_state_blk {$/;"	s
xfs_da_state_blk_t	xfs_da_btree.h	/^} xfs_da_state_blk_t;$/;"	t	typeref:struct:xfs_da_state_blk
xfs_da_state_free	xfs_da_btree.c	/^xfs_da_state_free(xfs_da_state_t *state)$/;"	f
xfs_da_state_kill_altpath	xfs_da_btree.c	/^xfs_da_state_kill_altpath(xfs_da_state_t *state)$/;"	f
xfs_da_state_path	xfs_da_btree.h	/^typedef struct xfs_da_state_path {$/;"	s
xfs_da_state_path_t	xfs_da_btree.h	/^} xfs_da_state_path_t;$/;"	t	typeref:struct:xfs_da_state_path
xfs_da_state_t	xfs_da_btree.h	/^} xfs_da_state_t;$/;"	t	typeref:struct:xfs_da_state
xfs_da_state_zone	xfs_da_btree.c	/^kmem_zone_t *xfs_da_state_zone;	\/* anchor for state struct zone *\/$/;"	v
xfs_da_swap_lastblock	xfs_da_btree.c	/^xfs_da_swap_lastblock(xfs_da_args_t *args, xfs_dablk_t *dead_blknop,$/;"	f
xfs_dablk_t	xfs_types.h	/^typedef	__uint32_t	xfs_dablk_t;	\/* dir\/attr block number (in file) *\/$/;"	t
xfs_dabuf	xfs_da_btree.h	/^typedef struct xfs_dabuf {$/;"	s
xfs_dabuf_t	xfs_da_btree.h	/^} xfs_dabuf_t;$/;"	t	typeref:struct:xfs_dabuf
xfs_dabuf_zone	xfs_da_btree.c	/^kmem_zone_t *xfs_dabuf_zone;		\/* dabuf zone *\/$/;"	v
xfs_dacmp	xfs_da_btree.h	/^enum xfs_dacmp {$/;"	g
xfs_daddr_t	xfs_types.h	/^typedef __s64			xfs_daddr_t;	\/* <disk address> type *\/$/;"	t
xfs_daddr_to_agbno	xfs_mount.h	/^xfs_daddr_to_agbno(struct xfs_mount *mp, xfs_daddr_t d)$/;"	f
xfs_daddr_to_agbno	xfs_mount.h	49;"	d
xfs_daddr_to_agno	xfs_mount.h	/^xfs_daddr_to_agno(struct xfs_mount *mp, xfs_daddr_t d)$/;"	f
xfs_daddr_to_agno	xfs_mount.h	47;"	d
xfs_dahash_t	xfs_types.h	/^typedef	__uint32_t	xfs_dahash_t;	\/* dir\/attr hash value *\/$/;"	t
xfs_debug	xfs_message.h	/^void xfs_debug(const struct xfs_mount *mp, const char *fmt, ...)$/;"	f
xfs_default_attroffset	xfs_bmap.c	/^xfs_default_attroffset($/;"	f
xfs_default_hashname	xfs_da_btree.c	/^xfs_default_hashname($/;"	f	file:
xfs_default_nameops	xfs_da_btree.c	/^const struct xfs_nameops xfs_default_nameops = {$/;"	v	typeref:struct:xfs_nameops
xfs_default_resblks	xfs_mount.c	/^xfs_default_resblks(xfs_mount_t *mp)$/;"	f
xfs_delalloc_enospc	xfs_trace.h	/^DEFINE_SIMPLE_IO_EVENT(xfs_delalloc_enospc);$/;"	v
xfs_dentry_to_name	xfs_iops.c	/^xfs_dentry_to_name($/;"	f	file:
xfs_destroy_inode	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_destroy_inode);$/;"	v
xfs_destroy_ioend	xfs_aops.c	/^xfs_destroy_ioend($/;"	f
xfs_destroy_workqueues	xfs_super.c	/^xfs_destroy_workqueues(void)$/;"	f
xfs_destroy_zones	xfs_super.c	/^xfs_destroy_zones(void)$/;"	f
xfs_dev_is_read_only	xfs_mount.c	/^xfs_dev_is_read_only($/;"	f
xfs_dev_t	xfs_types.h	/^typedef __u32			xfs_dev_t;$/;"	t
xfs_dfilblks_t	xfs_types.h	/^typedef	__uint64_t	xfs_dfilblks_t;	\/* number of blocks in a file *\/$/;"	t
xfs_dfiloff_t	xfs_types.h	/^typedef	__uint64_t	xfs_dfiloff_t;	\/* block number in a file *\/$/;"	t
xfs_dfsbno_t	xfs_types.h	/^typedef __uint64_t	xfs_dfsbno_t;	\/* blockno in filesystem (agno|agbno) *\/$/;"	t
xfs_di2lxflags	xfs_ioctl.c	/^xfs_di2lxflags($/;"	f
xfs_dialloc	xfs_ialloc.c	/^xfs_dialloc($/;"	f
xfs_dic2xflags	xfs_inode.c	/^xfs_dic2xflags($/;"	f
xfs_diflags_to_iflags	xfs_iops.c	/^xfs_diflags_to_iflags($/;"	f
xfs_diflags_to_linux	xfs_ioctl.c	/^xfs_diflags_to_linux($/;"	f
xfs_difree	xfs_ialloc.c	/^xfs_difree($/;"	f
xfs_dinode	xfs_dinode.h	/^typedef struct xfs_dinode {$/;"	s
xfs_dinode_fmt	xfs_dinode.h	/^typedef enum xfs_dinode_fmt {$/;"	g
xfs_dinode_fmt_t	xfs_dinode.h	/^} xfs_dinode_fmt_t;$/;"	t	typeref:enum:xfs_dinode_fmt
xfs_dinode_from_disk	xfs_inode.c	/^xfs_dinode_from_disk($/;"	f
xfs_dinode_get_rdev	xfs_dinode.h	/^static inline xfs_dev_t xfs_dinode_get_rdev(struct xfs_dinode *dip)$/;"	f
xfs_dinode_put_rdev	xfs_dinode.h	/^static inline void xfs_dinode_put_rdev(struct xfs_dinode *dip, xfs_dev_t rdev)$/;"	f
xfs_dinode_t	xfs_dinode.h	/^} __attribute__((packed)) xfs_dinode_t;$/;"	t	typeref:struct:xfs_dinode
xfs_dinode_to_disk	xfs_inode.c	/^xfs_dinode_to_disk($/;"	f
xfs_dir2_block_addname	xfs_dir2_block.c	/^xfs_dir2_block_addname($/;"	f
xfs_dir2_block_addname	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_block_addname);$/;"	v
xfs_dir2_block_getdents	xfs_dir2_block.c	/^xfs_dir2_block_getdents($/;"	f
xfs_dir2_block_leaf_p	xfs_dir2_format.h	/^xfs_dir2_block_leaf_p(struct xfs_dir2_block_tail *btp)$/;"	f
xfs_dir2_block_log_leaf	xfs_dir2_block.c	/^xfs_dir2_block_log_leaf($/;"	f	file:
xfs_dir2_block_log_tail	xfs_dir2_block.c	/^xfs_dir2_block_log_tail($/;"	f	file:
xfs_dir2_block_lookup	xfs_dir2_block.c	/^xfs_dir2_block_lookup($/;"	f
xfs_dir2_block_lookup	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_block_lookup);$/;"	v
xfs_dir2_block_lookup_int	xfs_dir2_block.c	/^xfs_dir2_block_lookup_int($/;"	f	file:
xfs_dir2_block_removename	xfs_dir2_block.c	/^xfs_dir2_block_removename($/;"	f
xfs_dir2_block_removename	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_block_removename);$/;"	v
xfs_dir2_block_replace	xfs_dir2_block.c	/^xfs_dir2_block_replace($/;"	f
xfs_dir2_block_replace	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_block_replace);$/;"	v
xfs_dir2_block_sfsize	xfs_dir2_sf.c	/^xfs_dir2_block_sfsize($/;"	f
xfs_dir2_block_sort	xfs_dir2_block.c	/^xfs_dir2_block_sort($/;"	f	file:
xfs_dir2_block_tail	xfs_dir2_format.h	/^typedef struct xfs_dir2_block_tail {$/;"	s
xfs_dir2_block_tail_p	xfs_dir2_format.h	/^xfs_dir2_block_tail_p(struct xfs_mount *mp, struct xfs_dir2_data_hdr *hdr)$/;"	f
xfs_dir2_block_tail_t	xfs_dir2_format.h	/^} xfs_dir2_block_tail_t;$/;"	t	typeref:struct:xfs_dir2_block_tail
xfs_dir2_block_to_leaf	xfs_dir2_leaf.c	/^xfs_dir2_block_to_leaf($/;"	f
xfs_dir2_block_to_leaf	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_block_to_leaf);$/;"	v
xfs_dir2_block_to_sf	xfs_dir2_sf.c	/^xfs_dir2_block_to_sf($/;"	f
xfs_dir2_block_to_sf	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_block_to_sf);$/;"	v
xfs_dir2_byte_to_da	xfs_dir2_format.h	/^xfs_dir2_byte_to_da(struct xfs_mount *mp, xfs_dir2_off_t by)$/;"	f
xfs_dir2_byte_to_dataptr	xfs_dir2_format.h	/^xfs_dir2_byte_to_dataptr(struct xfs_mount *mp, xfs_dir2_off_t by)$/;"	f
xfs_dir2_byte_to_db	xfs_dir2_format.h	/^xfs_dir2_byte_to_db(struct xfs_mount *mp, xfs_dir2_off_t by)$/;"	f
xfs_dir2_byte_to_off	xfs_dir2_format.h	/^xfs_dir2_byte_to_off(struct xfs_mount *mp, xfs_dir2_off_t by)$/;"	f
xfs_dir2_da_to_byte	xfs_dir2_format.h	/^xfs_dir2_da_to_byte(struct xfs_mount *mp, xfs_dablk_t da)$/;"	f
xfs_dir2_da_to_db	xfs_dir2_format.h	/^xfs_dir2_da_to_db(struct xfs_mount *mp, xfs_dablk_t da)$/;"	f
xfs_dir2_data_aoff_t	xfs_dir2_format.h	/^typedef uint		xfs_dir2_data_aoff_t;	\/* argument form *\/$/;"	t
xfs_dir2_data_check	xfs_dir2_data.c	/^xfs_dir2_data_check($/;"	f
xfs_dir2_data_check	xfs_dir2_priv.h	46;"	d
xfs_dir2_data_entry	xfs_dir2_format.h	/^typedef struct xfs_dir2_data_entry {$/;"	s
xfs_dir2_data_entry_t	xfs_dir2_format.h	/^} xfs_dir2_data_entry_t;$/;"	t	typeref:struct:xfs_dir2_data_entry
xfs_dir2_data_entry_tag_p	xfs_dir2_format.h	/^xfs_dir2_data_entry_tag_p(struct xfs_dir2_data_entry *dep)$/;"	f
xfs_dir2_data_entsize	xfs_dir2_format.h	/^static inline int xfs_dir2_data_entsize(int n)$/;"	f
xfs_dir2_data_free	xfs_dir2_format.h	/^typedef struct xfs_dir2_data_free {$/;"	s
xfs_dir2_data_free_t	xfs_dir2_format.h	/^} xfs_dir2_data_free_t;$/;"	t	typeref:struct:xfs_dir2_data_free
xfs_dir2_data_freefind	xfs_dir2_data.c	/^xfs_dir2_data_freefind($/;"	f
xfs_dir2_data_freeinsert	xfs_dir2_data.c	/^xfs_dir2_data_freeinsert($/;"	f
xfs_dir2_data_freeremove	xfs_dir2_data.c	/^xfs_dir2_data_freeremove($/;"	f
xfs_dir2_data_freescan	xfs_dir2_data.c	/^xfs_dir2_data_freescan($/;"	f
xfs_dir2_data_hdr	xfs_dir2_format.h	/^typedef struct xfs_dir2_data_hdr {$/;"	s
xfs_dir2_data_hdr_t	xfs_dir2_format.h	/^} xfs_dir2_data_hdr_t;$/;"	t	typeref:struct:xfs_dir2_data_hdr
xfs_dir2_data_init	xfs_dir2_data.c	/^xfs_dir2_data_init($/;"	f
xfs_dir2_data_log_entry	xfs_dir2_data.c	/^xfs_dir2_data_log_entry($/;"	f
xfs_dir2_data_log_header	xfs_dir2_data.c	/^xfs_dir2_data_log_header($/;"	f
xfs_dir2_data_log_unused	xfs_dir2_data.c	/^xfs_dir2_data_log_unused($/;"	f
xfs_dir2_data_make_free	xfs_dir2_data.c	/^xfs_dir2_data_make_free($/;"	f
xfs_dir2_data_off_t	xfs_dir2_format.h	/^typedef	__uint16_t	xfs_dir2_data_off_t;$/;"	t
xfs_dir2_data_unused	xfs_dir2_format.h	/^typedef struct xfs_dir2_data_unused {$/;"	s
xfs_dir2_data_unused_t	xfs_dir2_format.h	/^} xfs_dir2_data_unused_t;$/;"	t	typeref:struct:xfs_dir2_data_unused
xfs_dir2_data_unused_tag_p	xfs_dir2_format.h	/^xfs_dir2_data_unused_tag_p(struct xfs_dir2_data_unused *dup)$/;"	f
xfs_dir2_data_use_free	xfs_dir2_data.c	/^xfs_dir2_data_use_free($/;"	f
xfs_dir2_dataptr_t	xfs_dir2_format.h	/^typedef	__uint32_t	xfs_dir2_dataptr_t;$/;"	t
xfs_dir2_dataptr_to_byte	xfs_dir2_format.h	/^xfs_dir2_dataptr_to_byte(struct xfs_mount *mp, xfs_dir2_dataptr_t dp)$/;"	f
xfs_dir2_dataptr_to_db	xfs_dir2_format.h	/^xfs_dir2_dataptr_to_db(struct xfs_mount *mp, xfs_dir2_dataptr_t dp)$/;"	f
xfs_dir2_dataptr_to_off	xfs_dir2_format.h	/^xfs_dir2_dataptr_to_off(struct xfs_mount *mp, xfs_dir2_dataptr_t dp)$/;"	f
xfs_dir2_db_off_to_byte	xfs_dir2_format.h	/^xfs_dir2_db_off_to_byte(struct xfs_mount *mp, xfs_dir2_db_t db,$/;"	f
xfs_dir2_db_off_to_dataptr	xfs_dir2_format.h	/^xfs_dir2_db_off_to_dataptr(struct xfs_mount *mp, xfs_dir2_db_t db,$/;"	f
xfs_dir2_db_t	xfs_dir2_format.h	/^typedef	__uint32_t	xfs_dir2_db_t;$/;"	t
xfs_dir2_db_to_da	xfs_dir2_format.h	/^xfs_dir2_db_to_da(struct xfs_mount *mp, xfs_dir2_db_t db)$/;"	f
xfs_dir2_db_to_fdb	xfs_dir2_format.h	/^xfs_dir2_db_to_fdb(struct xfs_mount *mp, xfs_dir2_db_t db)$/;"	f
xfs_dir2_db_to_fdindex	xfs_dir2_format.h	/^xfs_dir2_db_to_fdindex(struct xfs_mount *mp, xfs_dir2_db_t db)$/;"	f
xfs_dir2_free	xfs_dir2_format.h	/^typedef struct xfs_dir2_free {$/;"	s
xfs_dir2_free_hdr	xfs_dir2_format.h	/^typedef	struct xfs_dir2_free_hdr {$/;"	s
xfs_dir2_free_hdr_t	xfs_dir2_format.h	/^} xfs_dir2_free_hdr_t;$/;"	t	typeref:struct:xfs_dir2_free_hdr
xfs_dir2_free_log_bests	xfs_dir2_node.c	/^xfs_dir2_free_log_bests($/;"	f
xfs_dir2_free_log_header	xfs_dir2_node.c	/^xfs_dir2_free_log_header($/;"	f	file:
xfs_dir2_free_max_bests	xfs_dir2_format.h	/^static inline int xfs_dir2_free_max_bests(struct xfs_mount *mp)$/;"	f
xfs_dir2_free_t	xfs_dir2_format.h	/^} xfs_dir2_free_t;$/;"	t	typeref:struct:xfs_dir2_free
xfs_dir2_grow_inode	xfs_dir2.c	/^xfs_dir2_grow_inode($/;"	f
xfs_dir2_grow_inode	xfs_trace.h	/^DEFINE_DIR2_SPACE_EVENT(xfs_dir2_grow_inode);$/;"	v
xfs_dir2_ino4_t	xfs_dir2_format.h	/^typedef struct { __uint8_t i[4]; } xfs_dir2_ino4_t;$/;"	t	typeref:struct:__anon18
xfs_dir2_ino8_t	xfs_dir2_format.h	/^typedef	struct { __uint8_t i[8]; } xfs_dir2_ino8_t;$/;"	t	typeref:struct:__anon17
xfs_dir2_inou_t	xfs_dir2_format.h	/^} xfs_dir2_inou_t;$/;"	t	typeref:union:__anon19
xfs_dir2_isblock	xfs_dir2.c	/^xfs_dir2_isblock($/;"	f
xfs_dir2_isleaf	xfs_dir2.c	/^xfs_dir2_isleaf($/;"	f
xfs_dir2_leaf	xfs_dir2_format.h	/^typedef struct xfs_dir2_leaf {$/;"	s
xfs_dir2_leaf_addname	xfs_dir2_leaf.c	/^xfs_dir2_leaf_addname($/;"	f
xfs_dir2_leaf_addname	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_leaf_addname);$/;"	v
xfs_dir2_leaf_bests_p	xfs_dir2_format.h	/^xfs_dir2_leaf_bests_p(struct xfs_dir2_leaf_tail *ltp)$/;"	f
xfs_dir2_leaf_check	xfs_dir2_leaf.c	/^xfs_dir2_leaf_check($/;"	f
xfs_dir2_leaf_check	xfs_dir2_leaf.c	44;"	d	file:
xfs_dir2_leaf_compact	xfs_dir2_leaf.c	/^xfs_dir2_leaf_compact($/;"	f
xfs_dir2_leaf_compact_x1	xfs_dir2_leaf.c	/^xfs_dir2_leaf_compact_x1($/;"	f
xfs_dir2_leaf_entry	xfs_dir2_format.h	/^typedef struct xfs_dir2_leaf_entry {$/;"	s
xfs_dir2_leaf_entry_t	xfs_dir2_format.h	/^} xfs_dir2_leaf_entry_t;$/;"	t	typeref:struct:xfs_dir2_leaf_entry
xfs_dir2_leaf_find_entry	xfs_dir2_leaf.c	/^xfs_dir2_leaf_find_entry($/;"	f
xfs_dir2_leaf_find_stale	xfs_dir2_leaf.c	/^xfs_dir2_leaf_find_stale($/;"	f
xfs_dir2_leaf_getdents	xfs_dir2_leaf.c	/^xfs_dir2_leaf_getdents($/;"	f
xfs_dir2_leaf_hdr	xfs_dir2_format.h	/^typedef struct xfs_dir2_leaf_hdr {$/;"	s
xfs_dir2_leaf_hdr_t	xfs_dir2_format.h	/^} xfs_dir2_leaf_hdr_t;$/;"	t	typeref:struct:xfs_dir2_leaf_hdr
xfs_dir2_leaf_init	xfs_dir2_leaf.c	/^xfs_dir2_leaf_init($/;"	f
xfs_dir2_leaf_log_bests	xfs_dir2_leaf.c	/^xfs_dir2_leaf_log_bests($/;"	f	file:
xfs_dir2_leaf_log_ents	xfs_dir2_leaf.c	/^xfs_dir2_leaf_log_ents($/;"	f
xfs_dir2_leaf_log_header	xfs_dir2_leaf.c	/^xfs_dir2_leaf_log_header($/;"	f
xfs_dir2_leaf_log_tail	xfs_dir2_leaf.c	/^xfs_dir2_leaf_log_tail($/;"	f
xfs_dir2_leaf_lookup	xfs_dir2_leaf.c	/^xfs_dir2_leaf_lookup($/;"	f
xfs_dir2_leaf_lookup	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_leaf_lookup);$/;"	v
xfs_dir2_leaf_lookup_int	xfs_dir2_leaf.c	/^xfs_dir2_leaf_lookup_int($/;"	f	file:
xfs_dir2_leaf_removename	xfs_dir2_leaf.c	/^xfs_dir2_leaf_removename($/;"	f
xfs_dir2_leaf_removename	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_leaf_removename);$/;"	v
xfs_dir2_leaf_replace	xfs_dir2_leaf.c	/^xfs_dir2_leaf_replace($/;"	f
xfs_dir2_leaf_replace	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_leaf_replace);$/;"	v
xfs_dir2_leaf_search_hash	xfs_dir2_leaf.c	/^xfs_dir2_leaf_search_hash($/;"	f
xfs_dir2_leaf_size	xfs_dir2_leaf.c	/^xfs_dir2_leaf_size($/;"	f	file:
xfs_dir2_leaf_t	xfs_dir2_format.h	/^} xfs_dir2_leaf_t;$/;"	t	typeref:struct:xfs_dir2_leaf
xfs_dir2_leaf_tail	xfs_dir2_format.h	/^typedef struct xfs_dir2_leaf_tail {$/;"	s
xfs_dir2_leaf_tail_p	xfs_dir2_format.h	/^xfs_dir2_leaf_tail_p(struct xfs_mount *mp, struct xfs_dir2_leaf *lp)$/;"	f
xfs_dir2_leaf_tail_t	xfs_dir2_format.h	/^} xfs_dir2_leaf_tail_t;$/;"	t	typeref:struct:xfs_dir2_leaf_tail
xfs_dir2_leaf_to_block	xfs_dir2_block.c	/^xfs_dir2_leaf_to_block($/;"	f
xfs_dir2_leaf_to_block	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_leaf_to_block);$/;"	v
xfs_dir2_leaf_to_node	xfs_dir2_node.c	/^xfs_dir2_leaf_to_node($/;"	f
xfs_dir2_leaf_to_node	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_leaf_to_node);$/;"	v
xfs_dir2_leaf_trim_data	xfs_dir2_leaf.c	/^xfs_dir2_leaf_trim_data($/;"	f
xfs_dir2_leafn_add	xfs_dir2_node.c	/^xfs_dir2_leafn_add($/;"	f	file:
xfs_dir2_leafn_add	xfs_trace.h	/^DEFINE_DIR2_SPACE_EVENT(xfs_dir2_leafn_add);$/;"	v
xfs_dir2_leafn_check	xfs_dir2_node.c	/^xfs_dir2_leafn_check($/;"	f
xfs_dir2_leafn_check	xfs_dir2_node.c	45;"	d	file:
xfs_dir2_leafn_lasthash	xfs_dir2_node.c	/^xfs_dir2_leafn_lasthash($/;"	f
xfs_dir2_leafn_lookup_for_addname	xfs_dir2_node.c	/^xfs_dir2_leafn_lookup_for_addname($/;"	f
xfs_dir2_leafn_lookup_for_entry	xfs_dir2_node.c	/^xfs_dir2_leafn_lookup_for_entry($/;"	f
xfs_dir2_leafn_lookup_int	xfs_dir2_node.c	/^xfs_dir2_leafn_lookup_int($/;"	f
xfs_dir2_leafn_moveents	xfs_dir2_node.c	/^xfs_dir2_leafn_moveents($/;"	f	file:
xfs_dir2_leafn_order	xfs_dir2_node.c	/^xfs_dir2_leafn_order($/;"	f
xfs_dir2_leafn_rebalance	xfs_dir2_node.c	/^xfs_dir2_leafn_rebalance($/;"	f	file:
xfs_dir2_leafn_remove	xfs_dir2_node.c	/^xfs_dir2_leafn_remove($/;"	f	file:
xfs_dir2_leafn_remove	xfs_trace.h	/^DEFINE_DIR2_SPACE_EVENT(xfs_dir2_leafn_remove);$/;"	v
xfs_dir2_leafn_split	xfs_dir2_node.c	/^xfs_dir2_leafn_split($/;"	f
xfs_dir2_leafn_toosmall	xfs_dir2_node.c	/^xfs_dir2_leafn_toosmall($/;"	f
xfs_dir2_leafn_unbalance	xfs_dir2_node.c	/^xfs_dir2_leafn_unbalance($/;"	f
xfs_dir2_max_leaf_ents	xfs_dir2_format.h	/^static inline int xfs_dir2_max_leaf_ents(struct xfs_mount *mp)$/;"	f
xfs_dir2_node_addname	xfs_dir2_node.c	/^xfs_dir2_node_addname($/;"	f
xfs_dir2_node_addname	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_node_addname);$/;"	v
xfs_dir2_node_addname_int	xfs_dir2_node.c	/^xfs_dir2_node_addname_int($/;"	f	file:
xfs_dir2_node_lookup	xfs_dir2_node.c	/^xfs_dir2_node_lookup($/;"	f
xfs_dir2_node_lookup	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_node_lookup);$/;"	v
xfs_dir2_node_removename	xfs_dir2_node.c	/^xfs_dir2_node_removename($/;"	f
xfs_dir2_node_removename	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_node_removename);$/;"	v
xfs_dir2_node_replace	xfs_dir2_node.c	/^xfs_dir2_node_replace($/;"	f
xfs_dir2_node_replace	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_node_replace);$/;"	v
xfs_dir2_node_to_leaf	xfs_dir2_leaf.c	/^xfs_dir2_node_to_leaf($/;"	f
xfs_dir2_node_to_leaf	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_node_to_leaf);$/;"	v
xfs_dir2_node_trim_free	xfs_dir2_node.c	/^xfs_dir2_node_trim_free($/;"	f
xfs_dir2_off_t	xfs_dir2_format.h	/^typedef	xfs_off_t	xfs_dir2_off_t;$/;"	t
xfs_dir2_sf_addname	xfs_dir2_sf.c	/^xfs_dir2_sf_addname($/;"	f
xfs_dir2_sf_addname	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_sf_addname);$/;"	v
xfs_dir2_sf_addname_easy	xfs_dir2_sf.c	/^xfs_dir2_sf_addname_easy($/;"	f	file:
xfs_dir2_sf_addname_hard	xfs_dir2_sf.c	/^xfs_dir2_sf_addname_hard($/;"	f	file:
xfs_dir2_sf_addname_pick	xfs_dir2_sf.c	/^xfs_dir2_sf_addname_pick($/;"	f	file:
xfs_dir2_sf_check	xfs_dir2_sf.c	/^xfs_dir2_sf_check($/;"	f	file:
xfs_dir2_sf_check	xfs_dir2_sf.c	53;"	d	file:
xfs_dir2_sf_create	xfs_dir2_sf.c	/^xfs_dir2_sf_create($/;"	f
xfs_dir2_sf_create	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_sf_create);$/;"	v
xfs_dir2_sf_entry	xfs_dir2_format.h	/^typedef struct xfs_dir2_sf_entry {$/;"	s
xfs_dir2_sf_entry_t	xfs_dir2_format.h	/^} __arch_pack xfs_dir2_sf_entry_t;$/;"	t	typeref:struct:xfs_dir2_sf_entry
xfs_dir2_sf_entsize	xfs_dir2_format.h	/^xfs_dir2_sf_entsize(struct xfs_dir2_sf_hdr *hdr, int len)$/;"	f
xfs_dir2_sf_firstentry	xfs_dir2_format.h	/^xfs_dir2_sf_firstentry(struct xfs_dir2_sf_hdr *hdr)$/;"	f
xfs_dir2_sf_get_ino	xfs_dir2_sf.c	/^xfs_dir2_sf_get_ino($/;"	f	file:
xfs_dir2_sf_get_offset	xfs_dir2_format.h	/^xfs_dir2_sf_get_offset(xfs_dir2_sf_entry_t *sfep)$/;"	f
xfs_dir2_sf_get_parent_ino	xfs_dir2_sf.c	/^xfs_dir2_sf_get_parent_ino($/;"	f
xfs_dir2_sf_getdents	xfs_dir2_sf.c	/^xfs_dir2_sf_getdents($/;"	f
xfs_dir2_sf_hdr	xfs_dir2_format.h	/^typedef struct xfs_dir2_sf_hdr {$/;"	s
xfs_dir2_sf_hdr_size	xfs_dir2_format.h	/^static inline int xfs_dir2_sf_hdr_size(int i8count)$/;"	f
xfs_dir2_sf_hdr_t	xfs_dir2_format.h	/^} __arch_pack xfs_dir2_sf_hdr_t;$/;"	t	typeref:struct:xfs_dir2_sf_hdr
xfs_dir2_sf_lookup	xfs_dir2_sf.c	/^xfs_dir2_sf_lookup($/;"	f
xfs_dir2_sf_lookup	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_sf_lookup);$/;"	v
xfs_dir2_sf_nextentry	xfs_dir2_format.h	/^xfs_dir2_sf_nextentry(struct xfs_dir2_sf_hdr *hdr,$/;"	f
xfs_dir2_sf_off_t	xfs_dir2_format.h	/^typedef struct { __uint8_t i[2]; } __arch_pack xfs_dir2_sf_off_t;$/;"	t	typeref:struct:__anon16
xfs_dir2_sf_put_ino	xfs_dir2_sf.c	/^xfs_dir2_sf_put_ino($/;"	f	file:
xfs_dir2_sf_put_offset	xfs_dir2_format.h	/^xfs_dir2_sf_put_offset(xfs_dir2_sf_entry_t *sfep, xfs_dir2_data_aoff_t off)$/;"	f
xfs_dir2_sf_put_parent_ino	xfs_dir2_sf.c	/^xfs_dir2_sf_put_parent_ino($/;"	f	file:
xfs_dir2_sf_removename	xfs_dir2_sf.c	/^xfs_dir2_sf_removename($/;"	f
xfs_dir2_sf_removename	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_sf_removename);$/;"	v
xfs_dir2_sf_replace	xfs_dir2_sf.c	/^xfs_dir2_sf_replace($/;"	f
xfs_dir2_sf_replace	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_sf_replace);$/;"	v
xfs_dir2_sf_to_block	xfs_dir2_block.c	/^xfs_dir2_sf_to_block($/;"	f
xfs_dir2_sf_to_block	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_sf_to_block);$/;"	v
xfs_dir2_sf_toino4	xfs_dir2_sf.c	/^xfs_dir2_sf_toino4($/;"	f	file:
xfs_dir2_sf_toino4	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_sf_toino4);$/;"	v
xfs_dir2_sf_toino8	xfs_dir2_sf.c	/^xfs_dir2_sf_toino8($/;"	f	file:
xfs_dir2_sf_toino8	xfs_trace.h	/^DEFINE_DIR2_EVENT(xfs_dir2_sf_toino8);$/;"	v
xfs_dir2_sfe_get_ino	xfs_dir2_sf.c	/^xfs_dir2_sfe_get_ino($/;"	f
xfs_dir2_sfe_inop	xfs_dir2_sf.c	/^xfs_dir2_sfe_inop($/;"	f	file:
xfs_dir2_sfe_put_ino	xfs_dir2_sf.c	/^xfs_dir2_sfe_put_ino($/;"	f	file:
xfs_dir2_shrink_inode	xfs_dir2.c	/^xfs_dir2_shrink_inode($/;"	f
xfs_dir2_shrink_inode	xfs_trace.h	/^DEFINE_DIR2_SPACE_EVENT(xfs_dir2_shrink_inode);$/;"	v
xfs_dir_canenter	xfs_dir2.c	/^xfs_dir_canenter($/;"	f
xfs_dir_ci_inode_operations	xfs_iops.c	/^static const struct inode_operations xfs_dir_ci_inode_operations = {$/;"	v	typeref:struct:inode_operations	file:
xfs_dir_cilookup_result	xfs_dir2.c	/^xfs_dir_cilookup_result($/;"	f
xfs_dir_createname	xfs_dir2.c	/^xfs_dir_createname($/;"	f
xfs_dir_file_operations	xfs_file.c	/^const struct file_operations xfs_dir_file_operations = {$/;"	v	typeref:struct:file_operations
xfs_dir_fsync	xfs_file.c	/^xfs_dir_fsync($/;"	f
xfs_dir_fsync	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_dir_fsync);$/;"	v
xfs_dir_hash_dot	xfs_dir2_block.c	/^static xfs_dahash_t xfs_dir_hash_dot, xfs_dir_hash_dotdot;$/;"	v	file:
xfs_dir_hash_dotdot	xfs_dir2_block.c	/^static xfs_dahash_t xfs_dir_hash_dot, xfs_dir_hash_dotdot;$/;"	v	file:
xfs_dir_ialloc	xfs_utils.c	/^xfs_dir_ialloc($/;"	f
xfs_dir_init	xfs_dir2.c	/^xfs_dir_init($/;"	f
xfs_dir_ino_validate	xfs_dir2.c	/^xfs_dir_ino_validate($/;"	f
xfs_dir_inode_operations	xfs_iops.c	/^static const struct inode_operations xfs_dir_inode_operations = {$/;"	v	typeref:struct:inode_operations	file:
xfs_dir_isempty	xfs_dir2.c	/^xfs_dir_isempty($/;"	f
xfs_dir_lookup	xfs_dir2.c	/^xfs_dir_lookup($/;"	f
xfs_dir_mount	xfs_dir2.c	/^xfs_dir_mount($/;"	f
xfs_dir_open	xfs_file.c	/^xfs_dir_open($/;"	f
xfs_dir_removename	xfs_dir2.c	/^xfs_dir_removename($/;"	f
xfs_dir_replace	xfs_dir2.c	/^xfs_dir_replace($/;"	f
xfs_dir_startup	xfs_dir2_block.c	/^xfs_dir_startup(void)$/;"	f
xfs_dir_table	xfs_sysctl.c	/^static ctl_table xfs_dir_table[] = {$/;"	v	file:
xfs_discard_busy	xfs_trace.h	/^DEFINE_DISCARD_EVENT(xfs_discard_busy);$/;"	v
xfs_discard_exclude	xfs_trace.h	/^DEFINE_DISCARD_EVENT(xfs_discard_exclude);$/;"	v
xfs_discard_extent	xfs_trace.h	/^DEFINE_DISCARD_EVENT(xfs_discard_extent);$/;"	v
xfs_discard_extents	xfs_discard.c	/^xfs_discard_extents($/;"	f
xfs_discard_toosmall	xfs_trace.h	/^DEFINE_DISCARD_EVENT(xfs_discard_toosmall);$/;"	v
xfs_disk_dquot	xfs_quota.h	/^typedef struct	xfs_disk_dquot {$/;"	s
xfs_disk_dquot_t	xfs_quota.h	/^} xfs_disk_dquot_t;$/;"	t	typeref:struct:xfs_disk_dquot
xfs_do_div	xfs_linux.h	/^static inline __u32 xfs_do_div(void *a, __u32 b, int n)$/;"	f
xfs_do_dqerror	xfs_dquot.c	/^int xfs_do_dqerror;$/;"	v
xfs_do_error	xfs_trans_buf.c	/^int	xfs_do_error;$/;"	v
xfs_do_force_shutdown	xfs_rw.c	/^xfs_do_force_shutdown($/;"	f
xfs_do_mod	xfs_linux.h	/^static inline __u32 xfs_do_mod(void *a, __u32 b, int n)$/;"	f
xfs_dq_logformat	xfs_quota.h	/^typedef struct xfs_dq_logformat {$/;"	s
xfs_dq_logformat_t	xfs_quota.h	/^} xfs_dq_logformat_t;$/;"	t	typeref:struct:xfs_dq_logformat
xfs_dq_logitem	xfs_dquot_item.h	/^typedef struct xfs_dq_logitem {$/;"	s
xfs_dq_logitem_t	xfs_dquot_item.h	/^} xfs_dq_logitem_t;$/;"	t	typeref:struct:xfs_dq_logitem
xfs_dqadjust	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqadjust);$/;"	v
xfs_dqalloc	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqalloc);$/;"	v
xfs_dqattach_found	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqattach_found);$/;"	v
xfs_dqattach_get	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqattach_get);$/;"	v
xfs_dqblk	xfs_quota.h	/^typedef struct xfs_dqblk {$/;"	s
xfs_dqblk_t	xfs_quota.h	/^} xfs_dqblk_t;$/;"	t	typeref:struct:xfs_dqblk
xfs_dqerror_mod	xfs_dquot.c	/^int xfs_dqerror_mod = 33;$/;"	v
xfs_dqerror_target	xfs_dquot.c	/^xfs_buftarg_t *xfs_dqerror_target;$/;"	v
xfs_dqflock	xfs_dquot.h	/^static inline void xfs_dqflock(xfs_dquot_t *dqp)$/;"	f
xfs_dqflock_nowait	xfs_dquot.h	/^static inline int xfs_dqflock_nowait(xfs_dquot_t *dqp)$/;"	f
xfs_dqflock_pushbuf_wait	xfs_dquot.c	/^xfs_dqflock_pushbuf_wait($/;"	f
xfs_dqflush	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqflush);$/;"	v
xfs_dqflush_done	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqflush_done);$/;"	v
xfs_dqflush_force	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqflush_force);$/;"	v
xfs_dqfunlock	xfs_dquot.h	/^static inline void xfs_dqfunlock(xfs_dquot_t *dqp)$/;"	f
xfs_dqget_hit	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqget_hit);$/;"	v
xfs_dqget_miss	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqget_miss);$/;"	v
xfs_dqhash	xfs_dquot.h	/^typedef struct xfs_dqhash {$/;"	s
xfs_dqhash_t	xfs_dquot.h	/^} xfs_dqhash_t;$/;"	t	typeref:struct:xfs_dqhash
xfs_dqid_t	xfs_quota.h	/^typedef __uint32_t	xfs_dqid_t;$/;"	t
xfs_dqlist_t	xfs_qm.h	/^typedef xfs_dqhash_t	xfs_dqlist_t;$/;"	t
xfs_dqlock	xfs_dquot.h	/^static inline void xfs_dqlock(struct xfs_dquot *dqp)$/;"	f
xfs_dqlock2	xfs_dquot.c	/^xfs_dqlock2($/;"	f
xfs_dqlock_nowait	xfs_dquot.h	/^static inline int xfs_dqlock_nowait(struct xfs_dquot *dqp)$/;"	f
xfs_dqlookup_done	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqlookup_done);$/;"	v
xfs_dqlookup_found	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqlookup_found);$/;"	v
xfs_dqput	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqput);$/;"	v
xfs_dqput_free	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqput_free);$/;"	v
xfs_dqput_wait	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqput_wait);$/;"	v
xfs_dqread	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqread);$/;"	v
xfs_dqread_fail	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqread_fail);$/;"	v
xfs_dqreclaim_busy	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqreclaim_busy);$/;"	v
xfs_dqreclaim_dirty	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqreclaim_dirty);$/;"	v
xfs_dqreclaim_done	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqreclaim_done);$/;"	v
xfs_dqreclaim_want	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqreclaim_want);$/;"	v
xfs_dqrele	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqrele);$/;"	v
xfs_dqrele_inode	xfs_qm_syscalls.c	/^xfs_dqrele_inode($/;"	f
xfs_dqreq_num	xfs_dquot.c	/^int xfs_dqreq_num;$/;"	v
xfs_dqtobp_read	xfs_trace.h	/^DEFINE_DQUOT_EVENT(xfs_dqtobp_read);$/;"	v
xfs_dqtrx	xfs_quota.h	/^typedef struct xfs_dqtrx {$/;"	s
xfs_dqtrx_t	xfs_quota.h	/^} xfs_dqtrx_t;$/;"	t	typeref:struct:xfs_dqtrx
xfs_dqunlock	xfs_dquot.h	/^static inline void xfs_dqunlock(struct xfs_dquot *dqp)$/;"	f
xfs_dquot	xfs_dquot.h	/^typedef struct xfs_dquot {$/;"	s
xfs_dquot_acct	xfs_qm.h	/^typedef struct xfs_dquot_acct {$/;"	s
xfs_dquot_acct_t	xfs_qm.h	/^} xfs_dquot_acct_t;$/;"	t	typeref:struct:xfs_dquot_acct
xfs_dquot_dqalloc	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_dquot_dqalloc);$/;"	v
xfs_dquot_dqdetach	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_dquot_dqdetach);$/;"	v
xfs_dquot_item_ops	xfs_dquot_item.c	/^static const struct xfs_item_ops xfs_dquot_item_ops = {$/;"	v	typeref:struct:xfs_item_ops	file:
xfs_dquot_other_class	xfs_dquot.c	/^static struct lock_class_key xfs_dquot_other_class;$/;"	v	typeref:struct:lock_class_key	file:
xfs_dquot_t	xfs_dquot.h	/^} xfs_dquot_t;$/;"	t	typeref:struct:xfs_dquot
xfs_drfsbno_t	xfs_types.h	/^typedef __uint64_t	xfs_drfsbno_t;	\/* blockno in filesystem (raw) *\/$/;"	t
xfs_droplink	xfs_utils.c	/^xfs_droplink($/;"	f
xfs_drtbno_t	xfs_types.h	/^typedef	__uint64_t	xfs_drtbno_t;	\/* extent (block) in realtime area *\/$/;"	t
xfs_dsb	xfs_sb.h	/^typedef struct xfs_dsb {$/;"	s
xfs_dsb_t	xfs_sb.h	/^} xfs_dsb_t;$/;"	t	typeref:struct:xfs_dsb
xfs_efd_init	xfs_extfree_item.c	/^xfs_efd_init($/;"	f
xfs_efd_item_committed	xfs_extfree_item.c	/^xfs_efd_item_committed($/;"	f
xfs_efd_item_committing	xfs_extfree_item.c	/^xfs_efd_item_committing($/;"	f
xfs_efd_item_format	xfs_extfree_item.c	/^xfs_efd_item_format($/;"	f
xfs_efd_item_free	xfs_extfree_item.c	/^xfs_efd_item_free(struct xfs_efd_log_item *efdp)$/;"	f
xfs_efd_item_ops	xfs_extfree_item.c	/^static const struct xfs_item_ops xfs_efd_item_ops = {$/;"	v	typeref:struct:xfs_item_ops	file:
xfs_efd_item_pin	xfs_extfree_item.c	/^xfs_efd_item_pin($/;"	f
xfs_efd_item_push	xfs_extfree_item.c	/^xfs_efd_item_push($/;"	f
xfs_efd_item_size	xfs_extfree_item.c	/^xfs_efd_item_size($/;"	f
xfs_efd_item_trylock	xfs_extfree_item.c	/^xfs_efd_item_trylock($/;"	f
xfs_efd_item_unlock	xfs_extfree_item.c	/^xfs_efd_item_unlock($/;"	f
xfs_efd_item_unpin	xfs_extfree_item.c	/^xfs_efd_item_unpin($/;"	f
xfs_efd_log_format	xfs_extfree_item.h	/^typedef struct xfs_efd_log_format {$/;"	s
xfs_efd_log_format_32	xfs_extfree_item.h	/^typedef struct xfs_efd_log_format_32 {$/;"	s
xfs_efd_log_format_32_t	xfs_extfree_item.h	/^} __attribute__((packed)) xfs_efd_log_format_32_t;$/;"	t	typeref:struct:xfs_efd_log_format_32
xfs_efd_log_format_64	xfs_extfree_item.h	/^typedef struct xfs_efd_log_format_64 {$/;"	s
xfs_efd_log_format_64_t	xfs_extfree_item.h	/^} xfs_efd_log_format_64_t;$/;"	t	typeref:struct:xfs_efd_log_format_64
xfs_efd_log_format_t	xfs_extfree_item.h	/^} xfs_efd_log_format_t;$/;"	t	typeref:struct:xfs_efd_log_format
xfs_efd_log_item	xfs_extfree_item.h	/^typedef struct xfs_efd_log_item {$/;"	s
xfs_efd_log_item_t	xfs_extfree_item.h	/^} xfs_efd_log_item_t;$/;"	t	typeref:struct:xfs_efd_log_item
xfs_efd_zone	xfs_extfree_item.c	/^kmem_zone_t	*xfs_efd_zone;$/;"	v
xfs_efi_copy_format	xfs_extfree_item.c	/^xfs_efi_copy_format(xfs_log_iovec_t *buf, xfs_efi_log_format_t *dst_efi_fmt)$/;"	f
xfs_efi_init	xfs_extfree_item.c	/^xfs_efi_init($/;"	f
xfs_efi_item_committed	xfs_extfree_item.c	/^xfs_efi_item_committed($/;"	f
xfs_efi_item_committing	xfs_extfree_item.c	/^xfs_efi_item_committing($/;"	f
xfs_efi_item_format	xfs_extfree_item.c	/^xfs_efi_item_format($/;"	f
xfs_efi_item_free	xfs_extfree_item.c	/^xfs_efi_item_free($/;"	f
xfs_efi_item_ops	xfs_extfree_item.c	/^static const struct xfs_item_ops xfs_efi_item_ops = {$/;"	v	typeref:struct:xfs_item_ops	file:
xfs_efi_item_pin	xfs_extfree_item.c	/^xfs_efi_item_pin($/;"	f
xfs_efi_item_push	xfs_extfree_item.c	/^xfs_efi_item_push($/;"	f
xfs_efi_item_size	xfs_extfree_item.c	/^xfs_efi_item_size($/;"	f
xfs_efi_item_trylock	xfs_extfree_item.c	/^xfs_efi_item_trylock($/;"	f
xfs_efi_item_unlock	xfs_extfree_item.c	/^xfs_efi_item_unlock($/;"	f
xfs_efi_item_unpin	xfs_extfree_item.c	/^xfs_efi_item_unpin($/;"	f
xfs_efi_log_format	xfs_extfree_item.h	/^typedef struct xfs_efi_log_format {$/;"	s
xfs_efi_log_format_32	xfs_extfree_item.h	/^typedef struct xfs_efi_log_format_32 {$/;"	s
xfs_efi_log_format_32_t	xfs_extfree_item.h	/^} __attribute__((packed)) xfs_efi_log_format_32_t;$/;"	t	typeref:struct:xfs_efi_log_format_32
xfs_efi_log_format_64	xfs_extfree_item.h	/^typedef struct xfs_efi_log_format_64 {$/;"	s
xfs_efi_log_format_64_t	xfs_extfree_item.h	/^} xfs_efi_log_format_64_t;$/;"	t	typeref:struct:xfs_efi_log_format_64
xfs_efi_log_format_t	xfs_extfree_item.h	/^} xfs_efi_log_format_t;$/;"	t	typeref:struct:xfs_efi_log_format
xfs_efi_log_item	xfs_extfree_item.h	/^typedef struct xfs_efi_log_item {$/;"	s
xfs_efi_log_item_t	xfs_extfree_item.h	/^} xfs_efi_log_item_t;$/;"	t	typeref:struct:xfs_efi_log_item
xfs_efi_release	xfs_extfree_item.c	/^xfs_efi_release(xfs_efi_log_item_t	*efip,$/;"	f
xfs_efi_zone	xfs_extfree_item.c	/^kmem_zone_t	*xfs_efi_zone;$/;"	v
xfs_end_bio	xfs_aops.c	/^xfs_end_bio($/;"	f
xfs_end_io	xfs_aops.c	/^xfs_end_io($/;"	f
xfs_end_io_direct_write	xfs_aops.c	/^xfs_end_io_direct_write($/;"	f
xfs_error_injection	xfs_fs.h	/^typedef struct xfs_error_injection {$/;"	s
xfs_error_injection_t	xfs_fs.h	/^} xfs_error_injection_t;$/;"	t	typeref:struct:xfs_error_injection
xfs_error_level	xfs_linux.h	109;"	d
xfs_error_mod	xfs_trans_buf.c	/^int	xfs_error_mod = 33;$/;"	v
xfs_error_report	xfs_error.c	/^xfs_error_report($/;"	f
xfs_error_target	xfs_trans_buf.c	/^xfs_buftarg_t *xfs_error_target;$/;"	v
xfs_error_test	xfs_error.c	/^xfs_error_test(int error_tag, int *fsidp, char *expression,$/;"	f
xfs_error_test_active	xfs_error.c	/^int	xfs_error_test_active;$/;"	v
xfs_error_trap	xfs_error.c	/^xfs_error_trap(int e)$/;"	f
xfs_errortag_add	xfs_error.c	/^xfs_errortag_add(int error_tag, xfs_mount_t *mp)$/;"	f
xfs_errortag_add	xfs_error.h	143;"	d
xfs_errortag_clearall	xfs_error.c	/^xfs_errortag_clearall(xfs_mount_t *mp, int loud)$/;"	f
xfs_errortag_clearall	xfs_error.h	144;"	d
xfs_etest	xfs_error.c	/^int	xfs_etest[XFS_NUM_INJECT_ERROR];$/;"	v
xfs_etest_fsid	xfs_error.c	/^int64_t	xfs_etest_fsid[XFS_NUM_INJECT_ERROR];$/;"	v
xfs_etest_fsname	xfs_error.c	/^char *	xfs_etest_fsname[XFS_NUM_INJECT_ERROR];$/;"	v
xfs_etrap	xfs_error.c	/^int	xfs_etrap[XFS_ERROR_NTRAP] = {$/;"	v
xfs_evict_inode	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_evict_inode);$/;"	v
xfs_exntfmt_t	xfs_bmap_btree.h	/^} xfs_exntfmt_t;$/;"	t	typeref:enum:__anon5
xfs_exntst_t	xfs_bmap_btree.h	/^} xfs_exntst_t;$/;"	t	typeref:enum:__anon6
xfs_export_operations	xfs_export.c	/^const struct export_operations xfs_export_operations = {$/;"	v	typeref:struct:export_operations
xfs_ext_irec	xfs_inode.h	/^typedef struct xfs_ext_irec {$/;"	s
xfs_ext_irec_t	xfs_inode.h	/^} xfs_ext_irec_t;$/;"	t	typeref:struct:xfs_ext_irec
xfs_extent	xfs_extfree_item.h	/^typedef struct xfs_extent {$/;"	s
xfs_extent_32	xfs_extfree_item.h	/^typedef struct xfs_extent_32 {$/;"	s
xfs_extent_32_t	xfs_extfree_item.h	/^} __attribute__((packed)) xfs_extent_32_t;$/;"	t	typeref:struct:xfs_extent_32
xfs_extent_64	xfs_extfree_item.h	/^typedef struct xfs_extent_64 {$/;"	s
xfs_extent_64_t	xfs_extfree_item.h	/^} xfs_extent_64_t;$/;"	t	typeref:struct:xfs_extent_64
xfs_extent_state	xfs_bmap_btree.c	/^xfs_extent_state($/;"	f
xfs_extent_t	xfs_extfree_item.h	/^} xfs_extent_t;$/;"	t	typeref:struct:xfs_extent
xfs_extlen_t	xfs_types.h	/^typedef	__uint32_t	xfs_extlen_t;	\/* extent length in blocks *\/$/;"	t
xfs_extlist	xfs_trace.h	/^DEFINE_BMAP_EVENT(xfs_extlist);$/;"	v
xfs_extnum_t	xfs_types.h	/^typedef __int32_t	xfs_extnum_t;	\/* # of extents in a file *\/$/;"	t
xfs_fid	xfs_fs.h	/^typedef struct xfs_fid {$/;"	s
xfs_fid64	xfs_export.h	/^struct xfs_fid64 {$/;"	s
xfs_fid_t	xfs_fs.h	/^} xfs_fid_t;$/;"	t	typeref:struct:xfs_fid
xfs_fiemap_format	xfs_iops.c	/^xfs_fiemap_format($/;"	f
xfs_filblks_t	xfs_types.h	/^typedef __uint64_t	xfs_filblks_t;	\/* number of blocks in a file *\/$/;"	t
xfs_file_aio_read	xfs_file.c	/^xfs_file_aio_read($/;"	f
xfs_file_aio_write	xfs_file.c	/^xfs_file_aio_write($/;"	f
xfs_file_aio_write_checks	xfs_file.c	/^xfs_file_aio_write_checks($/;"	f
xfs_file_buffered_aio_write	xfs_file.c	/^xfs_file_buffered_aio_write($/;"	f
xfs_file_buffered_write	xfs_trace.h	/^DEFINE_RW_EVENT(xfs_file_buffered_write);$/;"	v
xfs_file_compat_ioctl	xfs_ioctl32.c	/^xfs_file_compat_ioctl($/;"	f
xfs_file_compat_ioctl	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_file_compat_ioctl);$/;"	v
xfs_file_dio_aio_write	xfs_file.c	/^xfs_file_dio_aio_write($/;"	f
xfs_file_direct_write	xfs_trace.h	/^DEFINE_RW_EVENT(xfs_file_direct_write);$/;"	v
xfs_file_fallocate	xfs_file.c	/^xfs_file_fallocate($/;"	f
xfs_file_fsync	xfs_file.c	/^xfs_file_fsync($/;"	f
xfs_file_fsync	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_file_fsync);$/;"	v
xfs_file_ioctl	xfs_ioctl.c	/^xfs_file_ioctl($/;"	f
xfs_file_ioctl	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_file_ioctl);$/;"	v
xfs_file_mmap	xfs_file.c	/^xfs_file_mmap($/;"	f
xfs_file_open	xfs_file.c	/^xfs_file_open($/;"	f
xfs_file_operations	xfs_file.c	/^const struct file_operations xfs_file_operations = {$/;"	v	typeref:struct:file_operations
xfs_file_read	xfs_trace.h	/^DEFINE_RW_EVENT(xfs_file_read);$/;"	v
xfs_file_readdir	xfs_file.c	/^xfs_file_readdir($/;"	f
xfs_file_release	xfs_file.c	/^xfs_file_release($/;"	f
xfs_file_splice_read	xfs_file.c	/^xfs_file_splice_read($/;"	f
xfs_file_splice_read	xfs_trace.h	/^DEFINE_RW_EVENT(xfs_file_splice_read);$/;"	v
xfs_file_splice_write	xfs_file.c	/^xfs_file_splice_write($/;"	f
xfs_file_splice_write	xfs_trace.h	/^DEFINE_RW_EVENT(xfs_file_splice_write);$/;"	v
xfs_file_vm_ops	xfs_file.c	/^static const struct vm_operations_struct xfs_file_vm_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
xfs_file_vm_ops	xfs_file.c	/^static const struct vm_operations_struct xfs_file_vm_ops;$/;"	v	typeref:struct:vm_operations_struct	file:
xfs_fileid_length	xfs_export.c	/^static int xfs_fileid_length(int fileid_type)$/;"	f	file:
xfs_fileoff_t	xfs_types.h	/^typedef __uint64_t	xfs_fileoff_t;	\/* block number in a file *\/$/;"	t
xfs_filestream_associate	xfs_filestream.c	/^xfs_filestream_associate($/;"	f
xfs_filestream_deassociate	xfs_filestream.c	/^xfs_filestream_deassociate($/;"	f
xfs_filestream_get_ag	xfs_filestream.c	/^xfs_filestream_get_ag($/;"	f	file:
xfs_filestream_init	xfs_filestream.c	/^xfs_filestream_init(void)$/;"	f
xfs_filestream_lookup_ag	xfs_filestream.c	/^xfs_filestream_lookup_ag($/;"	f
xfs_filestream_mount	xfs_filestream.c	/^xfs_filestream_mount($/;"	f
xfs_filestream_new_ag	xfs_filestream.c	/^xfs_filestream_new_ag($/;"	f
xfs_filestream_peek_ag	xfs_filestream.c	/^xfs_filestream_peek_ag($/;"	f	file:
xfs_filestream_put_ag	xfs_filestream.c	/^xfs_filestream_put_ag($/;"	f	file:
xfs_filestream_uninit	xfs_filestream.c	/^xfs_filestream_uninit(void)$/;"	f
xfs_filestream_unmount	xfs_filestream.c	/^xfs_filestream_unmount($/;"	f
xfs_filestreams_trace	xfs_filestream.c	/^xfs_filestreams_trace($/;"	f
xfs_filestreams_trace_buf	xfs_filestream.c	/^ktrace_t *xfs_filestreams_trace_buf;$/;"	v
xfs_fill_statvfs_from_dquot	xfs_qm_bhv.c	/^xfs_fill_statvfs_from_dquot($/;"	f
xfs_find_bdev_for_inode	xfs_aops.c	/^xfs_find_bdev_for_inode($/;"	f
xfs_find_handle	xfs_ioctl.c	/^xfs_find_handle($/;"	f
xfs_finish_flags	xfs_super.c	/^xfs_finish_flags($/;"	f
xfs_finish_ioend	xfs_aops.c	/^xfs_finish_ioend($/;"	f
xfs_finish_ioend_sync	xfs_aops.c	/^xfs_finish_ioend_sync($/;"	f
xfs_flock64	xfs_fs.h	/^typedef struct xfs_flock64 {$/;"	s
xfs_flock64_t	xfs_fs.h	/^} xfs_flock64_t;$/;"	t	typeref:struct:xfs_flock64
xfs_flush_buftarg	xfs_buf.c	/^xfs_flush_buftarg($/;"	f
xfs_flush_inodes	xfs_sync.c	/^xfs_flush_inodes($/;"	f
xfs_flush_pages	xfs_fs_subr.c	/^xfs_flush_pages($/;"	f
xfs_flush_worker	xfs_sync.c	/^xfs_flush_worker($/;"	f
xfs_flushinval_pages	xfs_fs_subr.c	/^xfs_flushinval_pages($/;"	f
xfs_force_shutdown	xfs_mount.h	303;"	d
xfs_free_ag_extent	xfs_alloc.c	/^xfs_free_ag_extent($/;"	f
xfs_free_buftarg	xfs_buf.c	/^xfs_free_buftarg($/;"	f
xfs_free_eofblocks	xfs_vnodeops.c	/^xfs_free_eofblocks($/;"	f
xfs_free_extent	xfs_alloc.c	/^xfs_free_extent($/;"	f
xfs_free_file_space	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_free_file_space);$/;"	v
xfs_free_file_space	xfs_vnodeops.c	/^xfs_free_file_space($/;"	f
xfs_free_fsname	xfs_super.c	/^xfs_free_fsname($/;"	f
xfs_free_perag	xfs_mount.c	/^xfs_free_perag($/;"	f
xfs_freesb	xfs_mount.c	/^xfs_freesb($/;"	f
xfs_fs_alloc_inode	xfs_super.c	/^xfs_fs_alloc_inode($/;"	f
xfs_fs_counts	xfs_fsops.c	/^xfs_fs_counts($/;"	f
xfs_fs_destroy_inode	xfs_super.c	/^xfs_fs_destroy_inode($/;"	f
xfs_fs_dirty_inode	xfs_super.c	/^xfs_fs_dirty_inode($/;"	f
xfs_fs_encode_fh	xfs_export.c	/^xfs_fs_encode_fh($/;"	f
xfs_fs_evict_inode	xfs_super.c	/^xfs_fs_evict_inode($/;"	f
xfs_fs_fh_to_dentry	xfs_export.c	/^xfs_fs_fh_to_dentry(struct super_block *sb, struct fid *fid,$/;"	f
xfs_fs_fh_to_parent	xfs_export.c	/^xfs_fs_fh_to_parent(struct super_block *sb, struct fid *fid,$/;"	f
xfs_fs_fill_super	xfs_super.c	/^xfs_fs_fill_super($/;"	f
xfs_fs_free_cached_objects	xfs_super.c	/^xfs_fs_free_cached_objects($/;"	f	file:
xfs_fs_freeze	xfs_super.c	/^xfs_fs_freeze($/;"	f
xfs_fs_geometry	xfs_fsops.c	/^xfs_fs_geometry($/;"	f
xfs_fs_get_dqblk	xfs_quotaops.c	/^xfs_fs_get_dqblk($/;"	f
xfs_fs_get_parent	xfs_export.c	/^xfs_fs_get_parent($/;"	f
xfs_fs_get_xstate	xfs_quotaops.c	/^xfs_fs_get_xstate($/;"	f
xfs_fs_goingdown	xfs_fsops.c	/^xfs_fs_goingdown($/;"	f
xfs_fs_inode_init_once	xfs_super.c	/^xfs_fs_inode_init_once($/;"	f
xfs_fs_log_dummy	xfs_fsops.c	/^xfs_fs_log_dummy($/;"	f
xfs_fs_mount	xfs_super.c	/^xfs_fs_mount($/;"	f
xfs_fs_nfs_commit_metadata	xfs_export.c	/^xfs_fs_nfs_commit_metadata($/;"	f
xfs_fs_nr_cached_objects	xfs_super.c	/^xfs_fs_nr_cached_objects($/;"	f	file:
xfs_fs_put_super	xfs_super.c	/^xfs_fs_put_super($/;"	f
xfs_fs_remount	xfs_super.c	/^xfs_fs_remount($/;"	f
xfs_fs_set_dqblk	xfs_quotaops.c	/^xfs_fs_set_dqblk($/;"	f
xfs_fs_set_xstate	xfs_quotaops.c	/^xfs_fs_set_xstate($/;"	f
xfs_fs_show_options	xfs_super.c	/^xfs_fs_show_options($/;"	f
xfs_fs_statfs	xfs_super.c	/^xfs_fs_statfs($/;"	f
xfs_fs_sync_fs	xfs_super.c	/^xfs_fs_sync_fs($/;"	f
xfs_fs_type	xfs_super.c	/^static struct file_system_type xfs_fs_type = {$/;"	v	typeref:struct:file_system_type	file:
xfs_fs_unfreeze	xfs_super.c	/^xfs_fs_unfreeze($/;"	f
xfs_fs_writable	xfs_mount.c	/^xfs_fs_writable(xfs_mount_t *mp)$/;"	f
xfs_fs_write_inode	xfs_super.c	/^xfs_fs_write_inode($/;"	f
xfs_fsb_to_db	xfs_rw.h	/^xfs_fsb_to_db(struct xfs_inode *ip, xfs_fsblock_t fsb)$/;"	f
xfs_fsblock_t	xfs_types.h	/^typedef	__uint32_t	xfs_fsblock_t;	\/* blockno in filesystem (agno|agbno) *\/$/;"	t
xfs_fsblock_t	xfs_types.h	/^typedef	__uint64_t	xfs_fsblock_t;	\/* blockno in filesystem (agno|agbno) *\/$/;"	t
xfs_fsid_t	xfs_fs.h	/^typedef struct { __u32 val[2]; } xfs_fsid_t; \/* file system id type *\/$/;"	t	typeref:struct:__anon21
xfs_fsize_t	xfs_types.h	/^typedef	__int64_t	xfs_fsize_t;	\/* bytes in a file *\/$/;"	t
xfs_fsop_attrlist_handlereq	xfs_fs.h	/^typedef struct xfs_fsop_attrlist_handlereq {$/;"	s
xfs_fsop_attrlist_handlereq_t	xfs_fs.h	/^} xfs_fsop_attrlist_handlereq_t;$/;"	t	typeref:struct:xfs_fsop_attrlist_handlereq
xfs_fsop_attrmulti_handlereq	xfs_fs.h	/^typedef struct xfs_fsop_attrmulti_handlereq {$/;"	s
xfs_fsop_attrmulti_handlereq_t	xfs_fs.h	/^} xfs_fsop_attrmulti_handlereq_t;$/;"	t	typeref:struct:xfs_fsop_attrmulti_handlereq
xfs_fsop_bulkreq	xfs_fs.h	/^typedef struct xfs_fsop_bulkreq {$/;"	s
xfs_fsop_bulkreq_t	xfs_fs.h	/^} xfs_fsop_bulkreq_t;$/;"	t	typeref:struct:xfs_fsop_bulkreq
xfs_fsop_counts	xfs_fs.h	/^typedef struct xfs_fsop_counts {$/;"	s
xfs_fsop_counts_t	xfs_fs.h	/^} xfs_fsop_counts_t;$/;"	t	typeref:struct:xfs_fsop_counts
xfs_fsop_geom	xfs_fs.h	/^typedef struct xfs_fsop_geom {$/;"	s
xfs_fsop_geom_t	xfs_fs.h	/^} xfs_fsop_geom_t;$/;"	t	typeref:struct:xfs_fsop_geom
xfs_fsop_geom_v1	xfs_fs.h	/^typedef struct xfs_fsop_geom_v1 {$/;"	s
xfs_fsop_geom_v1_t	xfs_fs.h	/^} xfs_fsop_geom_v1_t;$/;"	t	typeref:struct:xfs_fsop_geom_v1
xfs_fsop_handlereq	xfs_fs.h	/^typedef struct xfs_fsop_handlereq {$/;"	s
xfs_fsop_handlereq_t	xfs_fs.h	/^} xfs_fsop_handlereq_t;$/;"	t	typeref:struct:xfs_fsop_handlereq
xfs_fsop_resblks	xfs_fs.h	/^typedef struct xfs_fsop_resblks {$/;"	s
xfs_fsop_resblks_t	xfs_fs.h	/^} xfs_fsop_resblks_t;$/;"	t	typeref:struct:xfs_fsop_resblks
xfs_fsop_setdm_handlereq	xfs_fs.h	/^typedef struct xfs_fsop_setdm_handlereq {$/;"	s
xfs_fsop_setdm_handlereq_t	xfs_fs.h	/^} xfs_fsop_setdm_handlereq_t;$/;"	t	typeref:struct:xfs_fsop_setdm_handlereq
xfs_fssetdm_by_handle	xfs_ioctl.c	/^xfs_fssetdm_by_handle($/;"	f
xfs_fstrm_alloc	xfs_filestream.h	/^typedef enum xfs_fstrm_alloc {$/;"	g
xfs_fstrm_alloc_t	xfs_filestream.h	/^} xfs_fstrm_alloc_t;$/;"	t	typeref:enum:xfs_fstrm_alloc
xfs_fstrm_centisecs	xfs_linux.h	120;"	d
xfs_fstrm_free_func	xfs_filestream.c	/^xfs_fstrm_free_func($/;"	f
xfs_get_acl	xfs_acl.c	/^xfs_get_acl(struct inode *inode, int type)$/;"	f
xfs_get_acl	xfs_acl.h	/^static inline struct posix_acl *xfs_get_acl(struct inode *inode, int type)$/;"	f
xfs_get_acl	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_get_acl);$/;"	v
xfs_get_blocks	xfs_aops.c	/^xfs_get_blocks($/;"	f
xfs_get_blocks_alloc	xfs_trace.h	/^DEFINE_IOMAP_EVENT(xfs_get_blocks_alloc);$/;"	v
xfs_get_blocks_direct	xfs_aops.c	/^xfs_get_blocks_direct($/;"	f
xfs_get_blocks_found	xfs_trace.h	/^DEFINE_IOMAP_EVENT(xfs_get_blocks_found);$/;"	v
xfs_get_blocks_notfound	xfs_trace.h	/^DEFINE_SIMPLE_IO_EVENT(xfs_get_blocks_notfound);$/;"	v
xfs_get_extsz_hint	xfs_rw.c	/^xfs_get_extsz_hint($/;"	f
xfs_get_projid	xfs_inode.h	/^xfs_get_projid(struct xfs_inode *ip)$/;"	f
xfs_getattr	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_getattr);$/;"	v
xfs_getbmap	xfs_bmap.c	/^xfs_getbmap($/;"	f
xfs_getbmap_format	xfs_ioctl.c	/^xfs_getbmap_format(void **ap, struct getbmapx *bmv, int *full)$/;"	f
xfs_getbmapx_fix_eof_hole	xfs_bmap.c	/^xfs_getbmapx_fix_eof_hole($/;"	f
xfs_getbmapx_format	xfs_ioctl.c	/^xfs_getbmapx_format(void **ap, struct getbmapx *bmv, int *full)$/;"	f
xfs_getsb	xfs_mount.c	/^xfs_getsb($/;"	f
xfs_getsize_buftarg	xfs_buf.h	293;"	d
xfs_growfs_data	xfs_fs.h	/^typedef struct xfs_growfs_data {$/;"	s
xfs_growfs_data	xfs_fsops.c	/^xfs_growfs_data($/;"	f
xfs_growfs_data_private	xfs_fsops.c	/^xfs_growfs_data_private($/;"	f	file:
xfs_growfs_data_t	xfs_fs.h	/^} xfs_growfs_data_t;$/;"	t	typeref:struct:xfs_growfs_data
xfs_growfs_log	xfs_fs.h	/^typedef struct xfs_growfs_log {$/;"	s
xfs_growfs_log	xfs_fsops.c	/^xfs_growfs_log($/;"	f
xfs_growfs_log_private	xfs_fsops.c	/^xfs_growfs_log_private($/;"	f	file:
xfs_growfs_log_t	xfs_fs.h	/^} xfs_growfs_log_t;$/;"	t	typeref:struct:xfs_growfs_log
xfs_growfs_rt	xfs_fs.h	/^typedef struct xfs_growfs_rt {$/;"	s
xfs_growfs_rt	xfs_rtalloc.c	/^xfs_growfs_rt($/;"	f
xfs_growfs_rt	xfs_rtalloc.h	149;"	d
xfs_growfs_rt_alloc	xfs_rtalloc.c	/^xfs_growfs_rt_alloc($/;"	f
xfs_growfs_rt_t	xfs_fs.h	/^} xfs_growfs_rt_t;$/;"	t	typeref:struct:xfs_growfs_rt
xfs_handle	xfs_fs.h	/^typedef struct xfs_handle {$/;"	s
xfs_handle_acceptable	xfs_ioctl.c	/^xfs_handle_acceptable($/;"	f
xfs_handle_t	xfs_fs.h	/^} xfs_handle_t;$/;"	t	typeref:struct:xfs_handle
xfs_handle_to_dentry	xfs_ioctl.c	/^xfs_handle_to_dentry($/;"	f
xfs_handlereq_to_dentry	xfs_ioctl.c	/^xfs_handlereq_to_dentry($/;"	f
xfs_hex_dump	xfs_message.c	/^xfs_hex_dump(void *p, int length)$/;"	f
xfs_highbit32	xfs_bit.h	/^static inline int xfs_highbit32(__uint32_t v)$/;"	f
xfs_highbit64	xfs_bit.h	/^static inline int xfs_highbit64(__uint64_t v)$/;"	f
xfs_ialloc	xfs_inode.c	/^xfs_ialloc($/;"	f
xfs_ialloc_ag_alloc	xfs_ialloc.c	/^xfs_ialloc_ag_alloc($/;"	f
xfs_ialloc_ag_select	xfs_ialloc.c	/^xfs_ialloc_ag_select($/;"	f
xfs_ialloc_cluster_alignment	xfs_ialloc.c	/^xfs_ialloc_cluster_alignment($/;"	f	file:
xfs_ialloc_compute_maxlevels	xfs_ialloc.c	/^xfs_ialloc_compute_maxlevels($/;"	f
xfs_ialloc_find_free	xfs_ialloc.h	/^static inline int xfs_ialloc_find_free(xfs_inofree_t *fp)$/;"	f
xfs_ialloc_get_rec	xfs_ialloc.c	/^xfs_ialloc_get_rec($/;"	f
xfs_ialloc_inode_init	xfs_ialloc.c	/^xfs_ialloc_inode_init($/;"	f
xfs_ialloc_log_agi	xfs_ialloc.c	/^xfs_ialloc_log_agi($/;"	f
xfs_ialloc_next_ag	xfs_ialloc.c	/^xfs_ialloc_next_ag($/;"	f
xfs_ialloc_next_rec	xfs_ialloc.c	/^xfs_ialloc_next_rec($/;"	f
xfs_ialloc_pagi_init	xfs_ialloc.c	/^xfs_ialloc_pagi_init($/;"	f
xfs_ialloc_read_agi	xfs_ialloc.c	/^xfs_ialloc_read_agi($/;"	f
xfs_icdinode	xfs_inode.h	/^typedef struct xfs_icdinode {$/;"	s
xfs_icdinode_t	xfs_inode.h	/^} xfs_icdinode_t;$/;"	t	typeref:struct:xfs_icdinode
xfs_icsb_balance_counter	xfs_mount.c	/^xfs_icsb_balance_counter($/;"	f
xfs_icsb_balance_counter	xfs_mount.c	55;"	d	file:
xfs_icsb_balance_counter_locked	xfs_mount.c	/^xfs_icsb_balance_counter_locked($/;"	f
xfs_icsb_balance_counter_locked	xfs_mount.c	56;"	d	file:
xfs_icsb_cnts	xfs_mount.h	/^typedef struct xfs_icsb_cnts {$/;"	s
xfs_icsb_cnts_t	xfs_mount.h	/^} xfs_icsb_cnts_t;$/;"	t	typeref:struct:xfs_icsb_cnts
xfs_icsb_count	xfs_mount.c	/^xfs_icsb_count($/;"	f
xfs_icsb_counter_disabled	xfs_mount.c	/^xfs_icsb_counter_disabled($/;"	f
xfs_icsb_cpu_notify	xfs_mount.c	/^xfs_icsb_cpu_notify($/;"	f
xfs_icsb_destroy_counters	xfs_mount.c	/^xfs_icsb_destroy_counters($/;"	f
xfs_icsb_destroy_counters	xfs_mount.h	98;"	d
xfs_icsb_disable_counter	xfs_mount.c	/^xfs_icsb_disable_counter($/;"	f
xfs_icsb_enable_counter	xfs_mount.c	/^xfs_icsb_enable_counter($/;"	f
xfs_icsb_init_counters	xfs_mount.c	/^xfs_icsb_init_counters($/;"	f
xfs_icsb_init_counters	xfs_mount.h	97;"	d
xfs_icsb_lock	xfs_mount.h	/^xfs_icsb_lock(xfs_mount_t *mp)$/;"	f
xfs_icsb_lock	xfs_mount.h	360;"	d
xfs_icsb_lock_all_counters	xfs_mount.c	/^xfs_icsb_lock_all_counters($/;"	f
xfs_icsb_lock_cntr	xfs_mount.c	/^xfs_icsb_lock_cntr($/;"	f
xfs_icsb_modify_counters	xfs_mount.c	/^xfs_icsb_modify_counters($/;"	f
xfs_icsb_modify_counters	xfs_mount.h	102;"	d
xfs_icsb_reinit_counters	xfs_mount.c	/^xfs_icsb_reinit_counters($/;"	f
xfs_icsb_reinit_counters	xfs_mount.h	99;"	d
xfs_icsb_sync_counters	xfs_mount.c	/^xfs_icsb_sync_counters($/;"	f
xfs_icsb_sync_counters	xfs_mount.h	100;"	d
xfs_icsb_sync_counters_locked	xfs_mount.c	/^xfs_icsb_sync_counters_locked($/;"	f
xfs_icsb_sync_counters_locked	xfs_mount.h	101;"	d
xfs_icsb_unlock	xfs_mount.h	/^xfs_icsb_unlock(xfs_mount_t *mp)$/;"	f
xfs_icsb_unlock	xfs_mount.h	361;"	d
xfs_icsb_unlock_all_counters	xfs_mount.c	/^xfs_icsb_unlock_all_counters($/;"	f
xfs_icsb_unlock_cntr	xfs_mount.c	/^xfs_icsb_unlock_cntr($/;"	f
xfs_ictimestamp	xfs_inode.h	/^typedef struct xfs_ictimestamp {$/;"	s
xfs_ictimestamp_t	xfs_inode.h	/^} xfs_ictimestamp_t;$/;"	t	typeref:struct:xfs_ictimestamp
xfs_idata_realloc	xfs_inode.c	/^xfs_idata_realloc($/;"	f
xfs_idestroy_fork	xfs_inode.c	/^xfs_idestroy_fork($/;"	f
xfs_iext_add	xfs_inode.c	/^xfs_iext_add($/;"	f
xfs_iext_add_indirect_multi	xfs_inode.c	/^xfs_iext_add_indirect_multi($/;"	f
xfs_iext_bno_to_ext	xfs_inode.c	/^xfs_iext_bno_to_ext($/;"	f
xfs_iext_bno_to_irec	xfs_inode.c	/^xfs_iext_bno_to_irec($/;"	f
xfs_iext_destroy	xfs_inode.c	/^xfs_iext_destroy($/;"	f
xfs_iext_direct_to_inline	xfs_inode.c	/^xfs_iext_direct_to_inline($/;"	f
xfs_iext_get_ext	xfs_inode.c	/^xfs_iext_get_ext($/;"	f
xfs_iext_idx_to_irec	xfs_inode.c	/^xfs_iext_idx_to_irec($/;"	f
xfs_iext_indirect_to_direct	xfs_inode.c	/^xfs_iext_indirect_to_direct($/;"	f
xfs_iext_inline_to_direct	xfs_inode.c	/^xfs_iext_inline_to_direct($/;"	f
xfs_iext_insert	xfs_inode.c	/^xfs_iext_insert($/;"	f
xfs_iext_irec_compact	xfs_inode.c	/^xfs_iext_irec_compact($/;"	f
xfs_iext_irec_compact_pages	xfs_inode.c	/^xfs_iext_irec_compact_pages($/;"	f
xfs_iext_irec_init	xfs_inode.c	/^xfs_iext_irec_init($/;"	f
xfs_iext_irec_new	xfs_inode.c	/^xfs_iext_irec_new($/;"	f
xfs_iext_irec_remove	xfs_inode.c	/^xfs_iext_irec_remove($/;"	f
xfs_iext_irec_update_extoffs	xfs_inode.c	/^xfs_iext_irec_update_extoffs($/;"	f
xfs_iext_realloc_direct	xfs_inode.c	/^xfs_iext_realloc_direct($/;"	f
xfs_iext_realloc_indirect	xfs_inode.c	/^xfs_iext_realloc_indirect($/;"	f
xfs_iext_remove	xfs_inode.c	/^xfs_iext_remove($/;"	f
xfs_iext_remove	xfs_trace.h	/^DEFINE_BMAP_EVENT(xfs_iext_remove);$/;"	v
xfs_iext_remove_direct	xfs_inode.c	/^xfs_iext_remove_direct($/;"	f
xfs_iext_remove_indirect	xfs_inode.c	/^xfs_iext_remove_indirect($/;"	f
xfs_iext_remove_inline	xfs_inode.c	/^xfs_iext_remove_inline($/;"	f
xfs_iextents_copy	xfs_inode.c	/^xfs_iextents_copy($/;"	f
xfs_iflags_clear	xfs_inode.h	/^xfs_iflags_clear(xfs_inode_t *ip, unsigned short flags)$/;"	f
xfs_iflags_set	xfs_inode.h	/^xfs_iflags_set(xfs_inode_t *ip, unsigned short flags)$/;"	f
xfs_iflags_test	xfs_inode.h	/^xfs_iflags_test(xfs_inode_t *ip, unsigned short flags)$/;"	f
xfs_iflags_test_and_clear	xfs_inode.h	/^xfs_iflags_test_and_clear(xfs_inode_t *ip, unsigned short flags)$/;"	f
xfs_iflags_test_and_set	xfs_inode.h	/^xfs_iflags_test_and_set(xfs_inode_t *ip, unsigned short flags)$/;"	f
xfs_iflock	xfs_inode.h	/^static inline void xfs_iflock(struct xfs_inode *ip)$/;"	f
xfs_iflock_nowait	xfs_inode.h	/^static inline int xfs_iflock_nowait(struct xfs_inode *ip)$/;"	f
xfs_iflush	xfs_inode.c	/^xfs_iflush($/;"	f
xfs_iflush_abort	xfs_inode_item.c	/^xfs_iflush_abort($/;"	f
xfs_iflush_cluster	xfs_inode.c	/^xfs_iflush_cluster($/;"	f
xfs_iflush_done	xfs_inode_item.c	/^xfs_iflush_done($/;"	f
xfs_iflush_fork	xfs_inode.c	/^xfs_iflush_fork($/;"	f
xfs_iflush_int	xfs_inode.c	/^xfs_iflush_int($/;"	f
xfs_ifork	xfs_inode.h	/^typedef struct xfs_ifork {$/;"	s
xfs_ifork_t	xfs_inode.h	/^} xfs_ifork_t;$/;"	t	typeref:struct:xfs_ifork
xfs_ifork_zone	xfs_inode.c	/^kmem_zone_t *xfs_ifork_zone;$/;"	v
xfs_iformat	xfs_inode.c	/^xfs_iformat($/;"	f
xfs_iformat_btree	xfs_inode.c	/^xfs_iformat_btree($/;"	f
xfs_iformat_extents	xfs_inode.c	/^xfs_iformat_extents($/;"	f
xfs_iformat_local	xfs_inode.c	/^xfs_iformat_local($/;"	f
xfs_ifree	xfs_inode.c	/^xfs_ifree($/;"	f
xfs_ifree_cluster	xfs_inode.c	/^xfs_ifree_cluster($/;"	f
xfs_ifunlock	xfs_inode.h	/^static inline void xfs_ifunlock(struct xfs_inode *ip)$/;"	f
xfs_iget	xfs_iget.c	/^xfs_iget($/;"	f
xfs_iget_cache_miss	xfs_iget.c	/^xfs_iget_cache_miss($/;"	f	file:
xfs_iget_hit	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_iget_hit);$/;"	v
xfs_iget_miss	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_iget_miss);$/;"	v
xfs_iget_reclaim	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_iget_reclaim);$/;"	v
xfs_iget_reclaim_fail	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_iget_reclaim_fail);$/;"	v
xfs_iget_skip	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_iget_skip);$/;"	v
xfs_ihold	xfs_trace.h	/^DEFINE_IREF_EVENT(xfs_ihold);$/;"	v
xfs_ili_zone	xfs_inode_item.c	/^kmem_zone_t	*xfs_ili_zone;		\/* inode log item zone *\/$/;"	v
xfs_ilock	xfs_iget.c	/^xfs_ilock($/;"	f
xfs_ilock	xfs_trace.h	/^DEFINE_LOCK_EVENT(xfs_ilock);$/;"	v
xfs_ilock_demote	xfs_iget.c	/^xfs_ilock_demote($/;"	f
xfs_ilock_demote	xfs_trace.h	/^DEFINE_LOCK_EVENT(xfs_ilock_demote);$/;"	v
xfs_ilock_map_shared	xfs_iget.c	/^xfs_ilock_map_shared($/;"	f
xfs_ilock_nowait	xfs_iget.c	/^xfs_ilock_nowait($/;"	f
xfs_ilock_nowait	xfs_trace.h	/^DEFINE_LOCK_EVENT(xfs_ilock_nowait);$/;"	v
xfs_ilog_fbroot	xfs_inode_item.h	/^static inline int xfs_ilog_fbroot(int w)$/;"	f
xfs_ilog_fdata	xfs_inode_item.h	/^static inline int xfs_ilog_fdata(int w)$/;"	f
xfs_ilog_fext	xfs_inode_item.h	/^static inline int xfs_ilog_fext(int w)$/;"	f
xfs_imap	xfs_ialloc.c	/^xfs_imap($/;"	f
xfs_imap	xfs_inode.h	/^struct xfs_imap {$/;"	s
xfs_imap_lookup	xfs_ialloc.c	/^xfs_imap_lookup($/;"	f
xfs_imap_to_bp	xfs_inode.c	/^xfs_imap_to_bp($/;"	f
xfs_imap_valid	xfs_aops.c	/^xfs_imap_valid($/;"	f
xfs_inactive	xfs_vnodeops.c	/^xfs_inactive($/;"	f
xfs_inactive_attrs	xfs_vnodeops.c	/^xfs_inactive_attrs($/;"	f
xfs_inactive_symlink_local	xfs_vnodeops.c	/^xfs_inactive_symlink_local($/;"	f
xfs_inactive_symlink_rmt	xfs_vnodeops.c	/^xfs_inactive_symlink_rmt($/;"	f
xfs_incore	xfs_buf.h	169;"	d
xfs_inherit_acl	xfs_acl.c	/^xfs_inherit_acl(struct inode *inode, struct posix_acl *acl)$/;"	f
xfs_inherit_acl	xfs_acl.h	58;"	d
xfs_inherit_noatime	xfs_linux.h	114;"	d
xfs_inherit_nodefrag	xfs_linux.h	119;"	d
xfs_inherit_nodump	xfs_linux.h	113;"	d
xfs_inherit_nosymlinks	xfs_linux.h	117;"	d
xfs_inherit_sync	xfs_linux.h	112;"	d
xfs_init_procfs	xfs_stats.c	/^xfs_init_procfs(void)$/;"	f
xfs_init_procfs	xfs_stats.h	/^static inline int xfs_init_procfs(void)$/;"	f
xfs_init_security	xfs_iops.c	/^xfs_init_security($/;"	f
xfs_init_workqueues	xfs_super.c	/^xfs_init_workqueues(void)$/;"	f
xfs_init_zones	xfs_super.c	/^xfs_init_zones(void)$/;"	f
xfs_initialize_perag	xfs_mount.c	/^xfs_initialize_perag($/;"	f
xfs_initialize_perag_data	xfs_mount.c	/^xfs_initialize_perag_data(xfs_mount_t *mp, xfs_agnumber_t agcount)$/;"	f
xfs_initxattrs	xfs_iops.c	/^int xfs_initxattrs(struct inode *inode, const struct xattr *xattr_array,$/;"	f
xfs_ino_t	xfs_types.h	/^typedef unsigned long long	xfs_ino_t;	\/* <inode> type *\/$/;"	t
xfs_inobp_check	xfs_inode.c	/^xfs_inobp_check($/;"	f
xfs_inobp_check	xfs_inode.h	593;"	d
xfs_inobt_alloc_block	xfs_ialloc_btree.c	/^xfs_inobt_alloc_block($/;"	f
xfs_inobt_dup_cursor	xfs_ialloc_btree.c	/^xfs_inobt_dup_cursor($/;"	f
xfs_inobt_free_block	xfs_ialloc_btree.c	/^xfs_inobt_free_block($/;"	f
xfs_inobt_get_maxrecs	xfs_ialloc_btree.c	/^xfs_inobt_get_maxrecs($/;"	f
xfs_inobt_get_minrecs	xfs_ialloc_btree.c	/^xfs_inobt_get_minrecs($/;"	f
xfs_inobt_get_rec	xfs_ialloc.c	/^xfs_inobt_get_rec($/;"	f
xfs_inobt_init_cursor	xfs_ialloc_btree.c	/^xfs_inobt_init_cursor($/;"	f
xfs_inobt_init_key_from_rec	xfs_ialloc_btree.c	/^xfs_inobt_init_key_from_rec($/;"	f
xfs_inobt_init_ptr_from_cur	xfs_ialloc_btree.c	/^xfs_inobt_init_ptr_from_cur($/;"	f
xfs_inobt_init_rec_from_cur	xfs_ialloc_btree.c	/^xfs_inobt_init_rec_from_cur($/;"	f
xfs_inobt_init_rec_from_key	xfs_ialloc_btree.c	/^xfs_inobt_init_rec_from_key($/;"	f
xfs_inobt_key	xfs_ialloc_btree.h	/^typedef struct xfs_inobt_key {$/;"	s
xfs_inobt_key_diff	xfs_ialloc_btree.c	/^xfs_inobt_key_diff($/;"	f
xfs_inobt_key_t	xfs_ialloc_btree.h	/^} xfs_inobt_key_t;$/;"	t	typeref:struct:xfs_inobt_key
xfs_inobt_keys_inorder	xfs_ialloc_btree.c	/^xfs_inobt_keys_inorder($/;"	f
xfs_inobt_lookup	xfs_ialloc.c	/^xfs_inobt_lookup($/;"	f
xfs_inobt_maskn	xfs_ialloc_btree.h	/^static inline xfs_inofree_t xfs_inobt_maskn(int i, int n)$/;"	f
xfs_inobt_maxrecs	xfs_ialloc_btree.c	/^xfs_inobt_maxrecs($/;"	f
xfs_inobt_ops	xfs_ialloc_btree.c	/^static const struct xfs_btree_ops xfs_inobt_ops = {$/;"	v	typeref:struct:xfs_btree_ops	file:
xfs_inobt_ptr_t	xfs_ialloc_btree.h	/^typedef __be32 xfs_inobt_ptr_t;$/;"	t
xfs_inobt_rec	xfs_ialloc_btree.h	/^typedef struct xfs_inobt_rec {$/;"	s
xfs_inobt_rec_incore	xfs_ialloc_btree.h	/^typedef struct xfs_inobt_rec_incore {$/;"	s
xfs_inobt_rec_incore_t	xfs_ialloc_btree.h	/^} xfs_inobt_rec_incore_t;$/;"	t	typeref:struct:xfs_inobt_rec_incore
xfs_inobt_rec_t	xfs_ialloc_btree.h	/^} xfs_inobt_rec_t;$/;"	t	typeref:struct:xfs_inobt_rec
xfs_inobt_recs_inorder	xfs_ialloc_btree.c	/^xfs_inobt_recs_inorder($/;"	f
xfs_inobt_set_root	xfs_ialloc_btree.c	/^xfs_inobt_set_root($/;"	f
xfs_inobt_update	xfs_ialloc.c	/^xfs_inobt_update($/;"	f
xfs_inode	xfs_inode.h	/^typedef struct xfs_inode {$/;"	s
xfs_inode_ag_iterator	xfs_sync.c	/^xfs_inode_ag_iterator($/;"	f
xfs_inode_ag_walk	xfs_sync.c	/^xfs_inode_ag_walk($/;"	f
xfs_inode_ag_walk_grab	xfs_sync.c	/^xfs_inode_ag_walk_grab($/;"	f
xfs_inode_alloc	xfs_iget.c	/^xfs_inode_alloc($/;"	f
xfs_inode_clean	xfs_inode_item.h	/^static inline int xfs_inode_clean(xfs_inode_t *ip)$/;"	f
xfs_inode_dquot	xfs_dquot.h	/^static inline xfs_dquot_t *xfs_inode_dquot(struct xfs_inode *ip, int type)$/;"	f
xfs_inode_free	xfs_iget.c	/^xfs_inode_free($/;"	f
xfs_inode_free_callback	xfs_iget.c	/^xfs_inode_free_callback($/;"	f
xfs_inode_hasattr	xfs_attr.c	/^xfs_inode_hasattr($/;"	f
xfs_inode_is_filestream	xfs_filestream.h	/^xfs_inode_is_filestream($/;"	f
xfs_inode_item_committed	xfs_inode_item.c	/^xfs_inode_item_committed($/;"	f
xfs_inode_item_committing	xfs_inode_item.c	/^xfs_inode_item_committing($/;"	f
xfs_inode_item_destroy	xfs_inode_item.c	/^xfs_inode_item_destroy($/;"	f
xfs_inode_item_format	xfs_inode_item.c	/^xfs_inode_item_format($/;"	f
xfs_inode_item_format_convert	xfs_inode_item.c	/^xfs_inode_item_format_convert($/;"	f
xfs_inode_item_format_extents	xfs_inode_item.c	/^xfs_inode_item_format_extents($/;"	f
xfs_inode_item_init	xfs_inode_item.c	/^xfs_inode_item_init($/;"	f
xfs_inode_item_ops	xfs_inode_item.c	/^static const struct xfs_item_ops xfs_inode_item_ops = {$/;"	v	typeref:struct:xfs_item_ops	file:
xfs_inode_item_pin	xfs_inode_item.c	/^xfs_inode_item_pin($/;"	f
xfs_inode_item_push	xfs_inode_item.c	/^xfs_inode_item_push($/;"	f
xfs_inode_item_push	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_inode_item_push);$/;"	v
xfs_inode_item_pushbuf	xfs_inode_item.c	/^xfs_inode_item_pushbuf($/;"	f
xfs_inode_item_size	xfs_inode_item.c	/^xfs_inode_item_size($/;"	f
xfs_inode_item_trylock	xfs_inode_item.c	/^xfs_inode_item_trylock($/;"	f
xfs_inode_item_unlock	xfs_inode_item.c	/^xfs_inode_item_unlock($/;"	f
xfs_inode_item_unpin	xfs_inode_item.c	/^xfs_inode_item_unpin($/;"	f
xfs_inode_log_format	xfs_inode_item.h	/^typedef struct xfs_inode_log_format {$/;"	s
xfs_inode_log_format_32	xfs_inode_item.h	/^typedef struct xfs_inode_log_format_32 {$/;"	s
xfs_inode_log_format_32_t	xfs_inode_item.h	/^} __attribute__((packed)) xfs_inode_log_format_32_t;$/;"	t	typeref:struct:xfs_inode_log_format_32
xfs_inode_log_format_64	xfs_inode_item.h	/^typedef struct xfs_inode_log_format_64 {$/;"	s
xfs_inode_log_format_64_t	xfs_inode_item.h	/^} xfs_inode_log_format_64_t;$/;"	t	typeref:struct:xfs_inode_log_format_64
xfs_inode_log_format_t	xfs_inode_item.h	/^} xfs_inode_log_format_t;$/;"	t	typeref:struct:xfs_inode_log_format
xfs_inode_log_item	xfs_inode_item.h	/^typedef struct xfs_inode_log_item {$/;"	s
xfs_inode_log_item_t	xfs_inode_item.h	/^} xfs_inode_log_item_t;$/;"	t	typeref:struct:xfs_inode_log_item
xfs_inode_operations	xfs_iops.c	/^static const struct inode_operations xfs_inode_operations = {$/;"	v	typeref:struct:inode_operations	file:
xfs_inode_pin	xfs_trace.h	/^DEFINE_IREF_EVENT(xfs_inode_pin);$/;"	v
xfs_inode_set_reclaim_tag	xfs_sync.c	/^xfs_inode_set_reclaim_tag($/;"	f
xfs_inode_t	xfs_inode.h	/^} xfs_inode_t;$/;"	t	typeref:struct:xfs_inode
xfs_inode_unpin	xfs_trace.h	/^DEFINE_IREF_EVENT(xfs_inode_unpin);$/;"	v
xfs_inode_unpin_nowait	xfs_trace.h	/^DEFINE_IREF_EVENT(xfs_inode_unpin_nowait);$/;"	v
xfs_inode_zone	xfs_inode.c	/^kmem_zone_t *xfs_inode_zone;$/;"	v
xfs_inofree_t	xfs_ialloc_btree.h	/^typedef	__uint64_t	xfs_inofree_t;$/;"	t
xfs_inogrp	xfs_fs.h	/^typedef struct xfs_inogrp {$/;"	s
xfs_inogrp_t	xfs_fs.h	/^} xfs_inogrp_t;$/;"	t	typeref:struct:xfs_inogrp
xfs_inotobp	xfs_inode.c	/^xfs_inotobp($/;"	f
xfs_internal_inum	xfs_itable.c	/^xfs_internal_inum($/;"	f
xfs_inumbers	xfs_itable.c	/^xfs_inumbers($/;"	f
xfs_inumbers_fmt	xfs_itable.c	/^xfs_inumbers_fmt($/;"	f
xfs_inumbers_fmt_compat	xfs_ioctl32.c	/^xfs_inumbers_fmt_compat($/;"	f
xfs_inumbers_fmt_compat	xfs_ioctl32.c	128;"	d	file:
xfs_invalidatepage	xfs_trace.h	/^DEFINE_PAGE_EVENT(xfs_invalidatepage);$/;"	v
xfs_ioc_bulkstat	xfs_ioctl.c	/^xfs_ioc_bulkstat($/;"	f
xfs_ioc_fsgeometry	xfs_ioctl.c	/^xfs_ioc_fsgeometry($/;"	f
xfs_ioc_fsgeometry_v1	xfs_ioctl.c	/^xfs_ioc_fsgeometry_v1($/;"	f
xfs_ioc_fsgetxattr	xfs_ioctl.c	/^xfs_ioc_fsgetxattr($/;"	f
xfs_ioc_fssetxattr	xfs_ioctl.c	/^xfs_ioc_fssetxattr($/;"	f
xfs_ioc_getbmap	xfs_ioctl.c	/^xfs_ioc_getbmap($/;"	f
xfs_ioc_getbmapx	xfs_ioctl.c	/^xfs_ioc_getbmapx($/;"	f
xfs_ioc_getxflags	xfs_ioctl.c	/^xfs_ioc_getxflags($/;"	f
xfs_ioc_setxflags	xfs_ioctl.c	/^xfs_ioc_setxflags($/;"	f
xfs_ioc_space	xfs_ioctl.c	/^xfs_ioc_space($/;"	f
xfs_ioc_trim	xfs_discard.c	/^xfs_ioc_trim($/;"	f
xfs_ioctl32_bstat_copyin	xfs_ioctl32.c	/^xfs_ioctl32_bstat_copyin($/;"	f
xfs_ioctl32_bstime_copyin	xfs_ioctl32.c	/^xfs_ioctl32_bstime_copyin($/;"	f
xfs_ioctl_setattr	xfs_ioctl.c	/^xfs_ioctl_setattr($/;"	f
xfs_ioctl_setattr	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_ioctl_setattr);$/;"	v
xfs_ioend	xfs_aops.h	/^typedef struct xfs_ioend {$/;"	s
xfs_ioend_is_append	xfs_aops.c	/^static inline bool xfs_ioend_is_append(struct xfs_ioend *ioend)$/;"	f	file:
xfs_ioend_new_eof	xfs_aops.c	/^xfs_ioend_new_eof($/;"	f
xfs_ioend_pool	xfs_super.c	/^mempool_t *xfs_ioend_pool;$/;"	v
xfs_ioend_t	xfs_aops.h	/^} xfs_ioend_t;$/;"	t	typeref:struct:xfs_ioend
xfs_ioend_zone	xfs_super.c	/^static kmem_zone_t *xfs_ioend_zone;$/;"	v	file:
xfs_iolock_active	xfs_iget.c	/^static struct lock_class_key xfs_iolock_active;$/;"	v	typeref:struct:lock_class_key	file:
xfs_iolock_reclaimable	xfs_iget.c	/^struct lock_class_key xfs_iolock_reclaimable;$/;"	v	typeref:struct:lock_class_key
xfs_iomap_eof_align_last_fsb	xfs_iomap.c	/^xfs_iomap_eof_align_last_fsb($/;"	f
xfs_iomap_eof_want_preallocate	xfs_iomap.c	/^xfs_iomap_eof_want_preallocate($/;"	f
xfs_iomap_prealloc_size	xfs_iomap.c	/^xfs_iomap_prealloc_size($/;"	f
xfs_iomap_write_allocate	xfs_iomap.c	/^xfs_iomap_write_allocate($/;"	f
xfs_iomap_write_delay	xfs_iomap.c	/^xfs_iomap_write_delay($/;"	f
xfs_iomap_write_direct	xfs_iomap.c	/^xfs_iomap_write_direct($/;"	f
xfs_iomap_write_unwritten	xfs_iomap.c	/^xfs_iomap_write_unwritten($/;"	f
xfs_iozero	xfs_file.c	/^xfs_iozero($/;"	f
xfs_ip2xflags	xfs_inode.c	/^xfs_ip2xflags($/;"	f
xfs_ipincount	xfs_inode.h	588;"	d
xfs_iread	xfs_inode.c	/^xfs_iread($/;"	f
xfs_iread_extents	xfs_inode.c	/^xfs_iread_extents($/;"	f
xfs_irele	xfs_trace.h	/^DEFINE_IREF_EVENT(xfs_irele);$/;"	v
xfs_iroot_realloc	xfs_inode.c	/^xfs_iroot_realloc($/;"	f
xfs_is_delayed_page	xfs_aops.c	/^xfs_is_delayed_page($/;"	f
xfs_isiflocked	xfs_inode.h	/^static inline int xfs_isiflocked(struct xfs_inode *ip)$/;"	f
xfs_isilocked	xfs_iget.c	/^xfs_isilocked($/;"	f
xfs_istale_done	xfs_inode_item.c	/^xfs_istale_done($/;"	f
xfs_item_ops	xfs_trans.h	/^struct xfs_item_ops {$/;"	s
xfs_itobp	xfs_inode.c	/^xfs_itobp($/;"	f
xfs_itruncate_extents	xfs_inode.c	/^xfs_itruncate_extents($/;"	f
xfs_itruncate_extents_end	xfs_trace.h	/^DEFINE_ITRUNC_EVENT(xfs_itruncate_extents_end);$/;"	v
xfs_itruncate_extents_start	xfs_trace.h	/^DEFINE_ITRUNC_EVENT(xfs_itruncate_extents_start);$/;"	v
xfs_iunlink	xfs_inode.c	/^xfs_iunlink($/;"	f
xfs_iunlink_remove	xfs_inode.c	/^xfs_iunlink_remove($/;"	f
xfs_iunlock	xfs_iget.c	/^xfs_iunlock($/;"	f
xfs_iunlock	xfs_trace.h	/^DEFINE_LOCK_EVENT(xfs_iunlock);$/;"	v
xfs_iunlock_map_shared	xfs_iget.c	/^xfs_iunlock_map_shared($/;"	f
xfs_iunpin	xfs_inode.c	/^xfs_iunpin($/;"	f	file:
xfs_iunpin_wait	xfs_inode.c	/^xfs_iunpin_wait($/;"	f
xfs_link	xfs_trace.h	/^DEFINE_NAMESPACE_EVENT(xfs_link);$/;"	v
xfs_link	xfs_vnodeops.c	/^xfs_link($/;"	f
xfs_lock_delays	xfs_vnodeops.c	/^int xfs_lock_delays;$/;"	v
xfs_lock_inodes	xfs_vnodeops.c	/^xfs_lock_inodes($/;"	f
xfs_lock_inumorder	xfs_vnodeops.c	/^xfs_lock_inumorder(int lock_mode, int subclass)$/;"	f	file:
xfs_lock_two_inodes	xfs_vnodeops.c	/^xfs_lock_two_inodes($/;"	f
xfs_locked_n	xfs_vnodeops.c	/^int xfs_locked_n;$/;"	v
xfs_log_callback	xfs_log.h	/^typedef struct xfs_log_callback {$/;"	s
xfs_log_callback_t	xfs_log.h	/^} xfs_log_callback_t;$/;"	t	typeref:struct:xfs_log_callback
xfs_log_commit_cil	xfs_log_cil.c	/^xfs_log_commit_cil($/;"	f
xfs_log_dirty_inode	xfs_sync.c	/^xfs_log_dirty_inode($/;"	f
xfs_log_done	xfs_log.c	/^xfs_log_done($/;"	f
xfs_log_done_nonperm	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_done_nonperm);$/;"	v
xfs_log_done_perm	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_done_perm);$/;"	v
xfs_log_force	xfs_log.c	/^xfs_log_force($/;"	f
xfs_log_force_lsn	xfs_log.c	/^xfs_log_force_lsn($/;"	f
xfs_log_force_umount	xfs_log.c	/^xfs_log_force_umount($/;"	f
xfs_log_grant_sleep	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_grant_sleep);$/;"	v
xfs_log_grant_wake	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_grant_wake);$/;"	v
xfs_log_grant_wake_up	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_grant_wake_up);$/;"	v
xfs_log_iovec	xfs_log.h	/^typedef struct xfs_log_iovec {$/;"	s
xfs_log_iovec_t	xfs_log.h	/^} xfs_log_iovec_t;$/;"	t	typeref:struct:xfs_log_iovec
xfs_log_item	xfs_trans.h	/^typedef struct xfs_log_item {$/;"	s
xfs_log_item_batch_insert	xfs_trans.c	/^xfs_log_item_batch_insert($/;"	f	file:
xfs_log_item_desc	xfs_trans.h	/^struct xfs_log_item_desc {$/;"	s
xfs_log_item_desc_zone	xfs_trans.c	/^kmem_zone_t	*xfs_log_item_desc_zone;$/;"	v
xfs_log_item_in_current_chkpt	xfs_log_cil.c	/^xfs_log_item_in_current_chkpt($/;"	f
xfs_log_item_init	xfs_log.c	/^xfs_log_item_init($/;"	f
xfs_log_item_t	xfs_trans.h	/^} xfs_log_item_t;$/;"	t	typeref:struct:xfs_log_item
xfs_log_mount	xfs_log.c	/^xfs_log_mount($/;"	f
xfs_log_mount_finish	xfs_log.c	/^xfs_log_mount_finish(xfs_mount_t *mp)$/;"	f
xfs_log_need_covered	xfs_log.c	/^xfs_log_need_covered(xfs_mount_t *mp)$/;"	f
xfs_log_notify	xfs_log.c	/^xfs_log_notify($/;"	f
xfs_log_recover_buf_cancel	xfs_trace.h	/^DEFINE_LOG_RECOVER_BUF_ITEM(xfs_log_recover_buf_cancel);$/;"	v
xfs_log_recover_buf_cancel_add	xfs_trace.h	/^DEFINE_LOG_RECOVER_BUF_ITEM(xfs_log_recover_buf_cancel_add);$/;"	v
xfs_log_recover_buf_cancel_ref_inc	xfs_trace.h	/^DEFINE_LOG_RECOVER_BUF_ITEM(xfs_log_recover_buf_cancel_ref_inc);$/;"	v
xfs_log_recover_buf_dquot_buf	xfs_trace.h	/^DEFINE_LOG_RECOVER_BUF_ITEM(xfs_log_recover_buf_dquot_buf);$/;"	v
xfs_log_recover_buf_inode_buf	xfs_trace.h	/^DEFINE_LOG_RECOVER_BUF_ITEM(xfs_log_recover_buf_inode_buf);$/;"	v
xfs_log_recover_buf_not_cancel	xfs_trace.h	/^DEFINE_LOG_RECOVER_BUF_ITEM(xfs_log_recover_buf_not_cancel);$/;"	v
xfs_log_recover_buf_recover	xfs_trace.h	/^DEFINE_LOG_RECOVER_BUF_ITEM(xfs_log_recover_buf_recover);$/;"	v
xfs_log_recover_buf_reg_buf	xfs_trace.h	/^DEFINE_LOG_RECOVER_BUF_ITEM(xfs_log_recover_buf_reg_buf);$/;"	v
xfs_log_recover_inode_cancel	xfs_trace.h	/^DEFINE_LOG_RECOVER_INO_ITEM(xfs_log_recover_inode_cancel);$/;"	v
xfs_log_recover_inode_recover	xfs_trace.h	/^DEFINE_LOG_RECOVER_INO_ITEM(xfs_log_recover_inode_recover);$/;"	v
xfs_log_recover_inode_skip	xfs_trace.h	/^DEFINE_LOG_RECOVER_INO_ITEM(xfs_log_recover_inode_skip);$/;"	v
xfs_log_recover_item_add	xfs_trace.h	/^DEFINE_LOG_RECOVER_ITEM(xfs_log_recover_item_add);$/;"	v
xfs_log_recover_item_add_cont	xfs_trace.h	/^DEFINE_LOG_RECOVER_ITEM(xfs_log_recover_item_add_cont);$/;"	v
xfs_log_recover_item_recover	xfs_trace.h	/^DEFINE_LOG_RECOVER_ITEM(xfs_log_recover_item_recover);$/;"	v
xfs_log_recover_item_reorder_head	xfs_trace.h	/^DEFINE_LOG_RECOVER_ITEM(xfs_log_recover_item_reorder_head);$/;"	v
xfs_log_recover_item_reorder_tail	xfs_trace.h	/^DEFINE_LOG_RECOVER_ITEM(xfs_log_recover_item_reorder_tail);$/;"	v
xfs_log_regrant	xfs_log.c	/^xfs_log_regrant($/;"	f
xfs_log_regrant	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_regrant);$/;"	v
xfs_log_regrant_exit	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_regrant_exit);$/;"	v
xfs_log_regrant_reserve_enter	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_regrant_reserve_enter);$/;"	v
xfs_log_regrant_reserve_exit	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_regrant_reserve_exit);$/;"	v
xfs_log_regrant_reserve_sub	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_regrant_reserve_sub);$/;"	v
xfs_log_release_iclog	xfs_log.c	/^xfs_log_release_iclog($/;"	f
xfs_log_reserve	xfs_log.c	/^xfs_log_reserve($/;"	f
xfs_log_reserve	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_reserve);$/;"	v
xfs_log_reserve_exit	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_reserve_exit);$/;"	v
xfs_log_sbcount	xfs_mount.c	/^xfs_log_sbcount(xfs_mount_t *mp)$/;"	f
xfs_log_space_wake	xfs_log.c	/^xfs_log_space_wake($/;"	f
xfs_log_ticket_get	xfs_log.c	/^xfs_log_ticket_get($/;"	f
xfs_log_ticket_put	xfs_log.c	/^xfs_log_ticket_put($/;"	f
xfs_log_ticket_zone	xfs_log.c	/^kmem_zone_t	*xfs_log_ticket_zone;$/;"	v
xfs_log_umount_write	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_umount_write);$/;"	v
xfs_log_ungrant_enter	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_ungrant_enter);$/;"	v
xfs_log_ungrant_exit	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_ungrant_exit);$/;"	v
xfs_log_ungrant_sub	xfs_trace.h	/^DEFINE_LOGGRANT_EVENT(xfs_log_ungrant_sub);$/;"	v
xfs_log_unmount	xfs_log.c	/^xfs_log_unmount(xfs_mount_t *mp)$/;"	f
xfs_log_unmount_write	xfs_log.c	/^xfs_log_unmount_write(xfs_mount_t *mp)$/;"	f
xfs_log_vec	xfs_log.h	/^struct xfs_log_vec {$/;"	s
xfs_lookup	xfs_trace.h	/^DEFINE_NAMESPACE_EVENT(xfs_lookup);$/;"	v
xfs_lookup	xfs_vnodeops.c	/^xfs_lookup($/;"	f
xfs_lookup_get_search_key	xfs_btree.c	/^xfs_lookup_get_search_key($/;"	f
xfs_lookup_t	xfs_types.h	/^} xfs_lookup_t;$/;"	t	typeref:enum:__anon34
xfs_lots_retries	xfs_vnodeops.c	/^int xfs_lots_retries;$/;"	v
xfs_lowbit32	xfs_bit.h	/^static inline int xfs_lowbit32(__uint32_t v)$/;"	f
xfs_lowbit64	xfs_bit.h	/^static inline int xfs_lowbit64(__uint64_t v)$/;"	f
xfs_lsn_t	xfs_types.h	/^typedef	__int64_t	xfs_lsn_t;	\/* log sequence number *\/$/;"	t
xfs_magics	xfs_btree.c	/^const __uint32_t xfs_magics[XFS_BTNUM_MAX] = {$/;"	v
xfs_make_iptr	xfs_ialloc.h	/^xfs_make_iptr(struct xfs_mount *mp, struct xfs_buf *b, int o)$/;"	f
xfs_map_at_offset	xfs_aops.c	/^xfs_map_at_offset($/;"	f
xfs_map_blocks	xfs_aops.c	/^xfs_map_blocks($/;"	f
xfs_map_blocks_alloc	xfs_trace.h	/^DEFINE_IOMAP_EVENT(xfs_map_blocks_alloc);$/;"	v
xfs_map_blocks_found	xfs_trace.h	/^DEFINE_IOMAP_EVENT(xfs_map_blocks_found);$/;"	v
xfs_map_buffer	xfs_aops.c	/^xfs_map_buffer($/;"	f
xfs_mark_inode_dirty	xfs_iops.c	/^xfs_mark_inode_dirty($/;"	f
xfs_mark_inode_dirty_sync	xfs_iops.c	/^xfs_mark_inode_dirty_sync($/;"	f
xfs_mask32lo	xfs_bit.h	/^static inline __uint32_t xfs_mask32lo(int n)$/;"	f
xfs_mask64hi	xfs_bit.h	/^static inline __uint64_t xfs_mask64hi(int n)$/;"	f
xfs_mask64lo	xfs_bit.h	/^static inline __uint64_t xfs_mask64lo(int n)$/;"	f
xfs_max_file_offset	xfs_super.c	/^xfs_max_file_offset($/;"	f
xfs_merge_ioc_xflags	xfs_ioctl.c	/^xfs_merge_ioc_xflags($/;"	f
xfs_middle_retries	xfs_vnodeops.c	/^int xfs_middle_retries;$/;"	v
xfs_mod_incore_sb	xfs_mount.c	/^xfs_mod_incore_sb($/;"	f
xfs_mod_incore_sb_batch	xfs_mount.c	/^xfs_mod_incore_sb_batch($/;"	f
xfs_mod_incore_sb_unlocked	xfs_mount.c	/^xfs_mod_incore_sb_unlocked($/;"	f
xfs_mod_sb	xfs_mount.c	/^xfs_mod_sb(xfs_trans_t *tp, __int64_t fields)$/;"	f
xfs_mod_sb	xfs_mount.h	/^typedef struct xfs_mod_sb {$/;"	s
xfs_mod_sb_t	xfs_mount.h	/^} xfs_mod_sb_t;$/;"	t	typeref:struct:xfs_mod_sb
xfs_mount	xfs_mount.h	/^typedef struct xfs_mount {$/;"	s
xfs_mount_common	xfs_mount.c	/^xfs_mount_common(xfs_mount_t *mp, xfs_sb_t *sbp)$/;"	f
xfs_mount_log_sb	xfs_mount.c	/^xfs_mount_log_sb($/;"	f
xfs_mount_reset_sbqflags	xfs_mount.c	/^xfs_mount_reset_sbqflags($/;"	f
xfs_mount_t	xfs_mount.h	/^} xfs_mount_t;$/;"	t	typeref:struct:xfs_mount
xfs_mount_validate_sb	xfs_mount.c	/^xfs_mount_validate_sb($/;"	f
xfs_mountfs	xfs_mount.c	/^xfs_mountfs($/;"	f
xfs_mru_cache	xfs_mru_cache.h	/^typedef struct xfs_mru_cache$/;"	s
xfs_mru_cache_create	xfs_mru_cache.c	/^xfs_mru_cache_create($/;"	f
xfs_mru_cache_delete	xfs_mru_cache.c	/^xfs_mru_cache_delete($/;"	f
xfs_mru_cache_destroy	xfs_mru_cache.c	/^xfs_mru_cache_destroy($/;"	f
xfs_mru_cache_elem	xfs_mru_cache.c	/^typedef struct xfs_mru_cache_elem$/;"	s	file:
xfs_mru_cache_elem_t	xfs_mru_cache.c	/^} xfs_mru_cache_elem_t;$/;"	t	typeref:struct:xfs_mru_cache_elem	file:
xfs_mru_cache_flush	xfs_mru_cache.c	/^xfs_mru_cache_flush($/;"	f	file:
xfs_mru_cache_free_func_t	xfs_mru_cache.h	/^typedef void (*xfs_mru_cache_free_func_t)(unsigned long, void*);$/;"	t
xfs_mru_cache_init	xfs_mru_cache.c	/^xfs_mru_cache_init(void)$/;"	f
xfs_mru_cache_insert	xfs_mru_cache.c	/^xfs_mru_cache_insert($/;"	f
xfs_mru_cache_lookup	xfs_mru_cache.c	/^xfs_mru_cache_lookup($/;"	f
xfs_mru_cache_remove	xfs_mru_cache.c	/^xfs_mru_cache_remove($/;"	f
xfs_mru_cache_t	xfs_mru_cache.h	/^} xfs_mru_cache_t;$/;"	t	typeref:struct:xfs_mru_cache
xfs_mru_cache_uninit	xfs_mru_cache.c	/^xfs_mru_cache_uninit(void)$/;"	f
xfs_mru_elem_zone	xfs_mru_cache.c	/^static kmem_zone_t		*xfs_mru_elem_zone;$/;"	v	file:
xfs_mru_reap_wq	xfs_mru_cache.c	/^static struct workqueue_struct	*xfs_mru_reap_wq;$/;"	v	typeref:struct:workqueue_struct	file:
xfs_name	xfs_types.h	/^struct xfs_name {$/;"	s
xfs_name_dotdot	xfs_dir2.c	/^struct xfs_name xfs_name_dotdot = { (unsigned char *)"..", 2};$/;"	v	typeref:struct:xfs_name
xfs_nameops	xfs_da_btree.h	/^struct xfs_nameops {$/;"	s
xfs_next_bit	xfs_bit.c	/^int xfs_next_bit(uint *map, uint size, uint start_bit)$/;"	f
xfs_nfs_get_inode	xfs_export.c	/^xfs_nfs_get_inode($/;"	f
xfs_nlink_t	xfs_types.h	/^typedef __u32			xfs_nlink_t;$/;"	t
xfs_off_t	xfs_types.h	/^typedef __s64			xfs_off_t;	\/* <file offset> type *\/$/;"	t
xfs_open_by_handle	xfs_ioctl.c	/^xfs_open_by_handle($/;"	f
xfs_open_devices	xfs_super.c	/^xfs_open_devices($/;"	f
xfs_panic_mask	xfs_linux.h	108;"	d
xfs_panic_mask_proc_handler	xfs_sysctl.c	/^xfs_panic_mask_proc_handler($/;"	f
xfs_param	xfs_sysctl.h	/^typedef struct xfs_param {$/;"	s
xfs_param_t	xfs_sysctl.h	/^} xfs_param_t;$/;"	t	typeref:struct:xfs_param
xfs_params	xfs_globals.c	/^xfs_param_t xfs_params = {$/;"	v
xfs_parseargs	xfs_super.c	/^xfs_parseargs($/;"	f
xfs_perag	xfs_ag.h	/^typedef struct xfs_perag {$/;"	s
xfs_perag_clear_reclaim	xfs_trace.h	/^DEFINE_PERAG_REF_EVENT(xfs_perag_clear_reclaim);$/;"	v
xfs_perag_get	xfs_mount.c	/^xfs_perag_get(struct xfs_mount *mp, xfs_agnumber_t agno)$/;"	f
xfs_perag_get	xfs_trace.h	/^DEFINE_PERAG_REF_EVENT(xfs_perag_get);$/;"	v
xfs_perag_get_tag	xfs_mount.c	/^xfs_perag_get_tag($/;"	f
xfs_perag_get_tag	xfs_trace.h	/^DEFINE_PERAG_REF_EVENT(xfs_perag_get_tag);$/;"	v
xfs_perag_put	xfs_mount.c	/^xfs_perag_put(struct xfs_perag *pag)$/;"	f
xfs_perag_put	xfs_trace.h	/^DEFINE_PERAG_REF_EVENT(xfs_perag_put);$/;"	v
xfs_perag_set_reclaim	xfs_trace.h	/^DEFINE_PERAG_REF_EVENT(xfs_perag_set_reclaim);$/;"	v
xfs_perag_t	xfs_ag.h	/^} xfs_perag_t;$/;"	t	typeref:struct:xfs_perag
xfs_preferred_iosize	xfs_mount.h	/^xfs_preferred_iosize(xfs_mount_t *mp)$/;"	f
xfs_promote_inode	xfs_inode.c	/^xfs_promote_inode($/;"	f
xfs_qcnt_t	xfs_quota.h	/^typedef __uint64_t	xfs_qcnt_t;$/;"	t
xfs_qm	xfs_qm.h	/^typedef struct xfs_qm {$/;"	s
xfs_qm_adjust_dqlimits	xfs_dquot.c	/^xfs_qm_adjust_dqlimits($/;"	f
xfs_qm_adjust_dqtimers	xfs_dquot.c	/^xfs_qm_adjust_dqtimers($/;"	f
xfs_qm_cleanup_procfs	xfs_qm_stats.c	/^xfs_qm_cleanup_procfs(void)$/;"	f
xfs_qm_cleanup_procfs	xfs_qm_stats.h	/^static inline void xfs_qm_cleanup_procfs(void) { };$/;"	f
xfs_qm_destroy	xfs_qm.c	/^xfs_qm_destroy($/;"	f
xfs_qm_destroy_quotainfo	xfs_qm.c	/^xfs_qm_destroy_quotainfo($/;"	f
xfs_qm_detach_gdquots	xfs_qm.c	/^xfs_qm_detach_gdquots($/;"	f
xfs_qm_dqalloc	xfs_dquot.c	/^xfs_qm_dqalloc($/;"	f
xfs_qm_dqattach	xfs_qm.c	/^xfs_qm_dqattach($/;"	f
xfs_qm_dqattach	xfs_quota.h	362;"	d
xfs_qm_dqattach_grouphint	xfs_qm.c	/^xfs_qm_dqattach_grouphint($/;"	f
xfs_qm_dqattach_locked	xfs_qm.c	/^xfs_qm_dqattach_locked($/;"	f
xfs_qm_dqattach_locked	xfs_quota.h	363;"	d
xfs_qm_dqattach_one	xfs_qm.c	/^xfs_qm_dqattach_one($/;"	f
xfs_qm_dqcheck	xfs_log_recover.c	/^xfs_qm_dqcheck($/;"	f
xfs_qm_dqdestroy	xfs_dquot.c	/^xfs_qm_dqdestroy($/;"	f
xfs_qm_dqdetach	xfs_qm.c	/^xfs_qm_dqdetach($/;"	f
xfs_qm_dqdetach	xfs_quota.h	364;"	d
xfs_qm_dqflush	xfs_dquot.c	/^xfs_qm_dqflush($/;"	f
xfs_qm_dqflush_all	xfs_qm.c	/^xfs_qm_dqflush_all($/;"	f
xfs_qm_dqflush_done	xfs_dquot.c	/^xfs_qm_dqflush_done($/;"	f
xfs_qm_dqfree_one	xfs_qm.c	/^xfs_qm_dqfree_one($/;"	f
xfs_qm_dqget	xfs_dquot.c	/^xfs_qm_dqget($/;"	f
xfs_qm_dqhold	xfs_dquot.h	/^static inline struct xfs_dquot *xfs_qm_dqhold(struct xfs_dquot *dqp)$/;"	f
xfs_qm_dqiter_bufs	xfs_qm.c	/^xfs_qm_dqiter_bufs($/;"	f
xfs_qm_dqiterate	xfs_qm.c	/^xfs_qm_dqiterate($/;"	f
xfs_qm_dqlookup	xfs_dquot.c	/^xfs_qm_dqlookup($/;"	f
xfs_qm_dqpurge	xfs_dquot.c	/^xfs_qm_dqpurge($/;"	f
xfs_qm_dqpurge_all	xfs_qm.c	/^xfs_qm_dqpurge_all($/;"	f
xfs_qm_dqpurge_int	xfs_qm.c	/^xfs_qm_dqpurge_int($/;"	f
xfs_qm_dqput	xfs_dquot.c	/^xfs_qm_dqput($/;"	f
xfs_qm_dqread	xfs_dquot.c	/^xfs_qm_dqread($/;"	f
xfs_qm_dqreclaim_one	xfs_qm.c	/^xfs_qm_dqreclaim_one($/;"	f
xfs_qm_dqrele	xfs_dquot.c	/^xfs_qm_dqrele($/;"	f
xfs_qm_dqrele	xfs_quota.h	365;"	d
xfs_qm_dqrele_all_inodes	xfs_qm_syscalls.c	/^xfs_qm_dqrele_all_inodes($/;"	f
xfs_qm_dqtobp	xfs_dquot.c	/^xfs_qm_dqtobp($/;"	f
xfs_qm_dqunpin_wait	xfs_dquot_item.c	/^xfs_qm_dqunpin_wait($/;"	f
xfs_qm_dquot_logitem_committed	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_committed($/;"	f
xfs_qm_dquot_logitem_committing	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_committing($/;"	f
xfs_qm_dquot_logitem_format	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_format($/;"	f
xfs_qm_dquot_logitem_init	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_init($/;"	f
xfs_qm_dquot_logitem_pin	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_pin($/;"	f
xfs_qm_dquot_logitem_push	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_push($/;"	f
xfs_qm_dquot_logitem_pushbuf	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_pushbuf($/;"	f
xfs_qm_dquot_logitem_size	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_size($/;"	f
xfs_qm_dquot_logitem_trylock	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_trylock($/;"	f
xfs_qm_dquot_logitem_unlock	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_unlock($/;"	f
xfs_qm_dquot_logitem_unpin	xfs_dquot_item.c	/^xfs_qm_dquot_logitem_unpin($/;"	f
xfs_qm_dqusage_adjust	xfs_qm.c	/^xfs_qm_dqusage_adjust($/;"	f
xfs_qm_exit	xfs_qm_bhv.c	/^xfs_qm_exit(void)$/;"	f
xfs_qm_export_flags	xfs_qm_syscalls.c	/^xfs_qm_export_flags($/;"	f
xfs_qm_export_qtype_flags	xfs_qm_syscalls.c	/^xfs_qm_export_qtype_flags($/;"	f
xfs_qm_get_rtblks	xfs_qm.c	/^xfs_qm_get_rtblks($/;"	f
xfs_qm_hold_quotafs_ref	xfs_qm.c	/^xfs_qm_hold_quotafs_ref($/;"	f
xfs_qm_init	xfs_qm_bhv.c	/^xfs_qm_init(void)$/;"	f
xfs_qm_init_dquot_blk	xfs_dquot.c	/^xfs_qm_init_dquot_blk($/;"	f
xfs_qm_init_procfs	xfs_qm_stats.c	/^xfs_qm_init_procfs(void)$/;"	f
xfs_qm_init_procfs	xfs_qm_stats.h	/^static inline void xfs_qm_init_procfs(void) { };$/;"	f
xfs_qm_init_quotainfo	xfs_qm.c	/^xfs_qm_init_quotainfo($/;"	f
xfs_qm_init_quotainos	xfs_qm.c	/^xfs_qm_init_quotainos($/;"	f
xfs_qm_list_destroy	xfs_qm.c	/^xfs_qm_list_destroy($/;"	f
xfs_qm_list_init	xfs_qm.c	/^xfs_qm_list_init($/;"	f
xfs_qm_log_quotaoff	xfs_qm_syscalls.c	/^xfs_qm_log_quotaoff($/;"	f
xfs_qm_log_quotaoff_end	xfs_qm_syscalls.c	/^xfs_qm_log_quotaoff_end($/;"	f
xfs_qm_mount_quotas	xfs_qm.c	/^xfs_qm_mount_quotas($/;"	f
xfs_qm_mount_quotas	xfs_quota.h	368;"	d
xfs_qm_newmount	xfs_qm_bhv.c	/^xfs_qm_newmount($/;"	f
xfs_qm_newmount	xfs_quota.h	367;"	d
xfs_qm_qino_alloc	xfs_qm.c	/^xfs_qm_qino_alloc($/;"	f
xfs_qm_qoff_logitem_committed	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_committed($/;"	f
xfs_qm_qoff_logitem_committing	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_committing($/;"	f
xfs_qm_qoff_logitem_format	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_format($/;"	f
xfs_qm_qoff_logitem_init	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_init($/;"	f
xfs_qm_qoff_logitem_ops	xfs_dquot_item.c	/^static const struct xfs_item_ops xfs_qm_qoff_logitem_ops = {$/;"	v	typeref:struct:xfs_item_ops	file:
xfs_qm_qoff_logitem_pin	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_pin($/;"	f
xfs_qm_qoff_logitem_push	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_push($/;"	f
xfs_qm_qoff_logitem_size	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_size($/;"	f
xfs_qm_qoff_logitem_trylock	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_trylock($/;"	f
xfs_qm_qoff_logitem_unlock	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_unlock($/;"	f
xfs_qm_qoff_logitem_unpin	xfs_dquot_item.c	/^xfs_qm_qoff_logitem_unpin($/;"	f
xfs_qm_qoffend_logitem_committed	xfs_dquot_item.c	/^xfs_qm_qoffend_logitem_committed($/;"	f
xfs_qm_qoffend_logitem_ops	xfs_dquot_item.c	/^static const struct xfs_item_ops xfs_qm_qoffend_logitem_ops = {$/;"	v	typeref:struct:xfs_item_ops	file:
xfs_qm_quotacheck	xfs_qm.c	/^xfs_qm_quotacheck($/;"	f
xfs_qm_quotacheck_dqadjust	xfs_qm.c	/^xfs_qm_quotacheck_dqadjust($/;"	f
xfs_qm_rele_quotafs_ref	xfs_qm.c	/^xfs_qm_rele_quotafs_ref($/;"	f
xfs_qm_reset_dqcounts	xfs_qm.c	/^xfs_qm_reset_dqcounts($/;"	f
xfs_qm_scall_getqstat	xfs_qm_syscalls.c	/^xfs_qm_scall_getqstat($/;"	f
xfs_qm_scall_getquota	xfs_qm_syscalls.c	/^xfs_qm_scall_getquota($/;"	f
xfs_qm_scall_quotaoff	xfs_qm_syscalls.c	/^xfs_qm_scall_quotaoff($/;"	f
xfs_qm_scall_quotaon	xfs_qm_syscalls.c	/^xfs_qm_scall_quotaon($/;"	f
xfs_qm_scall_setqlim	xfs_qm_syscalls.c	/^xfs_qm_scall_setqlim($/;"	f
xfs_qm_scall_trunc_qfile	xfs_qm_syscalls.c	/^xfs_qm_scall_trunc_qfile($/;"	f
xfs_qm_scall_trunc_qfiles	xfs_qm_syscalls.c	/^xfs_qm_scall_trunc_qfiles($/;"	f
xfs_qm_shake	xfs_qm.c	/^xfs_qm_shake($/;"	f
xfs_qm_shaker	xfs_qm.c	/^static struct shrinker xfs_qm_shaker = {$/;"	v	typeref:struct:shrinker	file:
xfs_qm_statvfs	xfs_qm_bhv.c	/^xfs_qm_statvfs($/;"	f
xfs_qm_statvfs	xfs_quota.h	366;"	d
xfs_qm_t	xfs_qm.h	/^} xfs_qm_t;$/;"	t	typeref:struct:xfs_qm
xfs_qm_unmount	xfs_qm.c	/^xfs_qm_unmount($/;"	f
xfs_qm_unmount	xfs_quota.h	369;"	d
xfs_qm_unmount_quotas	xfs_qm.c	/^xfs_qm_unmount_quotas($/;"	f
xfs_qm_unmount_quotas	xfs_quota.h	370;"	d
xfs_qm_vop_chown	xfs_qm.c	/^xfs_qm_vop_chown($/;"	f
xfs_qm_vop_chown	xfs_quota.h	360;"	d
xfs_qm_vop_chown_reserve	xfs_qm.c	/^xfs_qm_vop_chown_reserve($/;"	f
xfs_qm_vop_chown_reserve	xfs_quota.h	361;"	d
xfs_qm_vop_create_dqattach	xfs_qm.c	/^xfs_qm_vop_create_dqattach($/;"	f
xfs_qm_vop_create_dqattach	xfs_quota.h	358;"	d
xfs_qm_vop_dqalloc	xfs_qm.c	/^xfs_qm_vop_dqalloc($/;"	f
xfs_qm_vop_dqalloc	xfs_quota.h	/^xfs_qm_vop_dqalloc(struct xfs_inode *ip, uid_t uid, gid_t gid, prid_t prid,$/;"	f
xfs_qm_vop_rename_dqattach	xfs_qm.c	/^xfs_qm_vop_rename_dqattach($/;"	f
xfs_qm_vop_rename_dqattach	xfs_quota.h	359;"	d
xfs_qm_write_sb_changes	xfs_qm.c	/^xfs_qm_write_sb_changes($/;"	f
xfs_qoff_logformat	xfs_quota.h	/^typedef struct xfs_qoff_logformat {$/;"	s
xfs_qoff_logformat_t	xfs_quota.h	/^} xfs_qoff_logformat_t;$/;"	t	typeref:struct:xfs_qoff_logformat
xfs_qoff_logitem	xfs_dquot_item.h	/^typedef struct xfs_qoff_logitem {$/;"	s
xfs_qoff_logitem_t	xfs_dquot_item.h	/^} xfs_qoff_logitem_t;$/;"	t	typeref:struct:xfs_qoff_logitem
xfs_quiesce_attr	xfs_sync.c	/^xfs_quiesce_attr($/;"	f
xfs_quiesce_data	xfs_sync.c	/^xfs_quiesce_data($/;"	f
xfs_quiesce_fs	xfs_sync.c	/^xfs_quiesce_fs($/;"	f
xfs_quota_mplist_class	xfs_qm.c	/^static struct lock_class_key xfs_quota_mplist_class;$/;"	v	typeref:struct:lock_class_key	file:
xfs_quota_type	xfs_quotaops.c	/^xfs_quota_type(int type)$/;"	f
xfs_quota_warn	xfs_trans_dquot.c	/^xfs_quota_warn($/;"	f
xfs_quotactl_operations	xfs_quotaops.c	/^const struct quotactl_ops xfs_quotactl_operations = {$/;"	v	typeref:struct:quotactl_ops
xfs_quotainfo	xfs_qm.h	/^typedef struct xfs_quotainfo {$/;"	s
xfs_quotainfo_t	xfs_qm.h	/^} xfs_quotainfo_t;$/;"	t	typeref:struct:xfs_quotainfo
xfs_qwarncnt_t	xfs_quota.h	/^typedef __uint16_t	xfs_qwarncnt_t;$/;"	t
xfs_read_agf	xfs_alloc.c	/^xfs_read_agf($/;"	f
xfs_read_agi	xfs_ialloc.c	/^xfs_read_agi($/;"	f
xfs_read_buf	xfs_rw.c	/^xfs_read_buf($/;"	f
xfs_readdir	xfs_dir2.c	/^xfs_readdir($/;"	f
xfs_readdir	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_readdir);$/;"	v
xfs_readlink	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_readlink);$/;"	v
xfs_readlink	xfs_vnodeops.c	/^xfs_readlink($/;"	f
xfs_readlink_bmap	xfs_vnodeops.c	/^xfs_readlink_bmap($/;"	f
xfs_readlink_by_handle	xfs_ioctl.c	/^xfs_readlink_by_handle($/;"	f
xfs_readonly_buftarg	xfs_buf.h	294;"	d
xfs_readsb	xfs_mount.c	/^xfs_readsb(xfs_mount_t *mp, int flags)$/;"	f
xfs_reclaim_inode	xfs_sync.c	/^xfs_reclaim_inode($/;"	f
xfs_reclaim_inode_grab	xfs_sync.c	/^xfs_reclaim_inode_grab($/;"	f
xfs_reclaim_inodes	xfs_sync.c	/^xfs_reclaim_inodes($/;"	f
xfs_reclaim_inodes_ag	xfs_sync.c	/^xfs_reclaim_inodes_ag($/;"	f
xfs_reclaim_inodes_count	xfs_sync.c	/^xfs_reclaim_inodes_count($/;"	f
xfs_reclaim_inodes_nr	xfs_sync.c	/^xfs_reclaim_inodes_nr($/;"	f
xfs_reclaim_worker	xfs_sync.c	/^xfs_reclaim_worker($/;"	f
xfs_release	xfs_vnodeops.c	/^xfs_release($/;"	f
xfs_releasepage	xfs_trace.h	/^DEFINE_PAGE_EVENT(xfs_releasepage);$/;"	v
xfs_remove	xfs_trace.h	/^DEFINE_NAMESPACE_EVENT(xfs_remove);$/;"	v
xfs_remove	xfs_vnodeops.c	/^xfs_remove($/;"	f
xfs_rename	xfs_rename.c	/^xfs_rename($/;"	f
xfs_req_num	xfs_trans_buf.c	/^int	xfs_req_num;$/;"	v
xfs_reserve_blocks	xfs_fsops.c	/^xfs_reserve_blocks($/;"	f
xfs_reset_dqcounts	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_reset_dqcounts);$/;"	v
xfs_restore_resvblks	xfs_super.c	/^xfs_restore_resvblks(struct xfs_mount *mp)$/;"	f
xfs_rfsblock_t	xfs_types.h	/^typedef __uint32_t	xfs_rfsblock_t;	\/* blockno in filesystem (raw) *\/$/;"	t
xfs_rfsblock_t	xfs_types.h	/^typedef __uint64_t	xfs_rfsblock_t;	\/* blockno in filesystem (raw) *\/$/;"	t
xfs_root_table	xfs_sysctl.c	/^static ctl_table xfs_root_table[] = {$/;"	v	file:
xfs_rotorstep	xfs_linux.h	118;"	d
xfs_rtallocate_extent	xfs_rtalloc.c	/^xfs_rtallocate_extent($/;"	f
xfs_rtallocate_extent	xfs_rtalloc.h	146;"	d
xfs_rtallocate_extent_block	xfs_rtalloc.c	/^xfs_rtallocate_extent_block($/;"	f
xfs_rtallocate_extent_exact	xfs_rtalloc.c	/^xfs_rtallocate_extent_exact($/;"	f
xfs_rtallocate_extent_near	xfs_rtalloc.c	/^xfs_rtallocate_extent_near($/;"	f
xfs_rtallocate_extent_size	xfs_rtalloc.c	/^xfs_rtallocate_extent_size($/;"	f
xfs_rtallocate_range	xfs_rtalloc.c	/^xfs_rtallocate_range($/;"	f
xfs_rtany_summary	xfs_rtalloc.c	/^xfs_rtany_summary($/;"	f
xfs_rtblock_t	xfs_types.h	/^typedef __uint32_t	xfs_rtblock_t;	\/* extent (block) in realtime area *\/$/;"	t
xfs_rtblock_t	xfs_types.h	/^typedef __uint64_t	xfs_rtblock_t;	\/* extent (block) in realtime area *\/$/;"	t
xfs_rtbuf_get	xfs_rtalloc.c	/^xfs_rtbuf_get($/;"	f
xfs_rtcheck_alloc_range	xfs_rtalloc.c	/^xfs_rtcheck_alloc_range($/;"	f
xfs_rtcheck_range	xfs_rtalloc.c	/^xfs_rtcheck_range($/;"	f
xfs_rtcopy_summary	xfs_rtalloc.c	/^xfs_rtcopy_summary($/;"	f
xfs_rtfind_back	xfs_rtalloc.c	/^xfs_rtfind_back($/;"	f
xfs_rtfind_forw	xfs_rtalloc.c	/^xfs_rtfind_forw($/;"	f
xfs_rtfree_extent	xfs_rtalloc.c	/^xfs_rtfree_extent($/;"	f
xfs_rtfree_extent	xfs_rtalloc.h	147;"	d
xfs_rtfree_range	xfs_rtalloc.c	/^xfs_rtfree_range($/;"	f
xfs_rtget_summary	xfs_rtalloc.c	/^xfs_rtget_summary($/;"	f
xfs_rtmodify_range	xfs_rtalloc.c	/^xfs_rtmodify_range($/;"	f
xfs_rtmodify_summary	xfs_rtalloc.c	/^xfs_rtmodify_summary($/;"	f
xfs_rtmount_init	xfs_rtalloc.c	/^xfs_rtmount_init($/;"	f
xfs_rtmount_init	xfs_rtalloc.h	/^xfs_rtmount_init($/;"	f
xfs_rtmount_inodes	xfs_rtalloc.c	/^xfs_rtmount_inodes($/;"	f
xfs_rtmount_inodes	xfs_rtalloc.h	160;"	d
xfs_rtpick_extent	xfs_rtalloc.c	/^xfs_rtpick_extent($/;"	f
xfs_rtpick_extent	xfs_rtalloc.h	148;"	d
xfs_rtunmount_inodes	xfs_rtalloc.c	/^xfs_rtunmount_inodes($/;"	f
xfs_rtunmount_inodes	xfs_rtalloc.h	161;"	d
xfs_rtword_t	xfs_types.h	/^typedef	__int32_t	xfs_rtword_t;	\/* word type for bitmap manipulations *\/$/;"	t
xfs_rw_ilock	xfs_file.c	/^xfs_rw_ilock($/;"	f	file:
xfs_rw_ilock_demote	xfs_file.c	/^xfs_rw_ilock_demote($/;"	f	file:
xfs_rw_iunlock	xfs_file.c	/^xfs_rw_iunlock($/;"	f	file:
xfs_save_resvblks	xfs_super.c	/^xfs_save_resvblks(struct xfs_mount *mp)$/;"	f
xfs_sb	xfs_sb.h	/^typedef struct xfs_sb {$/;"	s
xfs_sb_field_t	xfs_sb.h	/^} xfs_sb_field_t;$/;"	t	typeref:enum:__anon30
xfs_sb_from_disk	xfs_mount.c	/^xfs_sb_from_disk($/;"	f
xfs_sb_good_version	xfs_sb.h	/^static inline int xfs_sb_good_version(xfs_sb_t *sbp)$/;"	f
xfs_sb_has_mismatched_features2	xfs_sb.h	/^static inline int xfs_sb_has_mismatched_features2(xfs_sb_t *sbp)$/;"	f
xfs_sb_info	xfs_mount.c	/^} xfs_sb_info[] = {$/;"	v	typeref:struct:__anon28	file:
xfs_sb_t	xfs_sb.h	/^} xfs_sb_t;$/;"	t	typeref:struct:xfs_sb
xfs_sb_to_disk	xfs_mount.c	/^xfs_sb_to_disk($/;"	f
xfs_sb_validate_fsb_count	xfs_mount.c	/^xfs_sb_validate_fsb_count($/;"	f
xfs_sb_version_addattr	xfs_sb.h	/^static inline void xfs_sb_version_addattr(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_addattr2	xfs_sb.h	/^static inline void xfs_sb_version_addattr2(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_addnlink	xfs_sb.h	/^static inline void xfs_sb_version_addnlink(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_addquota	xfs_sb.h	/^static inline void xfs_sb_version_addquota(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasalign	xfs_sb.h	/^static inline int xfs_sb_version_hasalign(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasasciici	xfs_sb.h	/^static inline int xfs_sb_version_hasasciici(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasattr	xfs_sb.h	/^static inline int xfs_sb_version_hasattr(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasattr2	xfs_sb.h	/^static inline int xfs_sb_version_hasattr2(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasdalign	xfs_sb.h	/^static inline int xfs_sb_version_hasdalign(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasdirv2	xfs_sb.h	/^static inline int xfs_sb_version_hasdirv2(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasextflgbit	xfs_sb.h	/^static inline int xfs_sb_version_hasextflgbit(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_haslazysbcount	xfs_sb.h	/^static inline int xfs_sb_version_haslazysbcount(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_haslogv2	xfs_sb.h	/^static inline int xfs_sb_version_haslogv2(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasmorebits	xfs_sb.h	/^static inline int xfs_sb_version_hasmorebits(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasnlink	xfs_sb.h	/^static inline int xfs_sb_version_hasnlink(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasprojid32bit	xfs_sb.h	/^static inline int xfs_sb_version_hasprojid32bit(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasquota	xfs_sb.h	/^static inline int xfs_sb_version_hasquota(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hassector	xfs_sb.h	/^static inline int xfs_sb_version_hassector(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_hasshared	xfs_sb.h	/^static inline int xfs_sb_version_hasshared(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_removeattr2	xfs_sb.h	/^static inline void xfs_sb_version_removeattr2(xfs_sb_t *sbp)$/;"	f
xfs_sb_version_tonew	xfs_sb.h	/^static inline unsigned xfs_sb_version_tonew(unsigned v)$/;"	f
xfs_sb_version_toold	xfs_sb.h	/^static inline unsigned xfs_sb_version_toold(unsigned v)$/;"	f
xfs_sbversion_add_attr2	xfs_attr_leaf.c	/^xfs_sbversion_add_attr2(xfs_mount_t *mp, xfs_trans_t *tp)$/;"	f
xfs_set_acl	xfs_acl.c	/^xfs_set_acl(struct inode *inode, int type, struct posix_acl *acl)$/;"	f
xfs_set_diflags	xfs_ioctl.c	/^xfs_set_diflags($/;"	f
xfs_set_dmattrs	xfs_vnodeops.c	/^xfs_set_dmattrs($/;"	f
xfs_set_inoalignment	xfs_mount.c	/^xfs_set_inoalignment(xfs_mount_t *mp)$/;"	f
xfs_set_low_space_thresholds	xfs_mount.c	/^xfs_set_low_space_thresholds($/;"	f
xfs_set_maxicount	xfs_mount.c	/^xfs_set_maxicount(xfs_mount_t *mp)$/;"	f
xfs_set_mode	xfs_acl.c	/^xfs_set_mode(struct inode *inode, umode_t mode)$/;"	f	file:
xfs_set_projid	xfs_inode.h	/^xfs_set_projid(struct xfs_inode *ip,$/;"	f
xfs_set_rw_sizes	xfs_mount.c	/^xfs_set_rw_sizes(xfs_mount_t *mp)$/;"	f
xfs_setattr	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_setattr);$/;"	v
xfs_setattr_nonsize	xfs_iops.c	/^xfs_setattr_nonsize($/;"	f
xfs_setattr_size	xfs_iops.c	/^xfs_setattr_size($/;"	f
xfs_setfilesize	xfs_aops.c	/^xfs_setfilesize($/;"	f
xfs_setfilesize	xfs_trace.h	/^DEFINE_SIMPLE_IO_EVENT(xfs_setfilesize);$/;"	v
xfs_setsize_buftarg	xfs_buf.c	/^xfs_setsize_buftarg($/;"	f
xfs_setsize_buftarg_early	xfs_buf.c	/^xfs_setsize_buftarg_early($/;"	f
xfs_setsize_buftarg_flags	xfs_buf.c	/^xfs_setsize_buftarg_flags($/;"	f
xfs_setup_devices	xfs_super.c	/^xfs_setup_devices($/;"	f
xfs_setup_inode	xfs_iops.c	/^xfs_setup_inode($/;"	f
xfs_sfiloff_t	xfs_types.h	/^typedef __int64_t	xfs_sfiloff_t;	\/* signed block number in a file *\/$/;"	t
xfs_showargs	xfs_super.c	/^xfs_showargs($/;"	f
xfs_small_retries	xfs_vnodeops.c	/^int xfs_small_retries;$/;"	v
xfs_sort	xfs_linux.h	162;"	d
xfs_sort_for_rename	xfs_rename.c	/^xfs_sort_for_rename($/;"	f
xfs_srtblock_t	xfs_types.h	/^typedef	__int32_t	xfs_srtblock_t;	\/* signed version of xfs_rtblock_t *\/$/;"	t
xfs_srtblock_t	xfs_types.h	/^typedef	__int64_t	xfs_srtblock_t;	\/* signed version of xfs_rtblock_t *\/$/;"	t
xfs_stack_trace	xfs_linux.h	163;"	d
xfs_start_buffer_writeback	xfs_aops.c	/^xfs_start_buffer_writeback($/;"	f
xfs_start_page_writeback	xfs_aops.c	/^xfs_start_page_writeback($/;"	f
xfs_stat_proc_fops	xfs_stats.c	/^static const struct file_operations xfs_stat_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
xfs_stat_proc_open	xfs_stats.c	/^static int xfs_stat_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
xfs_stat_proc_show	xfs_stats.c	/^static int xfs_stat_proc_show(struct seq_file *m, void *v)$/;"	f	file:
xfs_stats_clear	xfs_linux.h	111;"	d
xfs_stats_clear_proc_handler	xfs_sysctl.c	/^xfs_stats_clear_proc_handler($/;"	f
xfs_submit_ioend	xfs_aops.c	/^xfs_submit_ioend($/;"	f
xfs_submit_ioend_bio	xfs_aops.c	/^xfs_submit_ioend_bio($/;"	f
xfs_suminfo_t	xfs_types.h	/^typedef	__int32_t	xfs_suminfo_t;	\/* type of bitmap summary info *\/$/;"	t
xfs_super_operations	xfs_super.c	/^static const struct super_operations xfs_super_operations = {$/;"	v	typeref:struct:super_operations	file:
xfs_super_operations	xfs_super.c	/^static const struct super_operations xfs_super_operations;$/;"	v	typeref:struct:super_operations	file:
xfs_swap_extent_after	xfs_trace.h	/^DEFINE_SWAPEXT_EVENT(xfs_swap_extent_after);$/;"	v
xfs_swap_extent_before	xfs_trace.h	/^DEFINE_SWAPEXT_EVENT(xfs_swap_extent_before);$/;"	v
xfs_swap_extents	xfs_dfrag.c	/^xfs_swap_extents($/;"	f	file:
xfs_swap_extents_check_format	xfs_dfrag.c	/^xfs_swap_extents_check_format($/;"	f	file:
xfs_swapext	xfs_dfrag.c	/^xfs_swapext($/;"	f
xfs_swapext	xfs_dfrag.h	/^typedef struct xfs_swapext$/;"	s
xfs_swapext_t	xfs_dfrag.h	/^} xfs_swapext_t;$/;"	t	typeref:struct:xfs_swapext
xfs_symlink	xfs_trace.h	/^DEFINE_NAMESPACE_EVENT(xfs_symlink);$/;"	v
xfs_symlink	xfs_vnodeops.c	/^xfs_symlink($/;"	f
xfs_symlink_inode_operations	xfs_iops.c	/^static const struct inode_operations xfs_symlink_inode_operations = {$/;"	v	typeref:struct:inode_operations	file:
xfs_sync_attr	xfs_sync.c	/^xfs_sync_attr($/;"	f
xfs_sync_data	xfs_sync.c	/^xfs_sync_data($/;"	f
xfs_sync_fsdata	xfs_sync.c	/^xfs_sync_fsdata($/;"	f
xfs_sync_inode_attr	xfs_sync.c	/^xfs_sync_inode_attr($/;"	f
xfs_sync_inode_data	xfs_sync.c	/^xfs_sync_inode_data($/;"	f
xfs_sync_worker	xfs_sync.c	/^xfs_sync_worker($/;"	f
xfs_syncd_centisecs	xfs_linux.h	110;"	d
xfs_syncd_init	xfs_sync.c	/^xfs_syncd_init($/;"	f
xfs_syncd_queue_reclaim	xfs_sync.c	/^xfs_syncd_queue_reclaim($/;"	f	file:
xfs_syncd_queue_sync	xfs_sync.c	/^xfs_syncd_queue_sync($/;"	f	file:
xfs_syncd_stop	xfs_sync.c	/^xfs_syncd_stop($/;"	f
xfs_syncd_wq	xfs_sync.c	/^struct workqueue_struct	*xfs_syncd_wq;	\/* sync workqueue *\/$/;"	v	typeref:struct:workqueue_struct
xfs_synchronize_times	xfs_iops.c	/^xfs_synchronize_times($/;"	f
xfs_sysctl_register	xfs_sysctl.c	/^xfs_sysctl_register(void)$/;"	f
xfs_sysctl_register	xfs_sysctl.h	98;"	d
xfs_sysctl_unregister	xfs_sysctl.c	/^xfs_sysctl_unregister(void)$/;"	f
xfs_sysctl_unregister	xfs_sysctl.h	99;"	d
xfs_sysctl_val	xfs_sysctl.h	/^typedef struct xfs_sysctl_val {$/;"	s
xfs_sysctl_val_t	xfs_sysctl.h	/^} xfs_sysctl_val_t;$/;"	t	typeref:struct:xfs_sysctl_val
xfs_table	xfs_sysctl.c	/^static ctl_table xfs_table[] = {$/;"	v	file:
xfs_table_header	xfs_sysctl.c	/^static struct ctl_table_header *xfs_table_header;$/;"	v	typeref:struct:ctl_table_header	file:
xfs_test_for_freeze	xfs_mount.h	313;"	d
xfs_this_quota_on	xfs_dquot.h	/^static inline int xfs_this_quota_on(struct xfs_mount *mp, int type)$/;"	f
xfs_tid_t	xfs_types.h	/^typedef	__int32_t	xfs_tid_t;	\/* transaction identifier *\/$/;"	t
xfs_timestamp	xfs_dinode.h	/^typedef struct xfs_timestamp {$/;"	s
xfs_timestamp_t	xfs_dinode.h	/^} xfs_timestamp_t;$/;"	t	typeref:struct:xfs_timestamp
xfs_tosspages	xfs_fs_subr.c	/^xfs_tosspages($/;"	f
xfs_trans	xfs_trans.h	/^typedef struct xfs_trans {$/;"	s
xfs_trans_add_item	xfs_trans.c	/^xfs_trans_add_item($/;"	f
xfs_trans_agblocks_delta	xfs_trans.h	437;"	d
xfs_trans_agblocks_delta	xfs_trans.h	441;"	d
xfs_trans_agbtree_delta	xfs_trans.h	439;"	d
xfs_trans_agbtree_delta	xfs_trans.h	443;"	d
xfs_trans_agflist_delta	xfs_trans.h	438;"	d
xfs_trans_agflist_delta	xfs_trans.h	442;"	d
xfs_trans_ail_copy_lsn	xfs_trans_priv.h	/^xfs_trans_ail_copy_lsn($/;"	f
xfs_trans_ail_cursor_clear	xfs_trans_ail.c	/^xfs_trans_ail_cursor_clear($/;"	f
xfs_trans_ail_cursor_done	xfs_trans_ail.c	/^xfs_trans_ail_cursor_done($/;"	f
xfs_trans_ail_cursor_first	xfs_trans_ail.c	/^xfs_trans_ail_cursor_first($/;"	f
xfs_trans_ail_cursor_init	xfs_trans_ail.c	/^xfs_trans_ail_cursor_init($/;"	f
xfs_trans_ail_cursor_last	xfs_trans_ail.c	/^xfs_trans_ail_cursor_last($/;"	f
xfs_trans_ail_cursor_next	xfs_trans_ail.c	/^xfs_trans_ail_cursor_next($/;"	f
xfs_trans_ail_destroy	xfs_trans_ail.c	/^xfs_trans_ail_destroy($/;"	f
xfs_trans_ail_init	xfs_trans_ail.c	/^xfs_trans_ail_init($/;"	f
xfs_trans_alloc	xfs_trans.c	/^xfs_trans_alloc($/;"	f
xfs_trans_alloc_dqinfo	xfs_trans_dquot.c	/^xfs_trans_alloc_dqinfo($/;"	f
xfs_trans_apply_dquot_deltas	xfs_quota.h	345;"	d
xfs_trans_apply_dquot_deltas	xfs_trans_dquot.c	/^xfs_trans_apply_dquot_deltas($/;"	f
xfs_trans_apply_sb_deltas	xfs_trans.c	/^xfs_trans_apply_sb_deltas($/;"	f
xfs_trans_bhold	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_bhold);$/;"	v
xfs_trans_bhold	xfs_trans_buf.c	/^xfs_trans_bhold(xfs_trans_t	*tp,$/;"	f
xfs_trans_bhold_release	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_bhold_release);$/;"	v
xfs_trans_bhold_release	xfs_trans_buf.c	/^xfs_trans_bhold_release(xfs_trans_t	*tp,$/;"	f
xfs_trans_binval	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_binval);$/;"	v
xfs_trans_binval	xfs_trans_buf.c	/^xfs_trans_binval($/;"	f
xfs_trans_bjoin	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_bjoin);$/;"	v
xfs_trans_bjoin	xfs_trans_buf.c	/^xfs_trans_bjoin($/;"	f
xfs_trans_brelse	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_brelse);$/;"	v
xfs_trans_brelse	xfs_trans_buf.c	/^xfs_trans_brelse(xfs_trans_t	*tp,$/;"	f
xfs_trans_buf_item_match	xfs_trans_buf.c	/^xfs_trans_buf_item_match($/;"	f
xfs_trans_callback_t	xfs_trans.h	/^typedef void (*xfs_trans_callback_t)(struct xfs_trans *, void *);$/;"	t
xfs_trans_cancel	xfs_trans.c	/^xfs_trans_cancel($/;"	f
xfs_trans_commit	xfs_trans.c	/^xfs_trans_commit($/;"	f
xfs_trans_committed_bulk	xfs_trans.c	/^xfs_trans_committed_bulk($/;"	f
xfs_trans_del_item	xfs_trans.c	/^xfs_trans_del_item($/;"	f
xfs_trans_dqjoin	xfs_trans_dquot.c	/^xfs_trans_dqjoin($/;"	f
xfs_trans_dqlockedjoin	xfs_trans_dquot.c	/^xfs_trans_dqlockedjoin($/;"	f
xfs_trans_dqresv	xfs_trans_dquot.c	/^xfs_trans_dqresv($/;"	f
xfs_trans_dquot_buf	xfs_trans_buf.c	/^xfs_trans_dquot_buf($/;"	f
xfs_trans_dup	xfs_trans.c	/^xfs_trans_dup($/;"	f
xfs_trans_dup_dqinfo	xfs_quota.h	342;"	d
xfs_trans_dup_dqinfo	xfs_trans_dquot.c	/^xfs_trans_dup_dqinfo($/;"	f
xfs_trans_free	xfs_trans.c	/^xfs_trans_free($/;"	f
xfs_trans_free_dqinfo	xfs_quota.h	343;"	d
xfs_trans_free_dqinfo	xfs_trans_dquot.c	/^xfs_trans_free_dqinfo($/;"	f
xfs_trans_free_item_desc	xfs_trans.c	/^xfs_trans_free_item_desc($/;"	f
xfs_trans_free_items	xfs_trans.c	/^xfs_trans_free_items($/;"	f
xfs_trans_get_block_res	xfs_trans.h	433;"	d
xfs_trans_get_buf	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_get_buf);$/;"	v
xfs_trans_get_buf	xfs_trans_buf.c	/^xfs_trans_get_buf(xfs_trans_t	*tp,$/;"	f
xfs_trans_get_buf_recur	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_get_buf_recur);$/;"	v
xfs_trans_get_dqtrx	xfs_trans_dquot.c	/^xfs_trans_get_dqtrx($/;"	f
xfs_trans_get_efd	xfs_trans_extfree.c	/^xfs_trans_get_efd(xfs_trans_t		*tp,$/;"	f
xfs_trans_get_efi	xfs_trans_extfree.c	/^xfs_trans_get_efi(xfs_trans_t	*tp,$/;"	f
xfs_trans_get_log_count	xfs_trans.h	432;"	d
xfs_trans_get_log_res	xfs_trans.h	431;"	d
xfs_trans_get_qoff_item	xfs_trans_dquot.c	/^xfs_trans_get_qoff_item($/;"	f
xfs_trans_getsb	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_getsb);$/;"	v
xfs_trans_getsb	xfs_trans_buf.c	/^xfs_trans_getsb(xfs_trans_t	*tp,$/;"	f
xfs_trans_getsb_recur	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_getsb_recur);$/;"	v
xfs_trans_header	xfs_trans.h	/^typedef struct xfs_trans_header {$/;"	s
xfs_trans_header_t	xfs_trans.h	/^} xfs_trans_header_t;$/;"	t	typeref:struct:xfs_trans_header
xfs_trans_ichgtime	xfs_trans_inode.c	/^xfs_trans_ichgtime($/;"	f
xfs_trans_ijoin	xfs_trans_inode.c	/^xfs_trans_ijoin($/;"	f
xfs_trans_init	xfs_trans.c	/^xfs_trans_init($/;"	f
xfs_trans_inode_alloc_buf	xfs_trans_buf.c	/^xfs_trans_inode_alloc_buf($/;"	f
xfs_trans_inode_broot_debug	xfs_trans_inode.c	/^xfs_trans_inode_broot_debug($/;"	f
xfs_trans_inode_broot_debug	xfs_trans_inode.c	43;"	d	file:
xfs_trans_inode_buf	xfs_trans_buf.c	/^xfs_trans_inode_buf($/;"	f
xfs_trans_log_buf	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_log_buf);$/;"	v
xfs_trans_log_buf	xfs_trans_buf.c	/^xfs_trans_log_buf(xfs_trans_t	*tp,$/;"	f
xfs_trans_log_dquot	xfs_trans_dquot.c	/^xfs_trans_log_dquot($/;"	f
xfs_trans_log_efd_extent	xfs_trans_extfree.c	/^xfs_trans_log_efd_extent(xfs_trans_t		*tp,$/;"	f
xfs_trans_log_efi_extent	xfs_trans_extfree.c	/^xfs_trans_log_efi_extent(xfs_trans_t		*tp,$/;"	f
xfs_trans_log_inode	xfs_trans_inode.c	/^xfs_trans_log_inode($/;"	f
xfs_trans_log_quotaoff_item	xfs_trans_dquot.c	/^xfs_trans_log_quotaoff_item($/;"	f
xfs_trans_mod_dquot	xfs_trans_dquot.c	/^xfs_trans_mod_dquot($/;"	f
xfs_trans_mod_dquot_byino	xfs_quota.h	344;"	d
xfs_trans_mod_dquot_byino	xfs_trans_dquot.c	/^xfs_trans_mod_dquot_byino($/;"	f
xfs_trans_mod_sb	xfs_trans.c	/^xfs_trans_mod_sb($/;"	f
xfs_trans_read_buf	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_read_buf);$/;"	v
xfs_trans_read_buf	xfs_trans_buf.c	/^xfs_trans_read_buf($/;"	f
xfs_trans_read_buf_io	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_trans_read_buf_io);$/;"	v
xfs_trans_read_buf_recur	xfs_trace.h	/^DEFINE_BUF_ITEM_EVENT(xfs_trans_read_buf_recur);$/;"	v
xfs_trans_read_buf_shut	xfs_trace.h	/^DEFINE_BUF_EVENT(xfs_trans_read_buf_shut);$/;"	v
xfs_trans_reservations	xfs_mount.h	/^typedef struct xfs_trans_reservations {$/;"	s
xfs_trans_reservations_t	xfs_mount.h	/^} xfs_trans_reservations_t;$/;"	t	typeref:struct:xfs_trans_reservations
xfs_trans_reserve	xfs_trans.c	/^xfs_trans_reserve($/;"	f
xfs_trans_reserve_quota	xfs_quota.h	375;"	d
xfs_trans_reserve_quota_bydquots	xfs_quota.h	/^static inline int xfs_trans_reserve_quota_bydquots(struct xfs_trans *tp,$/;"	f
xfs_trans_reserve_quota_bydquots	xfs_trans_dquot.c	/^xfs_trans_reserve_quota_bydquots($/;"	f
xfs_trans_reserve_quota_nblks	xfs_quota.h	/^static inline int xfs_trans_reserve_quota_nblks(struct xfs_trans *tp,$/;"	f
xfs_trans_reserve_quota_nblks	xfs_trans_dquot.c	/^xfs_trans_reserve_quota_nblks($/;"	f
xfs_trans_roll	xfs_trans.c	/^xfs_trans_roll($/;"	f
xfs_trans_set_sync	xfs_trans.h	434;"	d
xfs_trans_stale_inode_buf	xfs_trans_buf.c	/^xfs_trans_stale_inode_buf($/;"	f
xfs_trans_t	xfs_trans.h	/^} xfs_trans_t;$/;"	t	typeref:struct:xfs_trans
xfs_trans_unreserve_and_mod_dquots	xfs_quota.h	346;"	d
xfs_trans_unreserve_and_mod_dquots	xfs_trans_dquot.c	/^xfs_trans_unreserve_and_mod_dquots($/;"	f
xfs_trans_unreserve_and_mod_sb	xfs_trans.c	/^xfs_trans_unreserve_and_mod_sb($/;"	f
xfs_trans_unreserve_quota_nblks	xfs_quota.h	373;"	d
xfs_trans_zone	xfs_trans.c	/^kmem_zone_t	*xfs_trans_zone;$/;"	v
xfs_trim_extents	xfs_discard.c	/^xfs_trim_extents($/;"	f
xfs_ufsize_t	xfs_types.h	/^typedef __uint64_t	xfs_ufsize_t;	\/* unsigned bytes in a file *\/$/;"	t
xfs_unmountfs	xfs_mount.c	/^xfs_unmountfs($/;"	f
xfs_unmountfs_writesb	xfs_mount.c	/^xfs_unmountfs_writesb(xfs_mount_t *mp)$/;"	f
xfs_unwritten_convert	xfs_trace.h	/^DEFINE_SIMPLE_IO_EVENT(xfs_unwritten_convert);$/;"	v
xfs_update_alignment	xfs_mount.c	/^xfs_update_alignment(xfs_mount_t *mp)$/;"	f
xfs_uu_t	uuid.c	/^} xfs_uu_t;$/;"	t	typeref:struct:__anon2	file:
xfs_uuid_mount	xfs_mount.c	/^xfs_uuid_mount($/;"	f
xfs_uuid_table	xfs_mount.c	/^static uuid_t *xfs_uuid_table;$/;"	v	file:
xfs_uuid_table_size	xfs_mount.c	/^static int xfs_uuid_table_size;$/;"	v	file:
xfs_uuid_unmount	xfs_mount.c	/^xfs_uuid_unmount($/;"	f
xfs_validate_extents	xfs_inode.c	/^xfs_validate_extents($/;"	f
xfs_validate_extents	xfs_inode.c	89;"	d	file:
xfs_vm_bmap	xfs_aops.c	/^xfs_vm_bmap($/;"	f
xfs_vm_bmap	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_vm_bmap);$/;"	v
xfs_vm_direct_IO	xfs_aops.c	/^xfs_vm_direct_IO($/;"	f
xfs_vm_invalidatepage	xfs_aops.c	/^xfs_vm_invalidatepage($/;"	f
xfs_vm_page_mkwrite	xfs_file.c	/^xfs_vm_page_mkwrite($/;"	f
xfs_vm_readpage	xfs_aops.c	/^xfs_vm_readpage($/;"	f
xfs_vm_readpages	xfs_aops.c	/^xfs_vm_readpages($/;"	f
xfs_vm_releasepage	xfs_aops.c	/^xfs_vm_releasepage($/;"	f
xfs_vm_write_begin	xfs_aops.c	/^xfs_vm_write_begin($/;"	f
xfs_vm_write_end	xfs_aops.c	/^xfs_vm_write_end($/;"	f
xfs_vm_write_failed	xfs_aops.c	/^xfs_vm_write_failed($/;"	f
xfs_vm_writepage	xfs_aops.c	/^xfs_vm_writepage($/;"	f
xfs_vm_writepages	xfs_aops.c	/^xfs_vm_writepages($/;"	f
xfs_vn_ci_lookup	xfs_iops.c	/^xfs_vn_ci_lookup($/;"	f
xfs_vn_create	xfs_iops.c	/^xfs_vn_create($/;"	f
xfs_vn_fiemap	xfs_iops.c	/^xfs_vn_fiemap($/;"	f
xfs_vn_follow_link	xfs_iops.c	/^xfs_vn_follow_link($/;"	f
xfs_vn_getattr	xfs_iops.c	/^xfs_vn_getattr($/;"	f
xfs_vn_link	xfs_iops.c	/^xfs_vn_link($/;"	f
xfs_vn_listxattr	xfs_xattr.c	/^xfs_vn_listxattr(struct dentry *dentry, char *data, size_t size)$/;"	f
xfs_vn_lookup	xfs_iops.c	/^xfs_vn_lookup($/;"	f
xfs_vn_mkdir	xfs_iops.c	/^xfs_vn_mkdir($/;"	f
xfs_vn_mknod	xfs_iops.c	/^xfs_vn_mknod($/;"	f
xfs_vn_put_link	xfs_iops.c	/^xfs_vn_put_link($/;"	f
xfs_vn_rename	xfs_iops.c	/^xfs_vn_rename($/;"	f
xfs_vn_setattr	xfs_iops.c	/^xfs_vn_setattr($/;"	f
xfs_vn_symlink	xfs_iops.c	/^xfs_vn_symlink($/;"	f
xfs_vn_unlink	xfs_iops.c	/^xfs_vn_unlink($/;"	f
xfs_wait_buftarg	xfs_buf.c	/^xfs_wait_buftarg($/;"	f
xfs_wait_for_freeze	xfs_mount.h	314;"	d
xfs_wait_on_pages	xfs_fs_subr.c	/^xfs_wait_on_pages($/;"	f
xfs_write_inode	xfs_trace.h	/^DEFINE_INODE_EVENT(xfs_write_inode);$/;"	v
xfs_writepage	xfs_trace.h	/^DEFINE_PAGE_EVENT(xfs_writepage);$/;"	v
xfs_xattr_acl_access_handler	xfs_acl.c	/^const struct xattr_handler xfs_xattr_acl_access_handler = {$/;"	v	typeref:struct:xattr_handler
xfs_xattr_acl_default_handler	xfs_acl.c	/^const struct xattr_handler xfs_xattr_acl_default_handler = {$/;"	v	typeref:struct:xattr_handler
xfs_xattr_acl_get	xfs_acl.c	/^xfs_xattr_acl_get(struct dentry *dentry, const char *name,$/;"	f	file:
xfs_xattr_acl_set	xfs_acl.c	/^xfs_xattr_acl_set(struct dentry *dentry, const char *name,$/;"	f	file:
xfs_xattr_get	xfs_xattr.c	/^xfs_xattr_get(struct dentry *dentry, const char *name,$/;"	f	file:
xfs_xattr_handlers	xfs_xattr.c	/^const struct xattr_handler *xfs_xattr_handlers[] = {$/;"	v	typeref:struct:xattr_handler
xfs_xattr_prefix	xfs_xattr.c	/^static const char *xfs_xattr_prefix(int flags)$/;"	f	file:
xfs_xattr_prefix_len	xfs_xattr.c	/^static unsigned int xfs_xattr_prefix_len(int flags)$/;"	f	file:
xfs_xattr_put_listent	xfs_xattr.c	/^xfs_xattr_put_listent($/;"	f	file:
xfs_xattr_put_listent_sizes	xfs_xattr.c	/^xfs_xattr_put_listent_sizes($/;"	f	file:
xfs_xattr_security_handler	xfs_xattr.c	/^static const struct xattr_handler xfs_xattr_security_handler = {$/;"	v	typeref:struct:xattr_handler	file:
xfs_xattr_set	xfs_xattr.c	/^xfs_xattr_set(struct dentry *dentry, const char *name, const void *value,$/;"	f	file:
xfs_xattr_trusted_handler	xfs_xattr.c	/^static const struct xattr_handler xfs_xattr_trusted_handler = {$/;"	v	typeref:struct:xattr_handler	file:
xfs_xattr_user_handler	xfs_xattr.c	/^static const struct xattr_handler xfs_xattr_user_handler = {$/;"	v	typeref:struct:xattr_handler	file:
xfs_zero_eof	xfs_file.c	/^xfs_zero_eof($/;"	f
xfs_zero_last_block	xfs_file.c	/^xfs_zero_last_block($/;"	f
xfs_zero_remaining_bytes	xfs_vnodeops.c	/^xfs_zero_remaining_bytes($/;"	f
xfsaild	xfs_trans_ail.c	/^xfsaild($/;"	f	file:
xfsaild_push	xfs_trans_ail.c	/^xfsaild_push($/;"	f	file:
xfsbdstrat	xfs_buf.c	/^xfsbdstrat($/;"	f
xfsbufd	xfs_buf.c	/^xfsbufd($/;"	f
xfsconvertd_workqueue	xfs_buf.c	/^struct workqueue_struct *xfsconvertd_workqueue;$/;"	v	typeref:struct:workqueue_struct
xfsdatad_workqueue	xfs_buf.c	/^struct workqueue_struct *xfsdatad_workqueue;$/;"	v	typeref:struct:workqueue_struct
xfslogd_workqueue	xfs_buf.c	/^static struct workqueue_struct *xfslogd_workqueue;$/;"	v	typeref:struct:workqueue_struct	file:
xfsstats	xfs_stats.h	/^struct xfsstats {$/;"	s
xh_cycle	xfs_log_priv.h	/^	__be32	  xh_cycle;	\/* write cycle of log			: 4 *\/$/;"	m	struct:xlog_rec_ext_header
xh_cycle_data	xfs_log_priv.h	/^	__be32	  xh_cycle_data[XLOG_HEADER_CYCLE_SIZE \/ BBSIZE]; \/*	: 256 *\/$/;"	m	struct:xlog_rec_ext_header
xi_alloccount	xfs_fs.h	/^	__s32		xi_alloccount;	\/* # bits set in allocmask	*\/$/;"	m	struct:xfs_inogrp
xi_alloccount	xfs_ioctl32.h	/^	__s32		xi_alloccount;	\/* # bits set in allocmask	*\/$/;"	m	struct:compat_xfs_inogrp
xi_allocmask	xfs_fs.h	/^	__u64		xi_allocmask;	\/* mask of allocated inodes	*\/$/;"	m	struct:xfs_inogrp
xi_allocmask	xfs_ioctl32.h	/^	__u64		xi_allocmask;	\/* mask of allocated inodes	*\/$/;"	m	struct:compat_xfs_inogrp
xi_startino	xfs_fs.h	/^	__u64		xi_startino;	\/* starting inode number	*\/$/;"	m	struct:xfs_inogrp
xi_startino	xfs_ioctl32.h	/^	__u64		xi_startino;	\/* starting inode number	*\/$/;"	m	struct:compat_xfs_inogrp
xlog_add_record	xfs_log_recover.c	/^xlog_add_record($/;"	f
xlog_align	xfs_log_recover.c	/^xlog_align($/;"	f
xlog_alloc_log	xfs_log.c	/^xlog_alloc_log(xfs_mount_t	*mp,$/;"	f
xlog_assign_atomic_lsn	xfs_log_priv.h	/^xlog_assign_atomic_lsn(atomic64_t *lsn, uint cycle, uint block)$/;"	f
xlog_assign_grant_head	xfs_log_priv.h	/^xlog_assign_grant_head(atomic64_t *head, int cycle, int space)$/;"	f
xlog_assign_grant_head_val	xfs_log_priv.h	/^xlog_assign_grant_head_val(int cycle, int space)$/;"	f
xlog_assign_lsn	xfs_log_priv.h	/^static inline xfs_lsn_t xlog_assign_lsn(uint cycle, uint block)$/;"	f
xlog_assign_tail_lsn	xfs_log.c	/^xlog_assign_tail_lsn($/;"	f
xlog_bdstrat	xfs_log.c	/^xlog_bdstrat($/;"	f
xlog_bread	xfs_log_recover.c	/^xlog_bread($/;"	f
xlog_bread_noalign	xfs_log_recover.c	/^xlog_bread_noalign($/;"	f
xlog_bread_offset	xfs_log_recover.c	/^xlog_bread_offset($/;"	f
xlog_buf_bbcount_valid	xfs_log_recover.c	/^xlog_buf_bbcount_valid($/;"	f	file:
xlog_bwrite	xfs_log_recover.c	/^xlog_bwrite($/;"	f
xlog_check_buffer_cancelled	xfs_log_recover.c	/^xlog_check_buffer_cancelled($/;"	f
xlog_cil_committed	xfs_log_cil.c	/^xlog_cil_committed($/;"	f	file:
xlog_cil_destroy	xfs_log_cil.c	/^xlog_cil_destroy($/;"	f
xlog_cil_force	xfs_log_priv.h	/^xlog_cil_force(struct log *log)$/;"	f
xlog_cil_force_lsn	xfs_log_cil.c	/^xlog_cil_force_lsn($/;"	f
xlog_cil_free_logvec	xfs_log_cil.c	/^xlog_cil_free_logvec($/;"	f	file:
xlog_cil_init	xfs_log_cil.c	/^xlog_cil_init($/;"	f
xlog_cil_init_post_recovery	xfs_log_cil.c	/^xlog_cil_init_post_recovery($/;"	f
xlog_cil_insert_items	xfs_log_cil.c	/^xlog_cil_insert_items($/;"	f	file:
xlog_cil_prepare_log_vecs	xfs_log_cil.c	/^xlog_cil_prepare_log_vecs($/;"	f	file:
xlog_cil_push	xfs_log_cil.c	/^xlog_cil_push($/;"	f
xlog_cil_ticket_alloc	xfs_log_cil.c	/^xlog_cil_ticket_alloc($/;"	f	file:
xlog_clear_stale_blocks	xfs_log_recover.c	/^xlog_clear_stale_blocks($/;"	f
xlog_commit_record	xfs_log.c	/^xlog_commit_record($/;"	f
xlog_crack_atomic_lsn	xfs_log_priv.h	/^xlog_crack_atomic_lsn(atomic64_t *lsn, uint *cycle, uint *block)$/;"	f
xlog_crack_grant_head	xfs_log_priv.h	/^xlog_crack_grant_head(atomic64_t *head, int *cycle, int *space)$/;"	f
xlog_crack_grant_head_val	xfs_log_priv.h	/^xlog_crack_grant_head_val(int64_t val, int *cycle, int *space)$/;"	f
xlog_dealloc_log	xfs_log.c	/^xlog_dealloc_log(xlog_t *log)$/;"	f
xlog_do_log_recovery	xfs_log_recover.c	/^xlog_do_log_recovery($/;"	f
xlog_do_recover	xfs_log_recover.c	/^xlog_do_recover($/;"	f
xlog_do_recovery_pass	xfs_log_recover.c	/^xlog_do_recovery_pass($/;"	f
xlog_find_cycle_start	xfs_log_recover.c	/^xlog_find_cycle_start($/;"	f
xlog_find_head	xfs_log_recover.c	/^xlog_find_head($/;"	f
xlog_find_tail	xfs_log_recover.c	/^xlog_find_tail($/;"	f
xlog_find_verify_cycle	xfs_log_recover.c	/^xlog_find_verify_cycle($/;"	f
xlog_find_verify_log_record	xfs_log_recover.c	/^xlog_find_verify_log_record($/;"	f
xlog_find_zeroed	xfs_log_recover.c	/^xlog_find_zeroed($/;"	f
xlog_get_bp	xfs_log_recover.c	/^xlog_get_bp($/;"	f
xlog_get_client_id	xfs_log_priv.h	/^static inline uint xlog_get_client_id(__be32 i)$/;"	f
xlog_get_cycle	xfs_log_priv.h	/^static inline uint xlog_get_cycle(char *ptr)$/;"	f
xlog_get_iclog_buffer_size	xfs_log.c	/^xlog_get_iclog_buffer_size(xfs_mount_t	*mp,$/;"	f
xlog_get_lowest_lsn	xfs_log.c	/^xlog_get_lowest_lsn($/;"	f
xlog_grant_add_space	xfs_log.c	/^xlog_grant_add_space($/;"	f	file:
xlog_grant_head	xfs_log_priv.h	/^struct xlog_grant_head {$/;"	s
xlog_grant_head_check	xfs_log.c	/^xlog_grant_head_check($/;"	f
xlog_grant_head_init	xfs_log.c	/^xlog_grant_head_init($/;"	f
xlog_grant_head_wait	xfs_log.c	/^xlog_grant_head_wait($/;"	f
xlog_grant_head_wake	xfs_log.c	/^xlog_grant_head_wake($/;"	f
xlog_grant_head_wake_all	xfs_log.c	/^xlog_grant_head_wake_all($/;"	f
xlog_grant_push_ail	xfs_log.c	/^xlog_grant_push_ail($/;"	f
xlog_grant_sub_space	xfs_log.c	/^xlog_grant_sub_space($/;"	f	file:
xlog_header_check_dump	xfs_log_recover.c	/^xlog_header_check_dump($/;"	f
xlog_header_check_dump	xfs_log_recover.c	292;"	d	file:
xlog_header_check_mount	xfs_log_recover.c	/^xlog_header_check_mount($/;"	f
xlog_header_check_recover	xfs_log_recover.c	/^xlog_header_check_recover($/;"	f
xlog_iclogs_empty	xfs_log.c	/^xlog_iclogs_empty(xlog_t *log)$/;"	f
xlog_in_core	xfs_log_priv.h	/^typedef struct xlog_in_core {$/;"	s
xlog_in_core2	xfs_log_priv.h	/^typedef union xlog_in_core2 {$/;"	u
xlog_in_core_2_t	xfs_log_priv.h	/^} xlog_in_core_2_t;$/;"	t	typeref:union:xlog_in_core2
xlog_in_core_t	xfs_log_priv.h	/^} xlog_in_core_t;$/;"	t	typeref:struct:xlog_in_core
xlog_iodone	xfs_log.c	/^xlog_iodone(xfs_buf_t *bp)$/;"	f
xlog_op_header	xfs_log_priv.h	/^typedef struct xlog_op_header {$/;"	s
xlog_op_header_t	xfs_log_priv.h	/^} xlog_op_header_t;$/;"	t	typeref:struct:xlog_op_header
xlog_pack_data	xfs_log_recover.c	/^xlog_pack_data($/;"	f
xlog_pack_data_checksum	xfs_log_recover.c	/^xlog_pack_data_checksum($/;"	f
xlog_pack_data_checksum	xfs_log_recover.c	3221;"	d	file:
xlog_print_tic_res	xfs_log.c	/^xlog_print_tic_res($/;"	f
xlog_put_bp	xfs_log_recover.c	/^xlog_put_bp($/;"	f
xlog_rec_ext_header	xfs_log_priv.h	/^typedef struct xlog_rec_ext_header {$/;"	s
xlog_rec_ext_header_t	xfs_log_priv.h	/^} xlog_rec_ext_header_t;$/;"	t	typeref:struct:xlog_rec_ext_header
xlog_rec_header	xfs_log_priv.h	/^typedef struct xlog_rec_header {$/;"	s
xlog_rec_header_t	xfs_log_priv.h	/^} xlog_rec_header_t;$/;"	t	typeref:struct:xlog_rec_header
xlog_recover	xfs_log_recover.c	/^xlog_recover($/;"	f
xlog_recover	xfs_log_recover.h	/^typedef struct xlog_recover {$/;"	s
xlog_recover_add_item	xfs_log_recover.c	/^xlog_recover_add_item($/;"	f
xlog_recover_add_to_cont_trans	xfs_log_recover.c	/^xlog_recover_add_to_cont_trans($/;"	f
xlog_recover_add_to_trans	xfs_log_recover.c	/^xlog_recover_add_to_trans($/;"	f
xlog_recover_buffer_pass1	xfs_log_recover.c	/^xlog_recover_buffer_pass1($/;"	f
xlog_recover_buffer_pass2	xfs_log_recover.c	/^xlog_recover_buffer_pass2($/;"	f
xlog_recover_check_summary	xfs_log_recover.c	/^xlog_recover_check_summary($/;"	f
xlog_recover_check_summary	xfs_log_recover.c	52;"	d	file:
xlog_recover_clear_agi_bucket	xfs_log_recover.c	/^xlog_recover_clear_agi_bucket($/;"	f
xlog_recover_commit_pass1	xfs_log_recover.c	/^xlog_recover_commit_pass1($/;"	f
xlog_recover_commit_pass2	xfs_log_recover.c	/^xlog_recover_commit_pass2($/;"	f
xlog_recover_commit_trans	xfs_log_recover.c	/^xlog_recover_commit_trans($/;"	f
xlog_recover_do_dquot_buffer	xfs_log_recover.c	/^xlog_recover_do_dquot_buffer($/;"	f
xlog_recover_do_inode_buffer	xfs_log_recover.c	/^xlog_recover_do_inode_buffer($/;"	f
xlog_recover_do_reg_buffer	xfs_log_recover.c	/^xlog_recover_do_reg_buffer($/;"	f
xlog_recover_dquot_pass2	xfs_log_recover.c	/^xlog_recover_dquot_pass2($/;"	f
xlog_recover_efd_pass2	xfs_log_recover.c	/^xlog_recover_efd_pass2($/;"	f
xlog_recover_efi_pass2	xfs_log_recover.c	/^xlog_recover_efi_pass2($/;"	f
xlog_recover_find_tid	xfs_log_recover.c	/^xlog_recover_find_tid($/;"	f
xlog_recover_finish	xfs_log_recover.c	/^xlog_recover_finish($/;"	f
xlog_recover_free_trans	xfs_log_recover.c	/^xlog_recover_free_trans($/;"	f
xlog_recover_inode_pass2	xfs_log_recover.c	/^xlog_recover_inode_pass2($/;"	f
xlog_recover_iodone	xfs_log_recover.c	/^xlog_recover_iodone($/;"	f
xlog_recover_item	xfs_log_recover.h	/^typedef struct xlog_recover_item {$/;"	s
xlog_recover_item_t	xfs_log_recover.h	/^} xlog_recover_item_t;$/;"	t	typeref:struct:xlog_recover_item
xlog_recover_new_tid	xfs_log_recover.c	/^xlog_recover_new_tid($/;"	f
xlog_recover_process_data	xfs_log_recover.c	/^xlog_recover_process_data($/;"	f
xlog_recover_process_efi	xfs_log_recover.c	/^xlog_recover_process_efi($/;"	f
xlog_recover_process_efis	xfs_log_recover.c	/^xlog_recover_process_efis($/;"	f
xlog_recover_process_iunlinks	xfs_log_recover.c	/^xlog_recover_process_iunlinks($/;"	f
xlog_recover_process_one_iunlink	xfs_log_recover.c	/^xlog_recover_process_one_iunlink($/;"	f
xlog_recover_quotaoff_pass1	xfs_log_recover.c	/^xlog_recover_quotaoff_pass1($/;"	f
xlog_recover_reorder_trans	xfs_log_recover.c	/^xlog_recover_reorder_trans($/;"	f
xlog_recover_t	xfs_log_recover.h	/^} xlog_recover_t;$/;"	t	typeref:struct:xlog_recover
xlog_recover_unmount_trans	xfs_log_recover.c	/^xlog_recover_unmount_trans($/;"	f
xlog_regrant_reserve_log_space	xfs_log.c	/^xlog_regrant_reserve_log_space(xlog_t	     *log,$/;"	f
xlog_res	xfs_log_priv.h	/^typedef struct xlog_res {$/;"	s
xlog_res_t	xfs_log_priv.h	/^} xlog_res_t;$/;"	t	typeref:struct:xlog_res
xlog_space_left	xfs_log.c	/^xlog_space_left($/;"	f
xlog_state_clean_log	xfs_log.c	/^xlog_state_clean_log(xlog_t *log)$/;"	f
xlog_state_do_callback	xfs_log.c	/^xlog_state_do_callback($/;"	f
xlog_state_done_syncing	xfs_log.c	/^xlog_state_done_syncing($/;"	f
xlog_state_finish_copy	xfs_log.c	/^xlog_state_finish_copy(xlog_t		*log,$/;"	f	file:
xlog_state_get_iclog_space	xfs_log.c	/^xlog_state_get_iclog_space(xlog_t	  *log,$/;"	f
xlog_state_ioerror	xfs_log.c	/^xlog_state_ioerror($/;"	f
xlog_state_release_iclog	xfs_log.c	/^xlog_state_release_iclog($/;"	f
xlog_state_switch_iclogs	xfs_log.c	/^xlog_state_switch_iclogs(xlog_t		*log,$/;"	f
xlog_state_want_sync	xfs_log.c	/^xlog_state_want_sync(xlog_t *log, xlog_in_core_t *iclog)$/;"	f
xlog_sync	xfs_log.c	/^xlog_sync(xlog_t		*log,$/;"	f
xlog_t	xfs_log_priv.h	/^} xlog_t;$/;"	t	typeref:struct:log
xlog_tic_add_region	xfs_log.c	/^xlog_tic_add_region(xlog_ticket_t *tic, uint len, uint type)$/;"	f	file:
xlog_tic_reset_res	xfs_log.c	/^xlog_tic_reset_res(xlog_ticket_t *tic)$/;"	f	file:
xlog_ticket	xfs_log_priv.h	/^typedef struct xlog_ticket {$/;"	s
xlog_ticket_alloc	xfs_log.c	/^xlog_ticket_alloc($/;"	f
xlog_ticket_reservation	xfs_log.c	/^xlog_ticket_reservation($/;"	f	file:
xlog_ticket_t	xfs_log_priv.h	/^} xlog_ticket_t;$/;"	t	typeref:struct:xlog_ticket
xlog_tid_t	xfs_log_priv.h	/^typedef __uint32_t xlog_tid_t;$/;"	t
xlog_ungrant_log_space	xfs_log.c	/^xlog_ungrant_log_space(xlog_t	     *log,$/;"	f
xlog_unpack_data	xfs_log_recover.c	/^xlog_unpack_data($/;"	f
xlog_valid_rec_header	xfs_log_recover.c	/^xlog_valid_rec_header($/;"	f
xlog_verify_dest_ptr	xfs_log.c	/^xlog_verify_dest_ptr($/;"	f
xlog_verify_dest_ptr	xfs_log.c	85;"	d	file:
xlog_verify_grant_tail	xfs_log.c	/^xlog_verify_grant_tail($/;"	f
xlog_verify_grant_tail	xfs_log.c	86;"	d	file:
xlog_verify_iclog	xfs_log.c	/^xlog_verify_iclog(xlog_t	 *log,$/;"	f
xlog_verify_iclog	xfs_log.c	87;"	d	file:
xlog_verify_tail_lsn	xfs_log.c	/^xlog_verify_tail_lsn(xlog_t	    *log,$/;"	f
xlog_verify_tail_lsn	xfs_log.c	88;"	d	file:
xlog_wait	xfs_log_priv.h	/^static inline void xlog_wait(wait_queue_head_t *wq, spinlock_t *lock)$/;"	f
xlog_write	xfs_log.c	/^xlog_write($/;"	f
xlog_write_adv_cnt	xfs_log_priv.h	/^xlog_write_adv_cnt(void **ptr, int *len, int *off, size_t bytes)$/;"	f
xlog_write_calc_vec_length	xfs_log.c	/^xlog_write_calc_vec_length($/;"	f	file:
xlog_write_copy_finish	xfs_log.c	/^xlog_write_copy_finish($/;"	f	file:
xlog_write_log_records	xfs_log_recover.c	/^xlog_write_log_records($/;"	f
xlog_write_setup_copy	xfs_log.c	/^xlog_write_setup_copy($/;"	f	file:
xlog_write_setup_ophdr	xfs_log.c	/^xlog_write_setup_ophdr($/;"	f	file:
xlog_write_start_rec	xfs_log.c	/^xlog_write_start_rec($/;"	f	file:
xqm_proc_fops	xfs_qm_stats.c	/^static const struct file_operations xqm_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
xqm_proc_open	xfs_qm_stats.c	/^static int xqm_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
xqm_proc_show	xfs_qm_stats.c	/^static int xqm_proc_show(struct seq_file *m, void *v)$/;"	f	file:
xqmstat_proc_fops	xfs_qm_stats.c	/^static const struct file_operations xqmstat_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
xqmstat_proc_open	xfs_qm_stats.c	/^static int xqmstat_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
xqmstat_proc_show	xfs_qm_stats.c	/^static int xqmstat_proc_show(struct seq_file *m, void *v)$/;"	f	file:
xqmstats	xfs_qm_stats.c	/^struct xqmstats xqmstats;$/;"	v	typeref:struct:xqmstats
xqmstats	xfs_qm_stats.h	/^struct xqmstats {$/;"	s
xs_abt_compare	xfs_stats.h	/^	__uint32_t		xs_abt_compare;$/;"	m	struct:xfsstats
xs_abt_delrec	xfs_stats.h	/^	__uint32_t		xs_abt_delrec;$/;"	m	struct:xfsstats
xs_abt_insrec	xfs_stats.h	/^	__uint32_t		xs_abt_insrec;$/;"	m	struct:xfsstats
xs_abt_lookup	xfs_stats.h	/^	__uint32_t		xs_abt_lookup;$/;"	m	struct:xfsstats
xs_abtb_2_alloc	xfs_stats.h	/^	__uint32_t		xs_abtb_2_alloc;$/;"	m	struct:xfsstats
xs_abtb_2_compare	xfs_stats.h	/^	__uint32_t		xs_abtb_2_compare;$/;"	m	struct:xfsstats
xs_abtb_2_decrement	xfs_stats.h	/^	__uint32_t		xs_abtb_2_decrement;$/;"	m	struct:xfsstats
xs_abtb_2_delrec	xfs_stats.h	/^	__uint32_t		xs_abtb_2_delrec;$/;"	m	struct:xfsstats
xs_abtb_2_free	xfs_stats.h	/^	__uint32_t		xs_abtb_2_free;$/;"	m	struct:xfsstats
xs_abtb_2_increment	xfs_stats.h	/^	__uint32_t		xs_abtb_2_increment;$/;"	m	struct:xfsstats
xs_abtb_2_insrec	xfs_stats.h	/^	__uint32_t		xs_abtb_2_insrec;$/;"	m	struct:xfsstats
xs_abtb_2_join	xfs_stats.h	/^	__uint32_t		xs_abtb_2_join;$/;"	m	struct:xfsstats
xs_abtb_2_killroot	xfs_stats.h	/^	__uint32_t		xs_abtb_2_killroot;$/;"	m	struct:xfsstats
xs_abtb_2_lookup	xfs_stats.h	/^	__uint32_t		xs_abtb_2_lookup;$/;"	m	struct:xfsstats
xs_abtb_2_lshift	xfs_stats.h	/^	__uint32_t		xs_abtb_2_lshift;$/;"	m	struct:xfsstats
xs_abtb_2_moves	xfs_stats.h	/^	__uint32_t		xs_abtb_2_moves;$/;"	m	struct:xfsstats
xs_abtb_2_newroot	xfs_stats.h	/^	__uint32_t		xs_abtb_2_newroot;$/;"	m	struct:xfsstats
xs_abtb_2_rshift	xfs_stats.h	/^	__uint32_t		xs_abtb_2_rshift;$/;"	m	struct:xfsstats
xs_abtb_2_split	xfs_stats.h	/^	__uint32_t		xs_abtb_2_split;$/;"	m	struct:xfsstats
xs_abtc_2_alloc	xfs_stats.h	/^	__uint32_t		xs_abtc_2_alloc;$/;"	m	struct:xfsstats
xs_abtc_2_compare	xfs_stats.h	/^	__uint32_t		xs_abtc_2_compare;$/;"	m	struct:xfsstats
xs_abtc_2_decrement	xfs_stats.h	/^	__uint32_t		xs_abtc_2_decrement;$/;"	m	struct:xfsstats
xs_abtc_2_delrec	xfs_stats.h	/^	__uint32_t		xs_abtc_2_delrec;$/;"	m	struct:xfsstats
xs_abtc_2_free	xfs_stats.h	/^	__uint32_t		xs_abtc_2_free;$/;"	m	struct:xfsstats
xs_abtc_2_increment	xfs_stats.h	/^	__uint32_t		xs_abtc_2_increment;$/;"	m	struct:xfsstats
xs_abtc_2_insrec	xfs_stats.h	/^	__uint32_t		xs_abtc_2_insrec;$/;"	m	struct:xfsstats
xs_abtc_2_join	xfs_stats.h	/^	__uint32_t		xs_abtc_2_join;$/;"	m	struct:xfsstats
xs_abtc_2_killroot	xfs_stats.h	/^	__uint32_t		xs_abtc_2_killroot;$/;"	m	struct:xfsstats
xs_abtc_2_lookup	xfs_stats.h	/^	__uint32_t		xs_abtc_2_lookup;$/;"	m	struct:xfsstats
xs_abtc_2_lshift	xfs_stats.h	/^	__uint32_t		xs_abtc_2_lshift;$/;"	m	struct:xfsstats
xs_abtc_2_moves	xfs_stats.h	/^	__uint32_t		xs_abtc_2_moves;$/;"	m	struct:xfsstats
xs_abtc_2_newroot	xfs_stats.h	/^	__uint32_t		xs_abtc_2_newroot;$/;"	m	struct:xfsstats
xs_abtc_2_rshift	xfs_stats.h	/^	__uint32_t		xs_abtc_2_rshift;$/;"	m	struct:xfsstats
xs_abtc_2_split	xfs_stats.h	/^	__uint32_t		xs_abtc_2_split;$/;"	m	struct:xfsstats
xs_add_exlist	xfs_stats.h	/^	__uint32_t		xs_add_exlist;$/;"	m	struct:xfsstats
xs_allocb	xfs_stats.h	/^	__uint32_t		xs_allocb;$/;"	m	struct:xfsstats
xs_allocx	xfs_stats.h	/^	__uint32_t		xs_allocx;$/;"	m	struct:xfsstats
xs_attr_get	xfs_stats.h	/^	__uint32_t		xs_attr_get;$/;"	m	struct:xfsstats
xs_attr_list	xfs_stats.h	/^	__uint32_t		xs_attr_list;$/;"	m	struct:xfsstats
xs_attr_remove	xfs_stats.h	/^	__uint32_t		xs_attr_remove;$/;"	m	struct:xfsstats
xs_attr_set	xfs_stats.h	/^	__uint32_t		xs_attr_set;$/;"	m	struct:xfsstats
xs_blk_mapr	xfs_stats.h	/^	__uint32_t		xs_blk_mapr;$/;"	m	struct:xfsstats
xs_blk_mapw	xfs_stats.h	/^	__uint32_t		xs_blk_mapw;$/;"	m	struct:xfsstats
xs_blk_unmap	xfs_stats.h	/^	__uint32_t		xs_blk_unmap;$/;"	m	struct:xfsstats
xs_bmbt_2_alloc	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_alloc;$/;"	m	struct:xfsstats
xs_bmbt_2_compare	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_compare;$/;"	m	struct:xfsstats
xs_bmbt_2_decrement	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_decrement;$/;"	m	struct:xfsstats
xs_bmbt_2_delrec	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_delrec;$/;"	m	struct:xfsstats
xs_bmbt_2_free	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_free;$/;"	m	struct:xfsstats
xs_bmbt_2_increment	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_increment;$/;"	m	struct:xfsstats
xs_bmbt_2_insrec	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_insrec;$/;"	m	struct:xfsstats
xs_bmbt_2_join	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_join;$/;"	m	struct:xfsstats
xs_bmbt_2_killroot	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_killroot;$/;"	m	struct:xfsstats
xs_bmbt_2_lookup	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_lookup;$/;"	m	struct:xfsstats
xs_bmbt_2_lshift	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_lshift;$/;"	m	struct:xfsstats
xs_bmbt_2_moves	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_moves;$/;"	m	struct:xfsstats
xs_bmbt_2_newroot	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_newroot;$/;"	m	struct:xfsstats
xs_bmbt_2_rshift	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_rshift;$/;"	m	struct:xfsstats
xs_bmbt_2_split	xfs_stats.h	/^	__uint32_t		xs_bmbt_2_split;$/;"	m	struct:xfsstats
xs_bmbt_compare	xfs_stats.h	/^	__uint32_t		xs_bmbt_compare;$/;"	m	struct:xfsstats
xs_bmbt_delrec	xfs_stats.h	/^	__uint32_t		xs_bmbt_delrec;$/;"	m	struct:xfsstats
xs_bmbt_insrec	xfs_stats.h	/^	__uint32_t		xs_bmbt_insrec;$/;"	m	struct:xfsstats
xs_bmbt_lookup	xfs_stats.h	/^	__uint32_t		xs_bmbt_lookup;$/;"	m	struct:xfsstats
xs_cmp_exlist	xfs_stats.h	/^	__uint32_t		xs_cmp_exlist;$/;"	m	struct:xfsstats
xs_del_exlist	xfs_stats.h	/^	__uint32_t		xs_del_exlist;$/;"	m	struct:xfsstats
xs_dir_create	xfs_stats.h	/^	__uint32_t		xs_dir_create;$/;"	m	struct:xfsstats
xs_dir_getdents	xfs_stats.h	/^	__uint32_t		xs_dir_getdents;$/;"	m	struct:xfsstats
xs_dir_lookup	xfs_stats.h	/^	__uint32_t		xs_dir_lookup;$/;"	m	struct:xfsstats
xs_dir_remove	xfs_stats.h	/^	__uint32_t		xs_dir_remove;$/;"	m	struct:xfsstats
xs_freeb	xfs_stats.h	/^	__uint32_t		xs_freeb;$/;"	m	struct:xfsstats
xs_freex	xfs_stats.h	/^	__uint32_t		xs_freex;$/;"	m	struct:xfsstats
xs_ibt_2_alloc	xfs_stats.h	/^	__uint32_t		xs_ibt_2_alloc;$/;"	m	struct:xfsstats
xs_ibt_2_compare	xfs_stats.h	/^	__uint32_t		xs_ibt_2_compare;$/;"	m	struct:xfsstats
xs_ibt_2_decrement	xfs_stats.h	/^	__uint32_t		xs_ibt_2_decrement;$/;"	m	struct:xfsstats
xs_ibt_2_delrec	xfs_stats.h	/^	__uint32_t		xs_ibt_2_delrec;$/;"	m	struct:xfsstats
xs_ibt_2_free	xfs_stats.h	/^	__uint32_t		xs_ibt_2_free;$/;"	m	struct:xfsstats
xs_ibt_2_increment	xfs_stats.h	/^	__uint32_t		xs_ibt_2_increment;$/;"	m	struct:xfsstats
xs_ibt_2_insrec	xfs_stats.h	/^	__uint32_t		xs_ibt_2_insrec;$/;"	m	struct:xfsstats
xs_ibt_2_join	xfs_stats.h	/^	__uint32_t		xs_ibt_2_join;$/;"	m	struct:xfsstats
xs_ibt_2_killroot	xfs_stats.h	/^	__uint32_t		xs_ibt_2_killroot;$/;"	m	struct:xfsstats
xs_ibt_2_lookup	xfs_stats.h	/^	__uint32_t		xs_ibt_2_lookup;$/;"	m	struct:xfsstats
xs_ibt_2_lshift	xfs_stats.h	/^	__uint32_t		xs_ibt_2_lshift;$/;"	m	struct:xfsstats
xs_ibt_2_moves	xfs_stats.h	/^	__uint32_t		xs_ibt_2_moves;$/;"	m	struct:xfsstats
xs_ibt_2_newroot	xfs_stats.h	/^	__uint32_t		xs_ibt_2_newroot;$/;"	m	struct:xfsstats
xs_ibt_2_rshift	xfs_stats.h	/^	__uint32_t		xs_ibt_2_rshift;$/;"	m	struct:xfsstats
xs_ibt_2_split	xfs_stats.h	/^	__uint32_t		xs_ibt_2_split;$/;"	m	struct:xfsstats
xs_icluster_flushcnt	xfs_stats.h	/^	__uint32_t		xs_icluster_flushcnt;$/;"	m	struct:xfsstats
xs_icluster_flushinode	xfs_stats.h	/^	__uint32_t		xs_icluster_flushinode;$/;"	m	struct:xfsstats
xs_iflush_count	xfs_stats.h	/^	__uint32_t		xs_iflush_count;$/;"	m	struct:xfsstats
xs_ig_attempts	xfs_stats.h	/^	__uint32_t		xs_ig_attempts;$/;"	m	struct:xfsstats
xs_ig_attrchg	xfs_stats.h	/^	__uint32_t		xs_ig_attrchg;$/;"	m	struct:xfsstats
xs_ig_dup	xfs_stats.h	/^	__uint32_t		xs_ig_dup;$/;"	m	struct:xfsstats
xs_ig_found	xfs_stats.h	/^	__uint32_t		xs_ig_found;$/;"	m	struct:xfsstats
xs_ig_frecycle	xfs_stats.h	/^	__uint32_t		xs_ig_frecycle;$/;"	m	struct:xfsstats
xs_ig_missed	xfs_stats.h	/^	__uint32_t		xs_ig_missed;$/;"	m	struct:xfsstats
xs_ig_reclaims	xfs_stats.h	/^	__uint32_t		xs_ig_reclaims;$/;"	m	struct:xfsstats
xs_log_blocks	xfs_stats.h	/^	__uint32_t		xs_log_blocks;$/;"	m	struct:xfsstats
xs_log_force	xfs_stats.h	/^	__uint32_t		xs_log_force;$/;"	m	struct:xfsstats
xs_log_force_sleep	xfs_stats.h	/^	__uint32_t		xs_log_force_sleep;$/;"	m	struct:xfsstats
xs_log_noiclogs	xfs_stats.h	/^	__uint32_t		xs_log_noiclogs;$/;"	m	struct:xfsstats
xs_log_writes	xfs_stats.h	/^	__uint32_t		xs_log_writes;$/;"	m	struct:xfsstats
xs_look_exlist	xfs_stats.h	/^	__uint32_t		xs_look_exlist;$/;"	m	struct:xfsstats
xs_push_ail	xfs_stats.h	/^	__uint32_t		xs_push_ail;$/;"	m	struct:xfsstats
xs_push_ail_flush	xfs_stats.h	/^	__uint32_t		xs_push_ail_flush;$/;"	m	struct:xfsstats
xs_push_ail_flushing	xfs_stats.h	/^	__uint32_t		xs_push_ail_flushing;$/;"	m	struct:xfsstats
xs_push_ail_locked	xfs_stats.h	/^	__uint32_t		xs_push_ail_locked;$/;"	m	struct:xfsstats
xs_push_ail_pinned	xfs_stats.h	/^	__uint32_t		xs_push_ail_pinned;$/;"	m	struct:xfsstats
xs_push_ail_pushbuf	xfs_stats.h	/^	__uint32_t		xs_push_ail_pushbuf;$/;"	m	struct:xfsstats
xs_push_ail_restarts	xfs_stats.h	/^	__uint32_t		xs_push_ail_restarts;$/;"	m	struct:xfsstats
xs_push_ail_success	xfs_stats.h	/^	__uint32_t		xs_push_ail_success;$/;"	m	struct:xfsstats
xs_qm_dqcachehits	xfs_qm_stats.h	/^	__uint32_t		xs_qm_dqcachehits;$/;"	m	struct:xqmstats
xs_qm_dqcachemisses	xfs_qm_stats.h	/^	__uint32_t		xs_qm_dqcachemisses;$/;"	m	struct:xqmstats
xs_qm_dqinact_reclaims	xfs_qm_stats.h	/^	__uint32_t		xs_qm_dqinact_reclaims;$/;"	m	struct:xqmstats
xs_qm_dqreclaim_misses	xfs_qm_stats.h	/^	__uint32_t		xs_qm_dqreclaim_misses;$/;"	m	struct:xqmstats
xs_qm_dqreclaims	xfs_qm_stats.h	/^	__uint32_t		xs_qm_dqreclaims;$/;"	m	struct:xqmstats
xs_qm_dqshake_reclaims	xfs_qm_stats.h	/^	__uint32_t		xs_qm_dqshake_reclaims;$/;"	m	struct:xqmstats
xs_qm_dquot_dups	xfs_qm_stats.h	/^	__uint32_t		xs_qm_dquot_dups;$/;"	m	struct:xqmstats
xs_qm_dqwants	xfs_qm_stats.h	/^	__uint32_t		xs_qm_dqwants;$/;"	m	struct:xqmstats
xs_read_bytes	xfs_stats.h	/^	__uint64_t		xs_read_bytes;$/;"	m	struct:xfsstats
xs_read_calls	xfs_stats.h	/^	__uint32_t		xs_read_calls;$/;"	m	struct:xfsstats
xs_sleep_logspace	xfs_stats.h	/^	__uint32_t		xs_sleep_logspace;$/;"	m	struct:xfsstats
xs_trans_async	xfs_stats.h	/^	__uint32_t		xs_trans_async;$/;"	m	struct:xfsstats
xs_trans_empty	xfs_stats.h	/^	__uint32_t		xs_trans_empty;$/;"	m	struct:xfsstats
xs_trans_sync	xfs_stats.h	/^	__uint32_t		xs_trans_sync;$/;"	m	struct:xfsstats
xs_try_logspace	xfs_stats.h	/^	__uint32_t		xs_try_logspace;$/;"	m	struct:xfsstats
xs_write_bytes	xfs_stats.h	/^	__uint64_t		xs_write_bytes;$/;"	m	struct:xfsstats
xs_write_calls	xfs_stats.h	/^	__uint32_t		xs_write_calls;$/;"	m	struct:xfsstats
xs_xstrat_bytes	xfs_stats.h	/^	__uint64_t		xs_xstrat_bytes;$/;"	m	struct:xfsstats
xs_xstrat_quick	xfs_stats.h	/^	__uint32_t		xs_xstrat_quick;$/;"	m	struct:xfsstats
xs_xstrat_split	xfs_stats.h	/^	__uint32_t		xs_xstrat_split;$/;"	m	struct:xfsstats
